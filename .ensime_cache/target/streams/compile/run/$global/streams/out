[info] Running org.ensime.server.Server 
[info] 22:05:36.612 [main] WARN  org.ensime.config.EnsimeModule - /home/wohanley/software/dance-suggestions/target/scala-2.11/classes does not exist, creating
[info] 22:05:36.636 [main] WARN  org.ensime.config.EnsimeModule - /home/wohanley/software/dance-suggestions/target/scala-2.11/test-classes does not exist, creating
[info] 22:05:36.637 [main] WARN  org.ensime.config.EnsimeModule - /home/wohanley/software/dance-suggestions/src/main/java does not exist, creating
[info] 22:05:36.638 [main] WARN  org.ensime.config.EnsimeModule - /home/wohanley/software/dance-suggestions/src/test/scala does not exist, creating
[info] 22:05:36.639 [main] WARN  org.ensime.config.EnsimeModule - /home/wohanley/software/dance-suggestions/src/test/java does not exist, creating
[info] 22:05:37.914 [default-akka.actor.default-dispatcher-4] INFO  akka.event.slf4j.Slf4jLogger - Slf4jLogger started
[info] 22:05:37.949 [main] INFO  org.ensime.server.Server - ENSIME Server on 127.0.0.1:53671
[info] 22:05:37.954 [main] INFO  org.ensime.server.Server - Environment:
[info]   OS : Linux
[info]   Java : OpenJDK 64-Bit Server VM 24.75-b04, OpenJDK Runtime Environment 1.7.0_75-b13
[info]   Scala : version 2.11.5
[info]   Ensime : 0.9.10-SNAPSHOT
[info] 22:05:37.954 [main] INFO  org.ensime.server.Server - Creating portfile /home/wohanley/software/dance-suggestions/.ensime_cache/port
[info] 22:05:37.954 [main] INFO  org.ensime.server.Server - creating portfile /home/wohanley/software/dance-suggestions/.ensime_cache/port
[info] 22:05:38.004 [default-akka.actor.default-dispatcher-3] DEBUG org.ensime.core.Project$ProjectActor - started (org.ensime.core.Project$ProjectActor@40cc918d)
[info] 22:05:38.102 [main] INFO  o.a.c.v.i.StandardFileSystemManager - Using "/tmp/vfs_cache" as temporary files store.
[info] 22:05:39.177 [main] INFO  org.ensime.indexer.DatabaseService - creating the search database
[info] 22:05:39.724 [main] WARN  com.jolbox.bonecp.BoneCPConfig - JDBC username was not set in config!
[info] 22:05:39.724 [main] WARN  com.jolbox.bonecp.BoneCPConfig - JDBC password was not set in config!
[info] 22:05:40.412 [main] INFO  org.ensime.indexer.ClassfileWatcher - Setting up new file watchers
[info] 22:05:40.742 [main] INFO  org.ensime.indexer.SearchService - removing 0 stale files from the index
[info] 22:05:40.835 [default-akka.actor.default-dispatcher-3] DEBUG org.ensime.core.Indexer - started (org.ensime.core.Indexer@793f31e5)
[info] 22:05:40.971 [pool-2-thread-1] DEBUG org.ensime.indexer.SearchService - indexing file:///home/wohanley/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.5.jar
[info] 22:05:40.971 [pool-2-thread-2] DEBUG org.ensime.indexer.SearchService - indexing file:///lib/jvm/default/jre/lib/rt.jar
[info] 22:05:41.465 [default-akka.actor.default-dispatcher-3] INFO  org.ensime.core.Analyzer - Presentation Compiler settings:
[info] Settings {
[info]   -verbose = false
[info]   -d = .
[info]   -classpath = /home/wohanley/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.5.jar:/home/wohanley/software/dance-suggestions/target/scala-2.11/classes:/home/wohanley/software/dance-suggestions/target/scala-2.11/test-classes
[info]   -Ypresentation-debug = false
[info]   -Ypresentation-verbose = false
[info]   -bootclasspath = /home/wohanley/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.5.jar
[info]   -usejavacp = false
[info] }
[info] 
[info] 22:05:43.189 [Thread-9] INFO  org.ensime.server.Server - Got connection, creating handler...
[info] 22:05:43.400 [default-akka.actor.default-dispatcher-5] DEBUG org.ensime.server.SocketHandler - started (org.ensime.server.SocketHandler@3b56c3e3)
[info] 22:05:43.721 [default-akka.actor.default-dispatcher-5] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:connection-info) 1)
[info] 22:05:43.899 [default-akka.actor.default-dispatcher-5] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:pid nil :implementation (:name "ENSIME-ReferenceServer") :version "0.8.11")) 1)
[info] 22:05:43.939 [default-akka.actor.default-dispatcher-5] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:init-project) 2)
[info] 22:05:43.957 [default-akka.actor.default-dispatcher-5] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 2)
[info] 22:06:00.290 [default-akka.actor.default-dispatcher-3] DEBUG org.ensime.core.Analyzer - started (org.ensime.core.Analyzer@3e3aa36a)
[info] 22:06:00.292 [default-akka.actor.default-dispatcher-3] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:background-message 105 "Initializing Analyzer. Please wait...")
[info] 22:06:00.519 [default-akka.actor.default-dispatcher-3] DEBUG org.ensime.core.Analyzer - Analyzer ready in 0.232 seconds.
[info] 22:06:00.522 [default-akka.actor.default-dispatcher-3] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:compiler-ready)
[info] 22:06:00.525 [default-akka.actor.default-dispatcher-8] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:06:00.591 [default-akka.actor.default-dispatcher-2] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 76 (var val varField valField functionCall operator param class trait object package)) 3)
[info] 22:06:00.723 [default-akka.actor.default-dispatcher-3] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  \n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n")) 4)
[info] 22:06:00.766 [default-akka.actor.default-dispatcher-3] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 76 (var val varField valField functionCall operator param class trait object package)) 5)
[info] 22:06:04.130 [default-akka.actor.default-dispatcher-3] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 29 :end 73 :line 5 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:06:04.758 [default-akka.actor.default-dispatcher-3] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((param 45 55) (trait 57 68) (class 71 73)))) 3)
[info] 22:06:04.764 [default-akka.actor.default-dispatcher-3] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((param 45 55) (trait 57 68) (class 71 73)))) 5)
[info] 22:06:04.839 [default-akka.actor.default-dispatcher-3] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:06:04.920 [default-akka.actor.default-dispatcher-8] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 29 :end 73 :line 5 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:06:04.929 [default-akka.actor.default-dispatcher-2] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 4)
[info] 22:06:04.936 [default-akka.actor.default-dispatcher-2] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:07:15.832 [ForkJoinPool-2-worker-5] DEBUG org.ensime.indexer.SearchService - committing index to disk...
[info] 22:07:17.714 [ForkJoinPool-2-worker-5] DEBUG org.ensime.indexer.SearchService - ...done committing index
[info] 22:07:17.715 [ForkJoinPool-2-worker-5] DEBUG org.ensime.core.Project - indexed 2 and removed 0
[info] 22:07:17.716 [default-akka.actor.default-dispatcher-5] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:indexer-ready)
[info] 22:08:01.166 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  se\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 27 1000000 nil t) 6)
[info] 22:08:01.198 [default-akka.actor.default-dispatcher-4] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(se)
[info] 22:08:01.315 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sea\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 28 1000000 nil t) 7)
[info] 22:08:01.456 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  seal\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 29 1000000 nil t) 8)
[info] 22:08:01.533 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  seale\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 30 1000000 nil t) 9)
[info] 22:08:01.681 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 31 1000000 nil t) 10)
[info] 22:08:01.881 [default-akka.actor.default-dispatcher-4] INFO  o.e.core.RichPresentationCompiler - Found 694 members.
[info] 22:08:01.900 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 14.
[info] 22:08:01.917 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "se" :completions ((:name "seqToCharSequence" :type-sig (((("xs" "IndexedSeq[Char]"))) "CharSequence") :type-id 4 :is-callable t) (:name "Serializable" :type-sig (() "<notype>") :type-id 7) (:name "SecurityManager" :type-sig (() "SecurityManager$") :type-id 10) (:name "SerialVersionUID" :type-sig (() "<notype>") :type-id 7) (:name "SecurityException" :type-sig (() "SecurityException$") :type-id 12) (:name "Set" :type-sig (() "Set$") :type-id 2) (:name "Set" :type-sig (() "Set") :type-id 3) (:name "Seq" :type-sig (() "Seq$") :type-id 5) (:name "Seq" :type-sig (() "Seq") :type-id 6) (:name "Serializable" :type-sig (() "Serializable") :type-id 8) (:name "SeqCharSequence" :type-sig (() "SeqCharSequence") :type-id 1) (:name "SecurityManager" :type-sig (() "SecurityManager") :type-id 11) (:name "SerialVersionUID" :type-sig (() "SerialVersionUID") :type-id 9) (:name "SecurityException" :type-sig (() "SecurityException") :type-id 13)))) 6)
[info] 22:08:01.930 [default-akka.actor.default-dispatcher-4] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(sea)
[info] 22:08:02.042 [default-akka.actor.default-dispatcher-4] INFO  o.e.core.RichPresentationCompiler - Found 688 members.
[info] 22:08:02.051 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:08:02.051 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "sea")) 7)
[info] 22:08:02.063 [default-akka.actor.default-dispatcher-4] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(seal)
[info] 22:08:02.145 [default-akka.actor.default-dispatcher-4] INFO  o.e.core.RichPresentationCompiler - Found 688 members.
[info] 22:08:02.152 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:08:02.153 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "seal")) 8)
[info] 22:08:02.164 [default-akka.actor.default-dispatcher-4] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(seale)
[info] 22:08:02.245 [default-akka.actor.default-dispatcher-4] INFO  o.e.core.RichPresentationCompiler - Found 688 members.
[info] 22:08:02.252 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:08:02.253 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "seale")) 9)
[info] 22:08:02.270 [default-akka.actor.default-dispatcher-4] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term addBodyPart
[info] 22:08:02.354 [default-akka.actor.default-dispatcher-4] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:08:02.361 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:08:02.362 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "sealed")) 10)
[info] 22:08:02.497 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed ab\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 34 1000000 nil t) 11)
[info] 22:08:02.536 [default-akka.actor.default-dispatcher-4] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:08:02.574 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed abs\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 35 1000000 nil t) 12)
[info] 22:08:02.612 [default-akka.actor.default-dispatcher-4] INFO  o.e.core.RichPresentationCompiler - Found 687 members.
[info] 22:08:02.616 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 4.
[info] 22:08:02.618 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ab" :completions ((:name "AbstractMethodError" :type-sig (() "AbstractMethodError$") :type-id 17) (:name "AbstractMethodError" :type-sig (() "AbstractMethodError") :type-id 14) (:name "AbstractStringBuilder" :type-sig (() "AbstractStringBuilder$") :type-id 15) (:name "AbstractStringBuilder" :type-sig (() "AbstractStringBuilder") :type-id 16)))) 11)
[info] 22:08:02.638 [default-akka.actor.default-dispatcher-4] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:08:02.676 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:08:02.706 [default-akka.actor.default-dispatcher-4] INFO  o.e.core.RichPresentationCompiler - Found 687 members.
[info] 22:08:02.712 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 4.
[info] 22:08:02.714 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "abs" :completions ((:name "AbstractMethodError" :type-sig (() "AbstractMethodError$") :type-id 17) (:name "AbstractMethodError" :type-sig (() "AbstractMethodError") :type-id 14) (:name "AbstractStringBuilder" :type-sig (() "AbstractStringBuilder$") :type-id 15) (:name "AbstractStringBuilder" :type-sig (() "AbstractStringBuilder") :type-id 16)))) 12)
[info] 22:08:04.197 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed abstract \n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n")) 13)
[info] 22:08:04.212 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 92 (var val varField valField functionCall operator param class trait object package)) 14)
[info] 22:08:04.216 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:08:04.255 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "`sealed' modifier can be used only for classes" :beg 25 :end 89 :line 5 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:08:04.258 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "`abstract' modifier can be used only for classes; it should be omitted for abstract members" :beg 25 :end 89 :line 5 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:08:04.260 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 25 :end 89 :line 5 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:08:04.264 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 13)
[info] 22:08:04.267 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((param 61 71) (trait 73 84) (class 87 89)))) 14)
[info] 22:08:04.268 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:08:04.674 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed abstract cl\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 43 1000000 nil t) 15)
[info] 22:08:04.731 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:08:04.761 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed abstract cla\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 44 1000000 nil t) 16)
[info] 22:08:04.880 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 687 members.
[info] 22:08:04.894 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 25.
[info] 22:08:04.912 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cl" :completions ((:name "classOf" :type-sig (() "Class[T]") :type-id 22 :is-callable t) (:name "classManifest" :type-sig (((("m" "ClassTag[T]"))) "ClassTag[T]") :type-id 18 :is-callable t) (:name "Class" :type-sig (() "Class$") :type-id 41) (:name "Cloneable" :type-sig (() "<notype>") :type-id 7) (:name "ClassValue" :type-sig (() "ClassValue$") :type-id 37) (:name "ClassLoader" :type-sig (() "ClassLoader$") :type-id 30) (:name "ClassFormatError" :type-sig (() "ClassFormatError$") :type-id 35) (:name "ClassCastException" :type-sig (() "ClassCastException$") :type-id 34) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError$") :type-id 39) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException$") :type-id 32) (:name "CloneNotSupportedException" :type-sig (() "CloneNotSupportedException$") :type-id 28) (:name "Class" :type-sig (() "Class") :type-id 21) (:name "Cloneable" :type-sig (() "Cloneable") :type-id 25) (:name "ClassValue" :type-sig (() "ClassValue") :type-id 38) (:name "ClassLoader" :type-sig (() "ClassLoader") :type-id 31) (:name "ClassManifest" :type-sig (() "ClassManifestFactory$") :type-id 19) (:name "ClassManifest" :type-sig (() "ClassTag") :type-id 20) (:name "ClassFormatError" :type-sig (() "ClassFormatError") :type-id 36) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper$") :type-id 26) (:name "ClassCastException" :type-sig (() "ClassCastException") :type-id 24) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError") :type-id 40) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException") :type-id 33) (:name "CloneNotSupportedException" :type-sig (() "CloneNotSupportedException") :type-id 29) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper") :type-id 27) (:name "clone" :type-sig ((()) "Object") :type-id 23 :is-callable t)))) 15)
[info] 22:08:04.959 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:08:05.107 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 687 members.
[info] 22:08:05.129 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 20.
[info] 22:08:05.148 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cla" :completions ((:name "classOf" :type-sig (() "Class[T]") :type-id 22 :is-callable t) (:name "classManifest" :type-sig (((("m" "ClassTag[T]"))) "ClassTag[T]") :type-id 42 :is-callable t) (:name "Class" :type-sig (() "Class$") :type-id 41) (:name "ClassValue" :type-sig (() "ClassValue$") :type-id 37) (:name "ClassLoader" :type-sig (() "ClassLoader$") :type-id 30) (:name "ClassFormatError" :type-sig (() "ClassFormatError$") :type-id 35) (:name "ClassCastException" :type-sig (() "ClassCastException$") :type-id 34) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError$") :type-id 39) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException$") :type-id 32) (:name "Class" :type-sig (() "Class") :type-id 21) (:name "ClassValue" :type-sig (() "ClassValue") :type-id 38) (:name "ClassLoader" :type-sig (() "ClassLoader") :type-id 31) (:name "ClassManifest" :type-sig (() "ClassManifestFactory$") :type-id 19) (:name "ClassManifest" :type-sig (() "ClassTag") :type-id 20) (:name "ClassFormatError" :type-sig (() "ClassFormatError") :type-id 36) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper$") :type-id 26) (:name "ClassCastException" :type-sig (() "ClassCastException") :type-id 24) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError") :type-id 40) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException") :type-id 33) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper") :type-id 27)))) 16)
[info] 22:08:05.952 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed abstract cl\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 43 1000000 nil t) 17)
[info] 22:08:06.008 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:08:06.133 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 687 members.
[info] 22:08:06.146 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 25.
[info] 22:08:06.164 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cl" :completions ((:name "classOf" :type-sig (() "Class[T]") :type-id 22 :is-callable t) (:name "classManifest" :type-sig (((("m" "ClassTag[T]"))) "ClassTag[T]") :type-id 43 :is-callable t) (:name "Class" :type-sig (() "Class$") :type-id 41) (:name "Cloneable" :type-sig (() "<notype>") :type-id 7) (:name "ClassValue" :type-sig (() "ClassValue$") :type-id 37) (:name "ClassLoader" :type-sig (() "ClassLoader$") :type-id 30) (:name "ClassFormatError" :type-sig (() "ClassFormatError$") :type-id 35) (:name "ClassCastException" :type-sig (() "ClassCastException$") :type-id 34) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError$") :type-id 39) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException$") :type-id 32) (:name "CloneNotSupportedException" :type-sig (() "CloneNotSupportedException$") :type-id 28) (:name "Class" :type-sig (() "Class") :type-id 21) (:name "Cloneable" :type-sig (() "Cloneable") :type-id 25) (:name "ClassValue" :type-sig (() "ClassValue") :type-id 38) (:name "ClassLoader" :type-sig (() "ClassLoader") :type-id 31) (:name "ClassManifest" :type-sig (() "ClassManifestFactory$") :type-id 19) (:name "ClassManifest" :type-sig (() "ClassTag") :type-id 20) (:name "ClassFormatError" :type-sig (() "ClassFormatError") :type-id 36) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper$") :type-id 26) (:name "ClassCastException" :type-sig (() "ClassCastException") :type-id 24) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError") :type-id 40) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException") :type-id 33) (:name "CloneNotSupportedException" :type-sig (() "CloneNotSupportedException") :type-id 29) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper") :type-id 27) (:name "clone" :type-sig ((()) "Object") :type-id 23 :is-callable t)))) 17)
[info] 22:08:07.118 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed tr\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 34 1000000 nil t) 18)
[info] 22:08:07.177 [default-akka.actor.default-dispatcher-22] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:08:07.229 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed tra\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 35 1000000 nil t) 19)
[info] 22:08:07.317 [default-akka.actor.default-dispatcher-22] INFO  o.e.core.RichPresentationCompiler - Found 687 members.
[info] 22:08:07.334 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 7.
[info] 22:08:07.344 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "tr" :completions ((:name "transient" :type-sig (() "<notype>") :type-id 7) (:name "Triple" :type-sig (() "Triple$") :type-id 44) (:name "Triple" :type-sig (((("x" "A") ("y" "B") ("z" "C"))) "Tuple3[A, B, C]") :type-id 45 :is-callable t) (:name "transient" :type-sig (() "transient") :type-id 50) (:name "Triple" :type-sig (() "Tuple3") :type-id 46) (:name "Traversable" :type-sig (() "Traversable$") :type-id 47) (:name "Traversable" :type-sig (() "Traversable") :type-id 48) (:name "TraversableOnce" :type-sig (() "TraversableOnce") :type-id 49)))) 18)
[info] 22:08:07.365 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trai\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 36 1000000 nil t) 20)
[info] 22:08:07.413 [default-akka.actor.default-dispatcher-22] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:08:07.540 [default-akka.actor.default-dispatcher-22] INFO  o.e.core.RichPresentationCompiler - Found 687 members.
[info] 22:08:07.557 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:08:07.563 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "tra" :completions ((:name "transient" :type-sig (() "<notype>") :type-id 7) (:name "transient" :type-sig (() "transient") :type-id 50) (:name "Traversable" :type-sig (() "Traversable$") :type-id 47) (:name "Traversable" :type-sig (() "Traversable") :type-id 48) (:name "TraversableOnce" :type-sig (() "TraversableOnce") :type-id 49)))) 19)
[info] 22:08:07.631 [default-akka.actor.default-dispatcher-22] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:08:07.732 [default-akka.actor.default-dispatcher-22] INFO  o.e.core.RichPresentationCompiler - Found 687 members.
[info] 22:08:07.742 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:08:07.744 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "trai")) 20)
[info] 22:08:08.697 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait \n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n")) 21)
[info] 22:08:08.708 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 89 (var val varField valField functionCall operator param class trait object package)) 22)
[info] 22:08:08.714 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:08:08.729 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but 'def' found." :beg 42 :end 42 :line 5 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:08:08.763 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 21)
[info] 22:08:08.766 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 22)
[info] 22:08:08.767 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:08:09.980 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait Bo\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 40 1000000 nil t) 23)
[info] 22:08:10.015 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Bo>)
[info] 22:08:10.022 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait Bod\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 41 1000000 nil t) 24)
[info] 22:08:10.152 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:08:10.170 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 10.
[info] 22:08:10.203 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait Body\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 42 1000000 nil t) 25)
[info] 22:08:10.486 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyP\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 43 1000000 nil t) 26)
[info] 22:08:10.606 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPa\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 44 1000000 nil t) 27)
[info] 22:08:10.802 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPar\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 45 1000000 nil t) 28)
[info] 22:08:10.997 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Bod>)
[info] 22:08:11.016 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Bo" :type-sig (() "Bo") :type-id 51) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.BooleanControl") (:name "BorderUIResource" :type-sig (() "javax.swing.plaf.BorderUIResource") :type-id -1 :to-insert "javax.swing.pl...
[info] 22:08:11.031 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n") 46 1000000 nil t) 29)
[info] 22:08:11.119 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:08:11.125 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:08:11.129 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "Bod" :type-sig (() "Bod") :type-id 61) (:name "body" :type-sig (() "body$") :type-id 52)))) 24)
[info] 22:08:11.174 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Body>)
[info] 22:08:11.286 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:08:11.290 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:08:11.293 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Body" :completions ((:name "Body" :type-sig (() "Body") :type-id 62) (:name "body" :type-sig (() "body$") :type-id 52)))) 25)
[info] 22:08:11.335 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyP>)
[info] 22:08:11.456 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:08:11.459 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:08:11.461 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyP" :completions ((:name "BodyP" :type-sig (() "BodyP") :type-id 63)))) 26)
[info] 22:08:11.502 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPa>)
[info] 22:08:11.619 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:08:11.624 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:08:11.626 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPa" :completions ((:name "BodyPa" :type-sig (() "BodyPa") :type-id 64)))) 27)
[info] 22:08:11.669 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPar>)
[info] 22:08:11.695 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]): {}\n}\n")) 30)
[info] 22:08:11.739 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 97 (var val varField valField functionCall operator param class trait object package)) 31)
[info] 22:08:11.776 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:08:11.780 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:08:11.791 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPar" :completions ((:name "BodyPar" :type-sig (() "BodyPar") :type-id 65)))) 28)
[info] 22:08:11.824 [default-akka.actor.default-dispatcher-13] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPart>)
[info] 22:08:12.022 [default-akka.actor.default-dispatcher-13] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:08:12.027 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:08:12.030 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPart" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 66)))) 29)
[info] 22:08:12.043 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:08:12.085 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 50 :end 94 :line 5 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:08:12.092 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 30)
[info] 22:08:12.096 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((param 66 76) (trait 78 89) (class 92 94)))) 31)
[info] 22:08:12.097 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:08:24.657 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 32)
[info] 22:08:24.664 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 96 (var val varField valField functionCall operator param class trait object package)) 33)
[info] 22:08:24.672 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:08:24.682 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 95 :end 95 :line 5 :col 48 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:08:24.712 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 32)
[info] 22:08:24.715 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:08:24.715 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((param 66 76) (trait 78 89)))) 33)
[info] 22:08:28.195 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}")) 34)
[info] 22:08:28.205 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:08:28.212 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 97 (var val varField valField functionCall operator param class trait object package)) 35)
[info] 22:08:28.229 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 34)
[info] 22:08:28.232 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((param 66 76) (trait 78 89)))) 35)
[info] 22:08:28.232 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:08:28.371 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 36)
[info] 22:08:28.379 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:08:28.384 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 98 (var val varField valField functionCall operator param class trait object package)) 37)
[info] 22:08:28.396 [default-akka.actor.default-dispatcher-22] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 36)
[info] 22:08:28.397 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((param 66 76) (trait 78 89)))) 37)
[info] 22:08:28.397 [default-akka.actor.default-dispatcher-13] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:09:25.694 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  \n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 38)
[info] 22:09:25.704 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:09:25.709 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:09:25.711 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:09:25.712 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 101 (var val varField valField functionCall operator param class trait object package)) 39)
[info] 22:09:25.728 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 38)
[info] 22:09:25.729 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((param 69 79) (trait 81 92)))) 39)
[info] 22:09:25.730 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:09:25.910 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  ca\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 51 1000000 nil t) 40)
[info] 22:09:25.929 [default-akka.actor.default-dispatcher-21] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(ca)
[info] 22:09:25.964 [default-akka.actor.default-dispatcher-21] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:09:25.965 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:09:25.966 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ca")) 40)
[info] 22:09:26.008 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  cas\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 52 1000000 nil t) 41)
[info] 22:09:26.023 [default-akka.actor.default-dispatcher-21] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(cas)
[info] 22:09:26.048 [default-akka.actor.default-dispatcher-21] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:09:26.050 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:09:26.051 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cas")) 41)
[info] 22:09:26.225 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 53 1000000 nil t) 42)
[info] 22:09:26.246 [default-akka.actor.default-dispatcher-4] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:09:26.268 [default-akka.actor.default-dispatcher-4] INFO  o.e.core.RichPresentationCompiler - Found 688 members.
[info] 22:09:26.270 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:09:26.270 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "case")) 42)
[info] 22:09:27.188 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case ob\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 56 1000000 nil t) 43)
[info] 22:09:27.220 [default-akka.actor.default-dispatcher-4] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:09:27.249 [default-akka.actor.default-dispatcher-4] INFO  o.e.core.RichPresentationCompiler - Found 688 members.
[info] 22:09:27.251 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:09:27.252 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ob" :completions ((:name "Object" :type-sig (() "Object$") :type-id 67) (:name "Object" :type-sig (() "Object") :type-id 68)))) 43)
[info] 22:09:28.695 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object \n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 44)
[info] 22:09:28.702 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 113 (var val varField valField functionCall operator param class trait object package)) 45)
[info] 22:09:28.705 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:09:28.711 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but 'def' found." :beg 65 :end 65 :line 6 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:09:28.830 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 44)
[info] 22:09:28.831 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:09:28.832 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 45)
[info] 22:09:34.678 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object He\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 63 1000000 nil t) 46)
[info] 22:09:34.720 [default-akka.actor.default-dispatcher-21] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local He>)
[info] 22:09:34.790 [default-akka.actor.default-dispatcher-21] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:09:34.791 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:09:34.793 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Hea\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 64 1000000 nil t) 47)
[info] 22:09:34.796 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "He" :completions ((:name "He" :type-sig (() "He$") :type-id 69) (:name "HexBinaryAdapter" :type-sig (() "javax.xml.bind.annotation.adapters.HexBinaryAdapter") :type-id -1 :to-insert "javax.xml.bind.annotation.adapters.HexBinaryAdapter") (:name "HeadlessException" :type-sig (() "java.awt.HeadlessException") :type-id -1 :to-insert "java.awt.HeadlessException")))) 46)
[info] 22:09:34.816 [default-akka.actor.default-dispatcher-21] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Hea>)
[info] 22:09:34.857 [default-akka.actor.default-dispatcher-21] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:09:34.859 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:09:34.888 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Hea" :completions ((:name "Hea" :type-sig (() "Hea$") :type-id 70) (:name "HeadlessException" :type-sig (() "java.awt.HeadlessException") :type-id -1 :to-insert "java.awt.HeadlessException")))) 47)
[info] 22:09:35.375 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head ex\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 68 1000000 nil t) 48)
[info] 22:09:35.428 [default-akka.actor.default-dispatcher-21] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:09:35.474 [default-akka.actor.default-dispatcher-21] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:09:35.475 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:09:35.476 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ex" :completions ((:name "exceptionWrapper" :type-sig (((("exc" "Throwable"))) "RichException") :type-id 71 :is-callable t) (:name "Exception" :type-sig (() "Exception$") :type-id 75) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError$") :type-id 73) (:name "Exception" :type-sig (() "Exception") :type-id 72) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError") :type-id 74)))) 48)
[info] 22:09:35.555 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head ext\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 69 1000000 nil t) 49)
[info] 22:09:35.604 [default-akka.actor.default-dispatcher-21] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:09:35.628 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head exte\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 70 1000000 nil t) 50)
[info] 22:09:35.644 [default-akka.actor.default-dispatcher-21] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:09:35.645 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:09:35.647 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ext")) 49)
[info] 22:09:35.670 [default-akka.actor.default-dispatcher-21] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:09:35.697 [default-akka.actor.default-dispatcher-21] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:09:35.697 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:09:35.698 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exte")) 50)
[info] 22:09:35.750 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head exten\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 71 1000000 nil t) 51)
[info] 22:09:35.785 [default-akka.actor.default-dispatcher-21] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:09:35.815 [default-akka.actor.default-dispatcher-21] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:09:35.816 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:09:35.817 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exten")) 51)
[info] 22:09:35.824 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head extend\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 72 1000000 nil t) 52)
[info] 22:09:35.852 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:09:35.879 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:09:35.879 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:09:35.880 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "extend")) 52)
[info] 22:09:35.975 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head extends\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 73 1000000 nil t) 53)
[info] 22:09:36.012 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Head>)
[info] 22:09:36.037 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:09:36.038 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:09:36.039 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "extends")) 53)
[info] 22:09:36.578 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head extends Bo\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 76 1000000 nil t) 54)
[info] 22:09:36.606 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bo)
[info] 22:09:36.639 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:09:36.640 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 10.
[info] 22:09:36.646 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head extends Bod\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 77 1000000 nil t) 55)
[info] 22:09:36.708 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPart" :type-sig (() "BodyPart") :type-id 76) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.BooleanControl") (:name "BorderUIResource" :type-sig (() "javax.swing.plaf.BorderUIResource") :type-id -1 :to-insert "ja...
[info] 22:09:36.717 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bod)
[info] 22:09:36.750 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:09:36.751 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:09:36.752 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 77) (:name "body" :type-sig (() "body$") :type-id 52)))) 55)
[info] 22:09:37.577 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 82 1000000 nil t) 56)
[info] 22:09:37.600 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Select(This(package object body), BodyPart)
[info] 22:09:37.660 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:09:37.662 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:09:37.662 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPart" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 78)))) 56)
[info] 22:09:38.194 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 57)
[info] 22:09:38.199 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 134 (var val varField valField functionCall operator param class trait object package)) 58)
[info] 22:09:38.202 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:09:38.236 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 57)
[info] 22:09:38.237 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 74 82) (param 102 112) (trait 114 125)))) 58)
[info] 22:09:38.238 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:09:38.252 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 59)
[info] 22:09:38.257 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:09:38.261 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 134 (var val varField valField functionCall operator param class trait object package)) 60)
[info] 22:09:38.285 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 59)
[info] 22:09:38.287 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 74 82) (param 102 112) (trait 114 125)))) 60)
[info] 22:09:38.287 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:09:55.732 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:09:55.733 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:09:56.195 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 61)
[info] 22:09:56.202 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:09:56.209 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 137 (var val varField valField functionCall operator param class trait object package)) 62)
[info] 22:09:56.245 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 61)
[info] 22:09:56.246 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:09:56.246 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 77 85) (param 105 115) (trait 117 128)))) 62)
[info] 22:09:57.317 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /*\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 27 1000000 nil t) 63)
[info] 22:09:57.336 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:EmptyTree
[info] 22:09:57.381 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 686 members.
[info] 22:09:57.384 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:09:57.385 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "/*")) 63)
[info] 22:09:58.694 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /**\n    \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 64)
[info] 22:09:58.700 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 145 (var val varField valField functionCall operator param class trait object package)) 65)
[info] 22:09:58.703 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:09:58.705 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:09:58.709 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:09:58.710 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:09:58.710 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 144 :end 144 :line 9 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:09:58.721 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 64)
[info] 22:09:58.722 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:09:58.723 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 65)
[info] 22:10:04.195 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favo\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 66)
[info] 22:10:04.202 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:10:04.206 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:04.207 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:04.208 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:04.214 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 163 :end 163 :line 8 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:04.216 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 164 (var val varField valField functionCall operator param class trait object package)) 67)
[info] 22:10:04.220 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 66)
[info] 22:10:04.221 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 67)
[info] 22:10:04.221 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:10:07.695 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 68)
[info] 22:10:07.703 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:10:07.709 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:07.709 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:07.710 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:07.711 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 176 :end 176 :line 8 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:07.712 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 177 (var val varField valField functionCall operator param class trait object package)) 69)
[info] 22:10:07.721 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 68)
[info] 22:10:07.722 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 69)
[info] 22:10:07.723 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:10:13.694 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala. \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 70)
[info] 22:10:13.704 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:10:13.707 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:13.708 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:13.711 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:13.711 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 208 (var val varField valField functionCall operator param class trait object package)) 71)
[info] 22:10:13.713 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 207 :end 207 :line 8 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:13.724 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 70)
[info] 22:10:13.725 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 71)
[info] 22:10:13.725 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:10:20.195 [default-akka.actor.default-dispatcher-61] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 72)
[info] 22:10:20.203 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:10:20.205 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:20.206 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:20.208 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:20.208 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 219 :end 219 :line 9 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:20.211 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 220 (var val varField valField functionCall operator param class trait object package)) 73)
[info] 22:10:20.218 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 72)
[info] 22:10:20.219 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 73)
[info] 22:10:20.219 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:10:26.695 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 74)
[info] 22:10:26.705 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:10:26.709 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:26.710 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:26.710 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:26.711 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 251 :end 251 :line 9 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:26.712 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 252 (var val varField valField functionCall operator param class trait object package)) 75)
[info] 22:10:26.725 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 74)
[info] 22:10:26.726 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 75)
[info] 22:10:26.726 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:10:37.194 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/how-to-model-type-safe-enum-types\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 76)
[info] 22:10:37.201 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:10:37.205 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 328 (var val varField valField functionCall operator param class trait object package)) 77)
[info] 22:10:37.206 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:37.207 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:37.207 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:37.208 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 327 :end 327 :line 9 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:37.215 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 76)
[info] 22:10:37.215 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:10:37.215 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 77)
[info] 22:10:39.197 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 78)
[info] 22:10:39.207 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:10:39.209 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:39.210 [default-akka.actor.default-dispatcher-21] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:39.212 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:39.213 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 251 :end 251 :line 9 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:10:39.217 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 252 (var val varField valField functionCall operator param class trait object package)) 79)
[info] 22:10:39.224 [default-akka.actor.default-dispatcher-60] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 78)
[info] 22:10:39.225 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 79)
[info] 22:10:39.226 [default-akka.actor.default-dispatcher-4] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:12:58.695 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: \n\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 80)
[info] 22:12:58.704 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:12:58.711 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:12:58.712 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:12:58.713 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 253 (var val varField valField functionCall operator param class trait object package)) 81)
[info] 22:12:58.714 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:12:58.715 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 252 :end 252 :line 10 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:12:58.720 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 80)
[info] 22:12:58.721 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 81)
[info] 22:12:58.721 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:01.694 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/how-to-model-type-safe-enum-types\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 82)
[info] 22:13:01.701 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:01.703 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:01.704 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:01.705 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:01.706 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 327 :end 327 :line 9 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:01.707 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 328 (var val varField valField functionCall operator param class trait object package)) 83)
[info] 22:13:01.714 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 82)
[info] 22:13:01.715 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 83)
[info] 22:13:01.715 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:07.195 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here:\n    http://stackoverflow.com/questions/1321745/how-to-model-type-safe-enum-types\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 84)
[info] 22:13:07.203 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:07.206 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:07.207 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:07.209 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:07.209 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 331 :end 331 :line 10 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:07.211 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 332 (var val varField valField functionCall operator param class trait object package)) 85)
[info] 22:13:07.221 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 84)
[info] 22:13:07.224 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 85)
[info] 22:13:07.224 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:10.695 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/how-to-model-type-safe-enum-types\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 86)
[info] 22:13:10.702 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:10.705 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:10.705 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:10.708 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:10.709 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 327 :end 327 :line 9 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:10.716 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 328 (var val varField valField functionCall operator param class trait object package)) 87)
[info] 22:13:10.721 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 86)
[info] 22:13:10.722 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 87)
[info] 22:13:10.722 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:18.195 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/\n    how-to-model-type-safe-enum-types\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 88)
[info] 22:13:18.203 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:18.206 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:18.207 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:18.208 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:18.209 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 332 :end 332 :line 10 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:18.211 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 333 (var val varField valField functionCall operator param class trait object package)) 89)
[info] 22:13:18.220 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 88)
[info] 22:13:18.221 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 89)
[info] 22:13:18.222 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:21.194 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/\n    * how-to-model-type-safe-enum-types \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 90)
[info] 22:13:21.203 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:21.205 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:21.206 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:21.207 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:21.207 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 335 :end 335 :line 10 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:21.211 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 336 (var val varField valField functionCall operator param class trait object package)) 91)
[info] 22:13:21.220 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 90)
[info] 22:13:21.221 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 91)
[info] 22:13:21.221 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:23.695 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/\n    * how-to-model-type-safe-enum-types and here\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 92)
[info] 22:13:23.703 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:23.706 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:23.707 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:23.710 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 344 (var val varField valField functionCall operator param class trait object package)) 93)
[info] 22:13:23.713 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:23.714 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 343 :end 343 :line 10 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:23.725 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 92)
[info] 22:13:23.726 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:23.727 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 93)
[info] 22:13:26.194 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/\n    * how-to-model-type-safe-enum-types and here: \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 94)
[info] 22:13:26.201 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:26.203 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:26.204 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:26.206 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:26.206 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 345 :end 345 :line 10 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:26.210 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 346 (var val varField valField functionCall operator param class trait object package)) 95)
[info] 22:13:26.217 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 94)
[info] 22:13:26.217 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 95)
[info] 22:13:26.218 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:31.194 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/\n    * how-to-model-type-safe-enum-types and here: http://stackoverflow.com/questions/11203268/what-is-a-sealed-trait\n  sealed trait BodyPart\n  case object Head extends BodyPa...
[info] 22:13:31.201 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:31.206 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:31.207 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:31.207 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:31.207 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 411 :end 411 :line 10 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:31.207 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 412 (var val varField valField functionCall operator param class trait object package)) 97)
[info] 22:13:31.213 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 96)
[info] 22:13:31.214 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 97)
[info] 22:13:31.214 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:42.195 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/\n    * how-to-model-type-safe-enum-types and here: http://stackoverflow.com/\n    questions/11203268/what-is-a-sealed-trait\n  sealed trait BodyPart\n  case object Head extends ...
[info] 22:13:42.203 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:42.207 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:42.208 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:42.209 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:42.210 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 416 :end 416 :line 11 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:42.210 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 417 (var val varField valField functionCall operator param class trait object package)) 99)
[info] 22:13:42.219 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 98)
[info] 22:13:42.220 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 99)
[info] 22:13:42.221 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:44.401 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 100)
[info] 22:13:44.414 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:44.416 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:44.417 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:44.420 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:44.421 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 419 (var val varField valField functionCall operator param class trait object package)) 101)
[info] 22:13:44.422 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 418 :end 418 :line 11 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:13:44.427 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 100)
[info] 22:13:44.427 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 101)
[info] 22:13:44.427 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:47.195 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** This is my current favourite way of doing an enumeration in Scala, reasons\n    * for which are described here: http://stackoverflow.com/questions/1321745/\n    * how-to-model-type-safe-enum-types and here: http://stackoverflow.com/\n    * questions/11203268/what-is-a-sealed-trait */\n  sealed trait BodyPart\n  case object Head ext...
[info] 22:13:47.206 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:47.212 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 422 (var val varField valField functionCall operator param class trait object package)) 103)
[info] 22:13:47.240 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 102)
[info] 22:13:47.243 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 362 370) (param 390 400) (trait 402 413)))) 103)
[info] 22:13:47.243 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:54.694 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 104)
[info] 22:13:54.701 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:13:54.708 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 135 (var val varField valField functionCall operator param class trait object package)) 105)
[info] 22:13:54.737 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 104)
[info] 22:13:54.739 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 75 83) (param 103 113) (trait 115 126)))) 105)
[info] 22:13:54.739 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:13:56.331 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /*\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 27 1000000 nil t) 106)
[info] 22:13:56.345 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:EmptyTree
[info] 22:13:56.368 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 686 members.
[info] 22:13:56.372 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:13:56.373 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "/*")) 106)
[info] 22:14:00.192 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A simple enum \n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 107)
[info] 22:14:00.195 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 155 (var val varField valField functionCall operator param class trait object package)) 108)
[info] 22:14:00.198 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:00.200 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:00.200 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:00.200 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:00.201 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 154 :end 154 :line 8 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:00.208 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 107)
[info] 22:14:00.209 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:00.209 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 108)
[info] 22:14:08.195 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 109)
[info] 22:14:08.202 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:08.206 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:08.207 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:08.208 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 25 :end 25 :line 3 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:08.208 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 168 :end 168 :line 8 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:08.209 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 169 (var val varField valField functionCall operator param class trait object package)) 110)
[info] 22:14:08.218 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 109)
[info] 22:14:08.219 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 110)
[info] 22:14:08.219 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:14.194 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 111)
[info] 22:14:14.200 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:14.208 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 172 (var val varField valField functionCall operator param class trait object package)) 112)
[info] 22:14:14.239 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 111)
[info] 22:14:14.242 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:14.243 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (param 140 150) (trait 152 163)))) 112)
[info] 22:14:17.194 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  \n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 113)
[info] 22:14:17.199 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 175 (var val varField valField functionCall operator param class trait object package)) 114)
[info] 22:14:17.202 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:17.238 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 113)
[info] 22:14:17.240 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (param 143 153) (trait 155 166)))) 114)
[info] 22:14:17.240 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:17.387 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  ca\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 125 1000000 nil t) 115)
[info] 22:14:17.411 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(ca)
[info] 22:14:17.447 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:14:17.448 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:17.449 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ca")) 115)
[info] 22:14:17.532 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  cas\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 126 1000000 nil t) 116)
[info] 22:14:17.552 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(cas)
[info] 22:14:17.583 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:14:17.584 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:17.585 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cas")) 116)
[info] 22:14:17.697 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 127 1000000 nil t) 117)
[info] 22:14:17.738 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:17.765 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:14:17.767 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:17.768 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "case")) 117)
[info] 22:14:18.050 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case ob\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 130 1000000 nil t) 118)
[info] 22:14:18.097 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:18.123 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:14:18.124 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:14:18.126 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ob" :completions ((:name "Object" :type-sig (() "Object$") :type-id 67) (:name "Object" :type-sig (() "Object") :type-id 68)))) 118)
[info] 22:14:18.285 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case obk\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 131 1000000 nil t) 119)
[info] 22:14:18.310 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:18.322 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case obke\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 132 1000000 nil t) 120)
[info] 22:14:18.324 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:14:18.325 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:18.326 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "obk")) 119)
[info] 22:14:18.345 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:18.358 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:14:18.359 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:18.359 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "obke")) 120)
[info] 22:14:18.578 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case obkec\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 133 1000000 nil t) 121)
[info] 22:14:18.616 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:18.639 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:14:18.641 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:18.642 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "obkec")) 121)
[info] 22:14:19.675 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case obj\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 131 1000000 nil t) 122)
[info] 22:14:19.714 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:19.737 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 689 members.
[info] 22:14:19.738 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:14:19.739 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "obj" :completions ((:name "Object" :type-sig (() "Object$") :type-id 67) (:name "Object" :type-sig (() "Object") :type-id 68)))) 122)
[info] 22:14:20.471 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 134 1000000 nil t) 123)
[info] 22:14:20.511 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term <error>
[info] 22:14:20.537 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:14:20.538 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:14:20.539 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "object" :completions ((:name "Object" :type-sig (() "Object$") :type-id 67) (:name "Object" :type-sig (() "Object") :type-id 68)))) 123)
[info] 22:14:20.964 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object To\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 137 1000000 nil t) 124)
[info] 22:14:20.995 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local To>)
[info] 22:14:21.037 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:21.038 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:14:21.155 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Tor\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 138 1000000 nil t) 125)
[info] 22:14:21.161 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "To" :completions ((:name "To" :type-sig (() "To$") :type-id 79) (:name "tools" :type-sig (() "tools$") :type-id 81) (:name "toString" :type-sig ((()) "String") :type-id 80 :is-callable t) (:name "Tool" :type-sig (() "javax.tools.Tool") :type-id -1 :to-insert "javax.tools.Tool") (:name "Toolkit" :type-sig (() "java.awt.Toolkit") :type-id -1 :to-insert "java.awt.Toolkit") (:name "ToolTipUI" :type-sig (() "javax.swing.plaf.ToolTipUI") :type-id -1 :to-insert "javax.swing.plaf.ToolTipUI") (:name "ToolBarUI" :type-sig (() "javax.swing.plaf.ToolBarUI") :type-id -1 :to-insert "javax.swing.plaf.ToolBarUI") (:name "ToolProvider" :type-sig (() "javax.tools.ToolProvider") :type-id -1 :to-insert "javax.tools.ToolProvider") (:name "ToolTipManager" :type-sig (() "javax.swing.ToolTipManager") :type-id -1 :to-insert "javax.swing.ToolTipManager") (:name "ParIterableLike$ToParMap" :type-sig (() "scala.collection.parallel.ParIterableLike$ToParMap") :type-id -1 :to-insert "scala.collection.parallel.ParIterableLike$ToParMap") (:name "TooManyListenersException" :type-sig (() "java.util.TooManyListenersException") :type-id -1 :to-insert "java.util.TooManyListenersException") (:name "Wrappers$ToIteratorWrapper" :type-sig (() "scala.collection.convert.Wrappers$ToIteratorWrapper") :type-id -1 :to-insert "scala.collection.convert.Wrappers$ToIteratorWrapper") (:name "MetalBorders$ToolBarBorder" :type-sig (() "javax.swing.plaf.metal.MetalBorders$ToolBarBorder") :type-id -1 :to-insert "javax.swing.plaf.metal.MetalBorders$ToolBarBorder") (:name "ParIterableLike$ToParCollection" :type-sig (() "scala.collection.parallel.ParIterableLike$ToParCollection") :type-id -1 :to-insert "scala.collection.parallel.ParIterableLike$ToParCollection") (:name "MetalBorders$ToggleButtonBorder" :type-sig (() "javax.swing.plaf.metal.MetalBorders$ToggleButtonBorder") :type-id -1 :to-insert "javax.swing.plaf.metal.MetalBorders$ToggleButtonBorder") (:name "BasicBorders$ToggleButtonBorder" :type-sig (() "javax.swing.plaf.basic.BasicBorders$ToggleButtonBorder") :type-id -1 :to-insert "javax.swing.plaf.basic.BasicBorders$ToggleButtonBorder") (:name "JToggleButton$ToggleButtonModel" :type-sig (() "javax.swing.JToggleButton$ToggleButtonModel") :type-id -1 :to-insert "javax.swing.JToggleButton$ToggleButtonModel") (:name "ToolTipManager$insideTimerAction" :type-sig (() "javax.swing.ToolTipManager$insideTimerAction") :type-id -1 :to-insert "javax.swing.ToolTipManager$insideTimerAction") (:name "ToolTipManager$outsideTimerAction" :type-sig (() "javax.swing.ToolTipManager$outsideTimerAction") :type-id -1 :to-insert "javax.swing.ToolTipManager$outsideTimerAction") (:name "BasicToolBarUI$ToolBarContListener" :type-sig (() "javax.swing.plaf.basic.BasicToolBarUI$ToolBarContListener") :type-id -1 :to-insert "javax.swing.plaf.basic.BasicToolBarUI$ToolBarContListener") (:name "BasicToolBarUI$ToolBarFocusListener" :type-sig (() "javax.swing.plaf.basic.BasicToolBarUI$ToolBarFocusListener") :type-i...
[info] 22:14:21.186 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Tor>)
[info] 22:14:21.219 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:21.220 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:14:21.221 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Tor" :completions ((:name "Tor" :type-sig (() "Tor$") :type-id 82)))) 125)
[info] 22:14:22.143 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso ex\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 143 1000000 nil t) 126)
[info] 22:14:22.195 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:22.235 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:22.236 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:14:22.237 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ex" :completions ((:name "exceptionWrapper" :type-sig (((("exc" "Throwable"))) "RichException") :type-id 71 :is-callable t) (:name "Exception" :type-sig (() "Exception$") :type-id 75) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError$") :type-id 73) (:name "Exception" :type-sig (() "Exception") :type-id 72) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError") :type-id 74)))) 126)
[info] 22:14:22.326 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso ext\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 144 1000000 nil t) 127)
[info] 22:14:22.378 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:22.414 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:22.415 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:22.416 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ext")) 127)
[info] 22:14:22.441 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso exte\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 145 1000000 nil t) 128)
[info] 22:14:22.492 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:22.522 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:22.523 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:22.524 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exte")) 128)
[info] 22:14:22.544 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso exten\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 146 1000000 nil t) 129)
[info] 22:14:22.575 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:22.605 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:22.605 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:22.606 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exten")) 129)
[info] 22:14:22.624 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extend\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 147 1000000 nil t) 130)
[info] 22:14:22.655 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:22.687 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:22.688 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:22.689 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "extend")) 130)
[info] 22:14:22.778 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 148 1000000 nil t) 131)
[info] 22:14:22.796 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Torso>)
[info] 22:14:22.811 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:14:22.812 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:22.813 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "extends")) 131)
[info] 22:14:23.651 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends Bo\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 151 1000000 nil t) 132)
[info] 22:14:23.671 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bo)
[info] 22:14:23.696 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:23.697 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 10.
[info] 22:14:23.728 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends Bod\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 152 1000000 nil t) 133)
[info] 22:14:23.744 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPart" :type-sig (() "BodyPart") :type-id 83) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.BooleanControl") (:name "BorderUIResource" :type-sig (() "javax.swing.plaf.BorderUIResource") :type-id -1 :to-insert "ja...
[info] 22:14:23.751 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bod)
[info] 22:14:23.776 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:23.777 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:14:23.778 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 84) (:name "body" :type-sig (() "body$") :type-id 52)))) 133)
[info] 22:14:24.717 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 157 1000000 nil t) 134)
[info] 22:14:24.739 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Select(This(package object body), BodyPart)
[info] 22:14:24.775 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:24.777 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:14:24.778 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPart" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 85)))) 134)
[info] 22:14:25.716 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  ca\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 162 1000000 nil t) 135)
[info] 22:14:25.739 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(ca)
[info] 22:14:25.778 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:25.779 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:25.779 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ca")) 135)
[info] 22:14:25.789 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  cas\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 163 1000000 nil t) 136)
[info] 22:14:25.798 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(cas)
[info] 22:14:25.814 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:25.815 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:25.816 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cas")) 136)
[info] 22:14:25.971 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 164 1000000 nil t) 137)
[info] 22:14:26.021 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:26.044 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:14:26.045 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:26.046 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "case")) 137)
[info] 22:14:26.610 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case ob\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 167 1000000 nil t) 138)
[info] 22:14:26.663 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:26.688 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 690 members.
[info] 22:14:26.689 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:14:26.690 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ob" :completions ((:name "Object" :type-sig (() "Object$") :type-id 67) (:name "Object" :type-sig (() "Object") :type-id 68)))) 138)
[info] 22:14:28.194 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object \n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 139)
[info] 22:14:28.197 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 224 (var val varField valField functionCall operator param class trait object package)) 140)
[info] 22:14:28.199 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:28.202 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but 'def' found." :beg 176 :end 176 :line 9 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:28.232 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 139)
[info] 22:14:28.233 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157)))) 140)
[info] 22:14:28.234 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:28.995 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object Le\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 174 1000000 nil t) 141)
[info] 22:14:29.029 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Le>)
[info] 22:14:29.077 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:29.079 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:14:29.108 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object Lef\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 175 1000000 nil t) 142)
[info] 22:14:29.156 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Le" :completions ((:name "Le" :type-sig (() "Le$") :type-id 86) (:name "Left" :type-sig (() "Left$") :type-id 87) (:name "Left" :type-sig (() "Left") :type-id 88) (:name "Left" :type-sig (() "scala.util.Left") :type-id -1 :to-insert "scala.util.Left") (:name "Leaf" :type-sig (() "scala.collection.mutable.Leaf") :type-id -1 :to-insert "scala.collection.mutable.Leaf") (:name "Level" :type-sig (() "java.util.logging.Level") :type-id -1 :to-insert "java.util.logging.Level") (:name "Lease" :type-sig (() "java.rmi.dgc.Lease") :type-id -1 :to-insert "java.rmi.dgc.Lease") (:name "LexicalHandler" :type-sig (() "org.xml.sax.ext.LexicalHandler") :type-id -1 :to-insert "org.xml.sax.ext.LexicalHandler") (:name "Iterator$Leading$1" :type-sig (() "scala.collection.Iterator$Leading$1") :type-id -1 :to-insert "scala.collection.Iterator$Leading$1") (:name "HashSet$LeafHashSet" :type-sig (() "scala.collection.immutable.HashSet$LeafHashSet") :type-id -1 :to-insert "scala.collection.immutable.HashSet$LeafHashSet") (:name "Either$LeftProjection" :type-sig (() "scala.util.Either$LeftProjection") :type-id -1 :to-insert "scala.util.Either$LeftProjection") (:name "AbstractDocument$LeafElement" :type-sig (() "javax.swing.text.AbstractDocument$LeafElement") :type-id -1 :to-insert "javax.swing.text.AbstractDocument$LeafElement")))) 141)
[info] 22:14:29.173 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Lef>)
[info] 22:14:29.211 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:29.213 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:14:29.239 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Lef" :completions ((:name "Lef" :type-sig (() "Lef$") :type-id 89) (:name "Left" :type-sig (() "Left$") :type-id 87) (:name "Left" :type-sig (() "Left") :type-id 88) (:name "Left" :type-sig (() "scala.util.Left") :type-id -1 :to-insert "scala.util.Left") (:name "Either$LeftProjection" :type-sig (() "scala.util.Either$LeftProjection") :type-id -1 :to-insert "scala.util.Either$LeftProjection")))) 142)
[info] 22:14:29.616 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftA\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 177 1000000 nil t) 143)
[info] 22:14:29.647 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local LeftA>)
[info] 22:14:29.691 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:29.692 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:14:29.693 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "LeftA" :completions ((:name "LeftA" :type-sig (() "LeftA$") :type-id 90)))) 143)
[info] 22:14:30.397 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm ex\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 182 1000000 nil t) 144)
[info] 22:14:30.442 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:30.494 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:30.495 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:14:30.497 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ex" :completions ((:name "exceptionWrapper" :type-sig (((("exc" "Throwable"))) "RichException") :type-id 71 :is-callable t) (:name "Exception" :type-sig (() "Exception$") :type-id 75) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError$") :type-id 73) (:name "Exception" :type-sig (() "Exception") :type-id 72) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError") :type-id 74)))) 144)
[info] 22:14:30.604 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm ext\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 183 1000000 nil t) 145)
[info] 22:14:30.662 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:30.701 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:30.702 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:30.703 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ext")) 145)
[info] 22:14:30.717 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm exte\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 184 1000000 nil t) 146)
[info] 22:14:30.760 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:30.815 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:30.816 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:30.819 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exte")) 146)
[info] 22:14:30.826 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm exten\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 185 1000000 nil t) 147)
[info] 22:14:30.854 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:30.883 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:30.884 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:30.884 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exten")) 147)
[info] 22:14:30.934 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extend\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 186 1000000 nil t) 148)
[info] 22:14:30.965 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:30.994 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:30.995 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:30.996 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "extend")) 148)
[info] 22:14:31.034 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 187 1000000 nil t) 149)
[info] 22:14:31.059 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local LeftArm>)
[info] 22:14:31.080 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 691 members.
[info] 22:14:31.081 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:31.082 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "extends")) 149)
[info] 22:14:31.600 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends Bo\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 190 1000000 nil t) 150)
[info] 22:14:31.625 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bo)
[info] 22:14:31.662 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:14:31.663 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 10.
[info] 22:14:31.683 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends Bod\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 191 1000000 nil t) 151)
[info] 22:14:31.714 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPart" :type-sig (() "BodyPart") :type-id 91) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.BooleanControl") (:name "BorderUIResource" :type-sig (() "javax.swing.plaf.BorderUIResource") :type-id -1 :to-insert "ja...
[info] 22:14:31.719 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bod)
[info] 22:14:31.781 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:14:31.782 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:14:31.783 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 92) (:name "body" :type-sig (() "body$") :type-id 52)))) 151)
[info] 22:14:32.194 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends Bod\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 152)
[info] 22:14:32.200 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:32.203 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 243 (var val varField valField functionCall operator param class trait object package)) 153)
[info] 22:14:32.233 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type Bod" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:32.233 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type Bod" :beg 188 :end 191 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:32.243 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 152)
[info] 22:14:32.244 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (class 188 191) (param 211 221) (trait 223 234)))) 153)
[info] 22:14:32.244 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:33.236 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n") 196 1000000 nil t) 154)
[info] 22:14:33.257 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Select(This(package object body), BodyPart)
[info] 22:14:33.285 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:14:33.287 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:14:33.292 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPart" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 93)))) 154)
[info] 22:14:34.037 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 155)
[info] 22:14:34.040 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 248 (var val varField valField functionCall operator param class trait object package)) 156)
[info] 22:14:34.045 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:34.097 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 155)
[info] 22:14:34.099 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (param 216 226) (trait 228 239)))) 156)
[info] 22:14:34.099 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:36.693 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {}\n}\n")) 157)
[info] 22:14:36.701 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:36.706 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 287 (var val varField valField functionCall operator param class trait object package)) 158)
[info] 22:14:36.748 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:36.752 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:36.754 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor LeftArm is defined twice   conflicting symbols both originated in file '/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala'" :beg 180 :end 180 :line 7 :col 23 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:36.761 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 227 :end 227 :line 8 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:36.761 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 227 :end 227 :line 8 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:36.765 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 157)
[info] 22:14:36.766 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:36.766 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 227 235) (param 255 265) (trait 267 278)))) 158)
[info] 22:14:39.194 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object LeftArm extends BodyPart\n  case object LeftArm extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[Stri...
[info] 22:14:39.197 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 365 (var val varField valField functionCall operator param class trait object package)) 160)
[info] 22:14:39.201 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:39.247 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.248 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.250 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor LeftArm is defined twice   conflicting symbols both originated in file '/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala'" :beg 180 :end 180 :line 7 :col 23 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.258 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 227 :end 227 :line 8 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.259 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 227 :end 227 :line 8 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.260 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor LeftArm is defined twice   conflicting symbols both originated in file '/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala'" :beg 219 :end 219 :line 8 :col 23 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.263 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 266 :end 266 :line 9 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.264 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 266 :end 266 :line 9 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.265 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor LeftArm is defined twice   conflicting symbols both originated in file '/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala'" :beg 258 :end 258 :line 9 :col 23 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.267 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 305 :end 305 :line 10 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.268 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 305 :end 305 :line 10 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:39.271 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 159)
[info] 22:14:39.272 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 227 235) (trait 266 274) (trait 305 313) (param 333 343) (trait 345 356)))) 160)
[info] 22:14:39.273 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:41.444 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object Ri extends BodyPart\n  case object LeftArm extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = {...
[info] 22:14:41.480 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term Ri
[info] 22:14:41.518 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 693 members.
[info] 22:14:41.519 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 4.
[info] 22:14:41.551 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object Rig extends BodyPart\n  case object LeftArm extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = ...
[info] 22:14:41.587 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Ri" :completions ((:name "Ri" :type-sig (() "Ri$") :type-id 94) (:name "Right" :type-sig (() "Right$") :type-id 96) (:name "Right" :type-sig (() "Right") :type-id 97) (:name "RichException" :type-sig (() "RichException") :type-id 95) (:name "Right" :type-sig (() "scala.util.Right") :type-id -1 :to-insert "scala.util.Right") (:name "RichInt" :type-sig (() "scala.runtime.RichInt") :type-id -1 :to-insert "scala.runtime.RichInt") (:name "RichChar" :type-sig (() "scala.runtime.RichChar") :type-id -1 :to-insert "scala.runtime.RichChar") (:name "RichByte" :type-sig (() "scala.runtime.RichByte") :type-id -1 :to-insert "scala.runtime.RichByte") (:name "RichLong" :type-sig (() "scala.runtime.RichLong") :type-id -1 :to-insert "scala.runtime.RichLong") (:name "RichFloat" :type-sig (() "scala.runtime.RichFloat") :type-id -1 :to-insert "scala.runtime.RichFloat") (:name "RichShort" :type-sig (() "scala.runtime.RichShort") :type-id -1 :to-insert "scala.runtime.RichShort") (:name "RichDouble" :type-sig (() "scala.runtime.RichDouble") :type-id -1 :to-insert "scala.runtime.RichDouble") (:name "RichBoolean" :type-sig (() "scala.runtime.RichBoolean") :type-id -1 :to-insert "scala.runtime.RichBoolean") (:name "RichException" :type-sig (() "scala.runtime.RichException") :type-id -1 :to-insert "scala.runtime.RichException") (:name "Predef$RichException" :type-sig (() "scala.Predef$RichException") :type-id -1 :to-insert "scala.Predef$RichException") (:name "Either$RightProjection" :type-sig (() "scala.util.Either$RightProjection") :type-id -1 :to-insert "scala.util.Either$RightProjection")))) 161)
[info] 22:14:41.605 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term Rig
[info] 22:14:41.631 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 693 members.
[info] 22:14:41.632 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:14:41.648 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Rig" :completions ((:name "Rig" :type-sig (() "Rig$") :type-id 98) (:name "Right" :type-sig (() "Right$") :type-id 96) (:name "Right" :type-sig (() "Right") :type-id 97) (:name "Right" :type-sig (() "scala.util.Right") :type-id -1 :to-insert "scala.util.Right") (:name "Either$RightProjection" :type-sig (() "scala.util.Either$RightProjection") :type-id -1 :to-insert "scala.util.Either$RightProjection")))) 162)
[info] 22:14:41.993 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightA extends BodyPart\n  case object LeftArm extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String])...
[info] 22:14:42.035 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term RightA
[info] 22:14:42.080 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 693 members.
[info] 22:14:42.081 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:14:42.082 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "RightA" :completions ((:name "RightA" :type-sig (() "RightA$") :type-id 99)))) 163)
[info] 22:14:43.694 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object LeftArm extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[Str...
[info] 22:14:43.697 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 366 (var val varField valField functionCall operator param class trait object package)) 165)
[info] 22:14:43.702 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:43.749 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:43.749 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:43.751 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor LeftArm is defined twice   conflicting symbols both originated in file '/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala'" :beg 180 :end 180 :line 7 :col 23 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:43.767 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 267 :end 267 :line 9 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:43.769 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 267 :end 267 :line 9 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:43.770 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor LeftArm is defined twice   conflicting symbols both originated in file '/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala'" :beg 259 :end 259 :line 9 :col 23 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:43.777 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 164)
[info] 22:14:43.777 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 306 :end 306 :line 10 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:43.778 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 306 :end 306 :line 10 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:43.778 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:43.778 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 267 275) (trait 306 314) (param 334 344) (trait 346 357)))) 165)
[info] 22:14:46.194 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object  extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) =...
[info] 22:14:46.201 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:46.206 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 359 (var val varField valField functionCall operator param class trait object package)) 167)
[info] 22:14:46.212 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but 'extends' found." :beg 252 :end 252 :line 9 :col 16 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:46.243 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:46.243 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:46.244 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor LeftArm is defined twice   conflicting symbols both originated in file '/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala'" :beg 180 :end 180 :line 7 :col 23 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:46.264 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 299 :end 299 :line 10 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:46.265 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 299 :end 299 :line 10 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:46.268 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 166)
[info] 22:14:46.269 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 299 307) (param 327 337) (trait 339 350)))) 167)
[info] 22:14:46.269 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:47.168 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Le extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = ...
[info] 22:14:47.195 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term Le
[info] 22:14:47.236 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 694 members.
[info] 22:14:47.237 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 4.
[info] 22:14:47.241 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Lef extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) =...
[info] 22:14:47.262 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Le" :completions ((:name "Le" :type-sig (() "Le$") :type-id 100) (:name "LeftArm" :type-sig (() "LeftArm$") :type-id 101) (:name "Left" :type-sig (() "Left$") :type-id 87) (:name "Left" :type-sig (() "Left") :type-id 88) (:name "Left" :type-sig (() "scala.util.Left") :type-id -1 :to-insert "scala.util.Left") (:name "Leaf" :type-sig (() "scala.collection.mutable.Leaf") :type-id -1 :to-insert "scala.collection.mutable.Leaf") (:name "Level" :type-sig (() "java.util.logging.Level") :type-id -1 :to-insert "java.util.logging.Level") (:name "Lease" :type-sig (() "java.rmi.dgc.Lease") :type-id -1 :to-insert "java.rmi.dgc.Lease") (:name "LexicalHandler" :type-sig (() "org.xml.sax.ext.LexicalHandler") :type-id -1 :to-insert "org.xml.sax.ext.LexicalHandler") (:name "Iterator$Leading$1" :type-sig (() "scala.collection.Iterator$Leading$1") :type-id -1 :to-insert "scala.collection.Iterator$Leading$1") (:name "HashSet$LeafHashSet" :type-sig (() "scala.collection.immutable.HashSet$LeafHashSet") :type-id -1 :to-insert "scala.collection.immutable.HashSet$LeafHashSet") (:name "Either$LeftProjection" :type-sig (() "scala.util.Either$LeftProjection") :type-id -1 :to-insert "scala.util.Either$LeftProjection") (:name "AbstractDocument$LeafElement" :type-sig (() "javax.swing.text.AbstractDocument$LeafElement") :type-id -1 :to-insert "javax.swing.text.AbstractDocument$LeafElement")))) 168)
[info] 22:14:47.282 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term Lef
[info] 22:14:47.320 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 694 members.
[info] 22:14:47.321 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 4.
[info] 22:14:47.343 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Lef" :completions ((:name "Lef" :type-sig (() "Lef$") :type-id 102) (:name "LeftArm" :type-sig (() "LeftArm$") :type-id 103) (:name "Left" :type-sig (() "Left$") :type-id 87) (:name "Left" :type-sig (() "Left") :type-id 88) (:name "Left" :type-sig (() "scala.util.Left") :type-id -1 :to-insert "scala.util.Left") (:name "Either$LeftProjection" :type-sig (() "scala.util.Either$LeftProjection") :type-id -1 :to-insert "scala.util.Either$LeftProjection")))) 169)
[info] 22:14:47.722 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object LeftL extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String])...
[info] 22:14:47.750 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term LeftL
[info] 22:14:47.783 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 694 members.
[info] 22:14:47.784 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:14:47.788 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "LeftL" :completions ((:name "LeftL" :type-sig (() "LeftL$") :type-id 104)))) 170)
[info] 22:14:48.758 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object LeftLeg extends BodyPart\n  case object LeftArm extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[Str...
[info] 22:14:48.759 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 366 (var val varField valField functionCall operator param class trait object package)) 172)
[info] 22:14:48.762 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:48.788 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:48.789 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 188 :end 188 :line 7 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:48.789 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor LeftArm is defined twice   conflicting symbols both originated in file '/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala'" :beg 180 :end 180 :line 7 :col 23 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:48.806 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "constructor definition not allowed here" :beg 306 :end 306 :line 10 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:48.807 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "self constructor arguments cannot reference unconstructed `this`" :beg 306 :end 306 :line 10 :col 31 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:14:48.810 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 171)
[info] 22:14:48.811 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:48.811 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 267 275) (trait 306 314) (param 334 344) (trait 346 357)))) 172)
[info] 22:14:51.156 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object LeftLeg extends BodyPart\n  case object Ri extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) = ...
[info] 22:14:51.189 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term Ri
[info] 22:14:51.228 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:14:51.230 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:14:51.271 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object LeftLeg extends BodyPart\n  case object Rig extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]) =...
[info] 22:14:51.274 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Ri" :completions ((:name "Ri" :type-sig (() "Ri$") :type-id 105) (:name "RightArm" :type-sig (() "RightArm$") :type-id 106) (:name "Right" :type-sig (() "Right$") :type-id 96) (:name "Right" :type-sig (() "Right") :type-id 97) (:name "RichException" :type-sig (() "RichException") :type-id 95) (:name "Right" :type-sig (() "scala.util.Right") :type-id -1 :to-insert "scala.util.Right") (:name "RichInt" :type-sig (() "scala.runtime.RichInt") :type-id -1 :to-insert "scala.runtime.RichInt") (:name "RichChar" :type-sig (() "scala.runtime.RichChar") :type-id -1 :to-insert "scala.runtime.RichChar") (:name "RichByte" :type-sig (() "scala.runtime.RichByte") :type-id -1 :to-insert "scala.runtime.RichByte") (:name "RichLong" :type-sig (() "scala.runtime.RichLong") :type-id -1 :to-insert "scala.runtime.RichLong") (:name "RichFloat" :type-sig (() "scala.runtime.RichFloat") :type-id -1 :to-insert "scala.runtime.RichFloat") (:name "RichShort" :type-sig (() "scala.runtime.RichShort") :type-id -1 :to-insert "scala.runtime.RichShort") (:name "RichDouble" :type-sig (() "scala.runtime.RichDouble") :type-id -1 :to-insert "scala.runtime.RichDouble") (:name "RichBoolean" :type-sig (() "scala.runtime.RichBoolean") :type-id -1 :to-insert "scala.runtime.RichBoolean") (:name "RichException" :type-sig (() "scala.runtime.RichException") :type-id -1 :to-insert "scala.runtime.RichException") (:name "Predef$RichException" :type-sig (() "scala.Predef$RichException") :type-id -1 :to-insert "scala.Predef$RichException") (:name "Either$RightProjection" :type-sig (() "scala.util.Either$RightProjection") :type-id -1 :to-insert "scala.util.Either$RightProjection")))) 173)
[info] 22:14:51.291 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term Rig
[info] 22:14:51.356 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:14:51.358 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 4.
[info] 22:14:51.390 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Rig" :completions ((:name "Rig" :type-sig (() "Rig$") :type-id 107) (:name "RightArm" :type-sig (() "RightArm$") :type-id 108) (:name "Right" :type-sig (() "Right$") :type-id 96) (:name "Right" :type-sig (() "Right") :type-id 97) (:name "Right" :type-sig (() "scala.util.Right") :type-id -1 :to-insert "scala.util.Right") (:name "Either$RightProjection" :type-sig (() "scala.util.Either$RightProjection") :type-id -1 :to-insert "scala.util.Either$RightProjection")))) 174)
[info] 22:14:51.658 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object LeftLeg extends BodyPart\n  case object RightL extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[String]...
[info] 22:14:51.691 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term RightL
[info] 22:14:51.730 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:14:51.732 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:14:51.750 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "RightL" :completions ((:name "RightL" :type-sig (() "RightL$") :type-id 109)))) 175)
[info] 22:14:53.195 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyPart(partsToAdd: Set[St...
[info] 22:14:53.199 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 367 (var val varField valField functionCall operator param class trait object package)) 177)
[info] 22:14:53.201 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:53.280 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 176)
[info] 22:14:53.281 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:53.282 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 267 275) (trait 307 315) (param 335 345) (trait 347 358)))) 177)
[info] 22:14:53.325 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 178)
[info] 22:14:53.328 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:14:53.331 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 367 (var val varField valField functionCall operator param class trait object package)) 179)
[info] 22:14:53.368 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 178)
[info] 22:14:53.369 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:14:53.369 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 267 275) (trait 307 315) (param 335 345) (trait 347 358)))) 179)
[info] 22:14:55.904 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:14:55.905 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:14:56.171 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  ca\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyPart(partsToAdd: Set...
[info] 22:14:56.192 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(ca)
[info] 22:14:56.241 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:14:56.243 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:56.244 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ca")) 180)
[info] 22:14:56.311 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  cas\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyPart(partsToAdd: Se...
[info] 22:14:56.320 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(cas)
[info] 22:14:56.338 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:14:56.339 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:56.340 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cas")) 181)
[info] 22:14:56.494 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyPart(partsToAdd: S...
[info] 22:14:56.548 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:56.573 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:56.574 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:56.575 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "case")) 182)
[info] 22:14:57.024 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case ob\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyPart(partsToAdd...
[info] 22:14:57.096 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:57.132 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 692 members.
[info] 22:14:57.134 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:14:57.135 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ob" :completions ((:name "Object" :type-sig (() "Object$") :type-id 67) (:name "Object" :type-sig (() "Object") :type-id 68)))) 183)
[info] 22:14:58.108 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Le\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyPart(par...
[info] 22:14:58.140 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Le>)
[info] 22:14:58.174 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:58.176 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:14:58.203 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Le" :completions ((:name "Le" :type-sig (() "Le$") :type-id 111) (:name "LeftLeg" :type-sig (() "LeftLeg$") :type-id 110) (:name "LeftArm" :type-sig (() "LeftArm$") :type-id 112) (:name "Left" :type-sig (() "Left$") :type-id 87) (:name "Left" :type-sig (() "Left") :type-id 88) (:name "Left" :type-sig (() "scala.util.Left") :type-id -1 :to-insert "scala.util.Left") (:name "Leaf" :type-sig (() "scala.collection.mutable.Leaf") :type-id -1 :to-insert "scala.collection.mutable.Leaf") (:name "Level" :type-sig (() "java.util.logging.Level") :type-id -1 :to-insert "java.util.logging.Level") (:name "Lease" :type-sig (() "java.rmi.dgc.Lease") :type-id -1 :to-insert "java.rmi.dgc.Lease") (:name "LexicalHandler" :type-sig (() "org.xml.sax.ext.LexicalHandler") :type-id -1 :to-insert "org.xml.sax.ext.LexicalHandler") (:name "Iterator$Leading$1" :type-sig (() "scala.collection.Iterator$Leading$1") :type-id -1 :to-insert "scala.collection.Iterator$Leading$1") (:name "HashSet$LeafHashSet" :type-sig (() "scala.collection.immutable.HashSet$LeafHashSet") :type-id -1 :to-insert "scala.collection.immutable.HashSet$LeafHashSet") (:name "Either$LeftProjection" :type-sig (() "scala.util.Either$LeftProjection") :type-id -1 :to-insert "scala.util.Either$LeftProjection") (:name "AbstractDocument$LeafElement" :type-sig (() "javax.swing.text.AbstractDocument$LeafElement") :type-id -1 :to-insert "javax.swing.text.AbstractDocument$LeafElement")))) 184)
[info] 22:14:58.228 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Leg\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyPart(pa...
[info] 22:14:58.242 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Leg>)
[info] 22:14:58.267 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:58.268 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:14:58.268 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Leg" :completions ((:name "Leg" :type-sig (() "Leg$") :type-id 113)))) 185)
[info] 22:14:59.188 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs ex\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyPar...
[info] 22:14:59.255 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:59.302 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:59.303 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:14:59.304 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ex" :completions ((:name "exceptionWrapper" :type-sig (((("exc" "Throwable"))) "RichException") :type-id 71 :is-callable t) (:name "Exception" :type-sig (() "Exception$") :type-id 75) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError$") :type-id 73) (:name "Exception" :type-sig (() "Exception") :type-id 72) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError") :type-id 74)))) 186)
[info] 22:14:59.365 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs ext\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyPa...
[info] 22:14:59.421 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:59.439 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs exte\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBodyP...
[info] 22:14:59.466 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:59.467 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:59.469 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ext")) 187)
[info] 22:14:59.504 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:59.542 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:59.543 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:59.543 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exte")) 188)
[info] 22:14:59.591 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs exten\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBody...
[info] 22:14:59.631 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extend\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBod...
[info] 22:14:59.632 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:59.667 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:59.668 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:59.669 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exten")) 189)
[info] 22:14:59.703 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:14:59.742 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:14:59.743 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:59.744 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "extend")) 190)
[info] 22:14:59.811 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def addBo...
[info] 22:14:59.823 [default-akka.actor.default-dispatcher-91] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Legs>)
[info] 22:14:59.842 [default-akka.actor.default-dispatcher-91] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:14:59.843 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:14:59.843 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "extends")) 191)
[info] 22:15:00.571 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends Bo\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def ad...
[info] 22:15:00.594 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bo)
[info] 22:15:00.626 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 701 members.
[info] 22:15:00.628 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 10.
[info] 22:15:00.644 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends Bod\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  def a...
[info] 22:15:00.679 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPart" :type-sig (() "BodyPart") :type-id 114) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.BooleanControl") (:name "BorderUIResource" :type-sig (() "javax.swing.plaf.BorderUIResource") :type-id -1 :to-insert "j...
[info] 22:15:00.682 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bod)
[info] 22:15:00.705 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 701 members.
[info] 22:15:00.706 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:15:00.712 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 115) (:name "body" :type-sig (() "body$") :type-id 52)))) 193)
[info] 22:15:01.523 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\n  ...
[info] 22:15:01.544 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Select(This(package object body), BodyPart)
[info] 22:15:01.576 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 701 members.
[info] 22:15:01.577 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:15:01.587 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPart" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 116)))) 194)
[info] 22:15:02.422 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart //\n  case object LeftLeg extends BodyPart\n  case object RightLeg extends BodyPart\n\...
[info] 22:15:02.491 [default-akka.actor.default-dispatcher-78] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:15:02.535 [default-akka.actor.default-dispatcher-78] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:15:02.536 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:15:02.540 [default-akka.actor.default-dispatcher-78] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "//")) 195)
[info] 22:15:19.694 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:15:19.696 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 442 (var val varField valField functionCall operator param class trait object package)) 197)
[info] 22:15:19.701 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:15:19.755 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 196)
[info] 22:15:19.756 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:15:19.756 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 410 420) (trait 422 433)))) 197)
[info] 22:15:19.770 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 198)
[info] 22:15:19.774 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:15:19.776 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 442 (var val varField valField functionCall operator param class trait object package)) 199)
[info] 22:15:19.809 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 198)
[info] 22:15:19.810 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:15:19.810 [default-akka.actor.default-dispatcher-91] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 410 420) (trait 422 433)))) 199)
[info] 22:15:55.940 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:15:55.945 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:15:56.193 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:15:56.200 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:15:56.205 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 436 (var val varField valField functionCall operator param class trait object package)) 201)
[info] 22:15:56.209 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but ']' found." :beg 426 :end 426 :line 13 :col 35 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:15:56.209 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "']' expected but '}' found." :beg 434 :end 434 :line 14 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:15:56.264 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 426 :end 433 :line 13 :col 35 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:15:56.264 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 394 :end 433 :line 13 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:15:56.265 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 200)
[info] 22:15:56.266 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 410 420) (trait 422 433)))) 201)
[info] 22:15:56.266 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:15:56.896 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:15:56.917 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bo)
[info] 22:15:56.945 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:15:56.946 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 10.
[info] 22:15:56.978 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:15:57.006 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPart" :type-sig (() "BodyPart") :type-id 117) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.BooleanControl") (:name "BorderUIResource" :type-sig (() "javax.swing.plaf.BorderUIResource") :type-id -1 :to-insert "j...
[info] 22:15:57.010 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bod)
[info] 22:15:57.029 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:15:57.031 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:15:57.033 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 118) (:name "body" :type-sig (() "body$") :type-id 52)))) 203)
[info] 22:15:57.905 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:15:57.924 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Select(This(package object body), BodyPart)
[info] 22:15:57.951 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:15:57.953 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:15:57.953 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPart" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 119)))) 204)
[info] 22:15:58.653 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 205)
[info] 22:15:58.655 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 444 (var val varField valField functionCall operator param class trait object package)) 206)
[info] 22:15:58.661 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:15:58.730 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 205)
[info] 22:15:58.731 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:15:58.732 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 410 420) (trait 422 435)))) 206)
[info] 22:16:09.954 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:16:09.955 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:16:10.694 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:10.701 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:10.705 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 447 (var val varField valField functionCall operator param class trait object package)) 208)
[info] 22:16:10.767 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 207)
[info] 22:16:10.769 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:10.769 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 413 423) (trait 425 438)))) 208)
[info] 22:16:11.680 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:11.694 [default-akka.actor.default-dispatcher-76] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:EmptyTree
[info] 22:16:11.719 [default-akka.actor.default-dispatcher-76] INFO  o.e.core.RichPresentationCompiler - Found 694 members.
[info] 22:16:11.720 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:16:11.721 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "/*")) 209)
[info] 22:16:13.193 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:13.196 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 451 (var val varField valField functionCall operator param class trait object package)) 211)
[info] 22:16:13.199 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:13.204 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 394 :end 394 :line 13 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:13.206 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 394 :end 394 :line 13 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:13.207 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 394 :end 394 :line 13 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:13.208 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 450 :end 450 :line 15 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:13.259 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 210)
[info] 22:16:13.263 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390)))) 211)
[info] 22:16:13.263 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:15.766 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 212)
[info] 22:16:15.775 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:15.779 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 444 (var val varField valField functionCall operator param class trait object package)) 213)
[info] 22:16:15.833 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 212)
[info] 22:16:15.836 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:15.836 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 410 420) (trait 422 435)))) 213)
[info] 22:16:16.978 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 214)
[info] 22:16:16.981 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 447 (var val varField valField functionCall operator param class trait object package)) 215)
[info] 22:16:16.984 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:17.033 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 214)
[info] 22:16:17.034 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 413 423) (trait 425 438)))) 215)
[info] 22:16:17.034 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:17.961 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:16:17.963 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:16:19.193 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:19.200 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:19.204 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 445 (var val varField valField functionCall operator param class trait object package)) 217)
[info] 22:16:19.258 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 216)
[info] 22:16:19.259 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:19.259 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 421) (trait 423 436)))) 217)
[info] 22:16:30.935 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:30.954 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term expartsToAdd
[info] 22:16:30.981 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:30.983 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 6.
[info] 22:16:30.985 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ex" :completions ((:name "expartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 120) (:name "exceptionWrapper" :type-sig (((("exc" "Throwable"))) "RichException") :type-id 71 :is-callable t) (:name "Exception" :type-sig (() "Exception$") :type-id 75) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError$") :type-id 73) (:name "Exception" :type-sig (() "Exception") :type-id 72) (:name "ExceptionInInitializerError" :type-sig (() "ExceptionInInitializerError") :type-id 74)))) 218)
[info] 22:16:31.196 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:31.218 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term exipartsToAdd
[info] 22:16:31.248 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:31.250 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:31.251 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exi" :completions ((:name "exipartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 121)))) 219)
[info] 22:16:31.350 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:31.371 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term exispartsToAdd
[info] 22:16:31.396 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:31.397 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:31.398 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exis" :completions ((:name "exispartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 122)))) 220)
[info] 22:16:31.472 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:31.486 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term exisipartsToAdd
[info] 22:16:31.510 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:31.511 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:31.512 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exisi" :completions ((:name "exisipartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 123)))) 221)
[info] 22:16:31.584 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:31.601 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term exisitpartsToAdd
[info] 22:16:31.625 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:31.626 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:31.627 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exisit" :completions ((:name "exisitpartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 124)))) 222)
[info] 22:16:31.987 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:32.009 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term exisitipartsToAdd
[info] 22:16:32.037 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:32.038 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:32.039 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exisiti" :completions ((:name "exisitipartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 125)))) 223)
[info] 22:16:32.283 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:32.304 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term exisitpartsToAdd
[info] 22:16:32.328 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:32.330 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:32.331 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exisit" :completions ((:name "exisitpartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 126)))) 224)
[info] 22:16:32.408 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:32.422 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term exisipartsToAdd
[info] 22:16:32.444 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:32.445 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:32.446 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exisi" :completions ((:name "exisipartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 127)))) 225)
[info] 22:16:32.543 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:32.559 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term exispartsToAdd
[info] 22:16:32.578 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:32.579 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:32.580 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exis" :completions ((:name "exispartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 128)))) 226)
[info] 22:16:32.658 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:32.675 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existpartsToAdd
[info] 22:16:32.700 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:32.701 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:32.702 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "exist" :completions ((:name "existpartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 129)))) 227)
[info] 22:16:32.787 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:32.798 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existipartsToAdd
[info] 22:16:32.813 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:32.814 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:32.815 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "existi" :completions ((:name "existipartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 130)))) 228)
[info] 22:16:32.899 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:32.917 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existinpartsToAdd
[info] 22:16:32.945 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:32.946 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:32.947 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "existin" :completions ((:name "existinpartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 131)))) 229)
[info] 22:16:32.977 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:32.986 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existingpartsToAdd
[info] 22:16:33.000 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:33.001 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:33.002 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "existing" :completions ((:name "existingpartsToAdd" :type-sig (() "Set[BodyPart]") :type-id 132)))) 230)
[info] 22:16:34.693 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:34.701 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:34.706 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 458 (var val varField valField functionCall operator param class trait object package)) 232)
[info] 22:16:34.757 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 231)
[info] 22:16:34.758 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 434) (trait 436 449)))) 232)
[info] 22:16:34.758 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:37.192 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:37.193 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 460 (var val varField valField functionCall operator param class trait object package)) 234)
[info] 22:16:37.199 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:37.206 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "')' expected but ':' found." :beg 436 :end 436 :line 14 :col 44 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:37.260 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type partsToAdd" :beg 426 :end 436 :line 14 :col 34 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:37.261 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 395 :end 457 :line 14 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:37.262 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 233)
[info] 22:16:37.263 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (object 426 436)))) 234)
[info] 22:16:37.263 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:38.654 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:38.676 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(SepartsToAdd)
[info] 22:16:38.707 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:38.709 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 14.
[info] 22:16:38.759 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:38.916 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(SeqpartsToAdd)
[info] 22:16:38.929 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Se" :completions ((:name "Serializable" :type-sig (() "<notype>") :type-id 7) (:name "SecurityManager" :type-sig (() "SecurityManager$") :type-id 10) (:name "SerialVersionUID" :type-sig (() "<notype>") :type-id 7) (:name "SecurityException" :type-sig (() "SecurityException$") :type-id 12) (:name "Set" :type-sig (() "Set$") :type-id 2) (:name "Set" :type-sig (() "Set") :type-id 3) (:name "Seq" :type-sig (() "Seq$") :type-id 5) (:name "Seq" :type-sig (() "Seq") :type-id 6) (:name "Serializable" :type-sig (() "Serializable") :type-id 8) (:name "SeqCharSequence" :type-sig (() "SeqCharSequence") :type-id 1) (:name "SecurityManager" :type-sig (() "SecurityManager") :type-id 11) (:name "SerialVersionUID" :type-sig (() "SerialVersionUID") :type-id 9) (:name "seqToCharSequence" :type-sig (((("xs" "IndexedSeq[Char]"))) "CharSequence") :type-id 4 :is-callable t) (:name "SecurityException" :type-sig (() "SecurityException") :type-id 13) (:name "Seq" :type-sig (() "scala.collection.Seq") :type-id -1 :to-insert "scala.collection.Seq") (:name "Seq" :type-sig (() "scala.collection.mutable.Seq") :type-id -1 :to-insert "scala.collection.mutable.Seq") (:name "Set" :type-sig (() "scala.collection.mutable.Set") :type-id -1 :to-insert "scala.collection.mutable.Set") (:name "Set" :type-sig (() "scala.collection.Set") :type-id -1 :to-insert "scala.collection.Set") (:name "Seq" :type-sig (() "scala.collection.immutable.Seq") :type-id -1 :to-insert "scala.collection.immutable.Seq") (:name "Set" :type-sig (() "scala.collection.immutable.Set") :type-id -1 :to-insert "scala.collection.immutable.Set") (:name "Set" :type-sig (() "java.util.Set") :type-id -1 :to-insert "java.util.Set") (:name "SetLike" :type-sig (() "scala.collection.SetLike") :type-id -1 :to-insert "scala.collection.SetLike") (:name "SetLike" :type-sig (() "scala.collection.mutable.SetLike") :type-id -1 :to-insert "scala.collection.mutable.SetLike") (:name "SeqLike" :type-sig (() "scala.collection.mutable.SeqLike") :type-id -1 :to-insert "scala.collection.mutable.SeqLike") (:name "SeqLike" :type-sig (() "scala.collection.SeqLike") :type-id -1 :to-insert "scala.collection.SeqLike") (:name "SeqView" :type-sig (() "scala.collection.SeqView") :type-id -1 :to-insert "scala.collection.SeqView") (:name "Service" :type-sig (() "javax.xml.ws.Service") :type-id -1 :to-insert "javax.xml.ws.Service") (:name "Segment" :type-sig (() "javax.swing.text.Segment") :type-id -1 :to-insert "javax.swing.text.Segment") (:name "Servant" :type-sig (() "org.omg.PortableServer.Servant") :type-id -1 :to-insert "org.omg.PortableServer.Servant") (:name "SeqProxy" :type-sig (() "scala.collection.SeqProxy") :type-id -1 :to-insert "scala.collection.SeqProxy") (:name "SetProxy" :type-sig (() "scala.collection.mutable.SetProxy") :type-id -1 :to-insert "scala.collection.mutable.SetProxy") (:name "Set$Set2" :type-sig (() "scala.collection.immutable.Set$Set2") :type-id -1 :to-insert "scala.collection.immutable.Set$Set2") (:...
[info] 22:16:38.948 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:38.949 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 4.
[info] 22:16:39.005 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Seq" :completions ((:name "Seq" :type-sig (() "Seq$") :type-id 5) (:name "Seq" :type-sig (() "Seq") :type-id 6) (:name "SeqCharSequence" :type-sig (() "SeqCharSequence") :type-id 1) (:name "seqToCharSequence" :type-sig (((("xs" "IndexedSeq[Char]"))) "CharSequence") :type-id 4 :is-callable t) (:name "Seq" :type-sig (() "scala.collection.Seq") :type-id -1 :to-insert "scala.collection.Seq") (:name "Seq" :type-sig (() "scala.collection.mutable.Seq") :type-id -1 :to-insert "scala.collection.mutable.Seq") (:name "Seq" :type-sig (() "scala.collection.immutable.Seq") :type-id -1 :to-insert "scala.collection.immutable.Seq") (:name "SeqLike" :type-sig (() "scala.collection.mutable.SeqLike") :type-id -1 :to-insert "scala.collection.mutable.SeqLike") (:name "SeqLike" :type-sig (() "scala.collection.SeqLike") :type-id -1 :to-insert "scala.collection.SeqLike") (:name "SeqView" :type-sig (() "scala.collection.SeqView") :type-id -1 :to-insert "scala.collection.SeqView") (:name "SeqProxy" :type-sig (() "scala.collection.SeqProxy") :type-id -1 :to-insert "scala.collection.SeqProxy") (:name "Sequence" :type-sig (() "javax.sound.midi.Sequence") :type-id -1 :to-insert "javax.sound.midi.Sequence") (:name "Sequencer" :type-sig (() "javax.sound.midi.Sequencer") :type-id -1 :to-insert "javax.sound.midi.Sequencer") (:name "SeqFactory" :type-sig (() "scala.collection.generic.SeqFactory") :type-id -1 :to-insert "scala.collection.generic.SeqFactory") (:name "SeqSplitter" :type-sig (() "scala.collection.parallel.SeqSplitter") :type-id -1 :to-insert "scala.collection.parallel.SeqSplitter") (:name "SeqViewLike" :type-sig (() "scala.collection.SeqViewLike") :type-id -1 :to-insert "scala.collection.SeqViewLike") (:name "SeqProxyLike" :type-sig (() "scala.collection.SeqProxyLike") :type-id -1 :to-insert "scala.collection.SeqProxyLike") (:name "SeqForwarder" :type-sig (() "scala.collection.generic.SeqForwarder") :type-id -1 :to-insert "scala.collection.generic.SeqForwarder") (:name "SeqExtractors" :type-sig (() "scala.collection.SeqExtractors") :type-id -1 :to-insert "scala.collection.SeqExtractors") (:name "SeqCharSequence" :type-sig (() "scala.runtime.SeqCharSequence") :type-id -1 :to-insert "scala.runtime.SeqCharSequence") (:name "SeqSplitter$Taken" :type-sig (() "scala.collection.parallel.SeqSplitter$Taken") :type-id -1 :to-insert "scala.collection.parallel.SeqSplitter$Taken") (:name "SeqViewLike$Sliced" :type-sig (() "scala.collection.SeqViewLike$Sliced") :type-id -1 :to-insert "scala.collection.SeqViewLike$Sliced") (:name "SeqViewLike$Mapped" :type-sig (() "scala.collection.SeqViewLike$Mapped") :type-id -1 :to-insert "scala.collection.SeqViewLike$Mapped") (:name "SeqSplitter$Mapped" :type-sig (() "scala.collection.parallel.SeqSplitter$Mapped") :type-id -1 :to-insert "scala.collection.parallel.SeqSplitter$Mapped") (:name "SeqSplitter$Zipped" :type-sig (() "scala.collection.parallel.SeqSplitter$Zipped") :type-id -1 :to-insert "scala.collection.parallel.S...
[info] 22:16:39.604 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:39.624 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(SepartsToAdd)
[info] 22:16:39.648 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:39.649 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 14.
[info] 22:16:39.734 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Se" :completions ((:name "Serializable" :type-sig (() "<notype>") :type-id 7) (:name "SecurityManager" :type-sig (() "SecurityManager$") :type-id 10) (:name "SerialVersionUID" :type-sig (() "<notype>") :type-id 7) (:name "SecurityException" :type-sig (() "SecurityException$") :type-id 12) (:name "Set" :type-sig (() "Set$") :type-id 2) (:name "Set" :type-sig (() "Set") :type-id 3) (:name "Seq" :type-sig (() "Seq$") :type-id 5) (:name "Seq" :type-sig (() "Seq") :type-id 6) (:name "Serializable" :type-sig (() "Serializable") :type-id 8) (:name "SeqCharSequence" :type-sig (() "SeqCharSequence") :type-id 1) (:name "SecurityManager" :type-sig (() "SecurityManager") :type-id 11) (:name "SerialVersionUID" :type-sig (() "SerialVersionUID") :type-id 9) (:name "seqToCharSequence" :type-sig (((("xs" "IndexedSeq[Char]"))) "CharSequence") :type-id 4 :is-callable t) (:name "SecurityException" :type-sig (() "SecurityException") :type-id 13) (:name "Seq" :type-sig (() "scala.collection.Seq") :type-id -1 :to-insert "scala.collection.Seq") (:name "Seq" :type-sig (() "scala.collection.mutable.Seq") :type-id -1 :to-insert "scala.collection.mutable.Seq") (:name "Set" :type-sig (() "scala.collection.mutable.Set") :type-id -1 :to-insert "scala.collection.mutable.Set") (:name "Set" :type-sig (() "scala.collection.Set") :type-id -1 :to-insert "scala.collection.Set") (:name "Seq" :type-sig (() "scala.collection.immutable.Seq") :type-id -1 :to-insert "scala.collection.immutable.Seq") (:name "Set" :type-sig (() "scala.collection.immutable.Set") :type-id -1 :to-insert "scala.collection.immutable.Set") (:name "Set" :type-sig (() "java.util.Set") :type-id -1 :to-insert "java.util.Set") (:name "SetLike" :type-sig (() "scala.collection.SetLike") :type-id -1 :to-insert "scala.collection.SetLike") (:name "SetLike" :type-sig (() "scala.collection.mutable.SetLike") :type-id -1 :to-insert "scala.collection.mutable.SetLike") (:name "SeqLike" :type-sig (() "scala.collection.mutable.SeqLike") :type-id -1 :to-insert "scala.collection.mutable.SeqLike") (:name "SeqLike" :type-sig (() "scala.collection.SeqLike") :type-id -1 :to-insert "scala.collection.SeqLike") (:name "SeqView" :type-sig (() "scala.collection.SeqView") :type-id -1 :to-insert "scala.collection.SeqView") (:name "Service" :type-sig (() "javax.xml.ws.Service") :type-id -1 :to-insert "javax.xml.ws.Service") (:name "Segment" :type-sig (() "javax.swing.text.Segment") :type-id -1 :to-insert "javax.swing.text.Segment") (:name "Servant" :type-sig (() "org.omg.PortableServer.Servant") :type-id -1 :to-insert "org.omg.PortableServer.Servant") (:name "SeqProxy" :type-sig (() "scala.collection.SeqProxy") :type-id -1 :to-insert "scala.collection.SeqProxy") (:name "SetProxy" :type-sig (() "scala.collection.mutable.SetProxy") :type-id -1 :to-insert "scala.collection.mutable.SetProxy") (:name "Set$Set2" :type-sig (() "scala.collection.immutable.Set$Set2") :type-id -1 :to-insert "scala.collection.immutable.Set$Set2") (:...
[info] 22:16:40.193 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:40.194 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 462 (var val varField valField functionCall operator param class trait object package)) 239)
[info] 22:16:40.199 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:40.205 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "')' expected but ':' found." :beg 438 :end 438 :line 14 :col 46 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:40.253 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type SepartsToAdd" :beg 426 :end 438 :line 14 :col 34 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:40.253 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 395 :end 459 :line 14 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:40.256 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 238)
[info] 22:16:40.256 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:40.257 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (object 426 438)))) 239)
[info] 22:16:42.694 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:42.701 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:42.705 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 465 (var val varField valField functionCall operator param class trait object package)) 241)
[info] 22:16:42.712 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but ']' found." :beg 430 :end 430 :line 14 :col 38 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:42.713 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "']' expected but '}' found." :beg 463 :end 463 :line 15 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:42.761 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 430 :end 462 :line 14 :col 38 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:42.763 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 395 :end 462 :line 14 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:42.763 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 240)
[info] 22:16:42.764 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:42.764 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (trait 426 462)))) 241)
[info] 22:16:45.693 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:45.700 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:45.703 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 460 (var val varField valField functionCall operator param class trait object package)) 243)
[info] 22:16:45.705 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "')' expected but ':' found." :beg 436 :end 436 :line 14 :col 44 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:45.746 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type partsToAdd" :beg 426 :end 436 :line 14 :col 34 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:45.747 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 395 :end 457 :line 14 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:45.747 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 242)
[info] 22:16:45.748 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:45.748 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (object 426 436)))) 243)
[info] 22:16:46.594 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:46.614 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(MapartsToAdd)
[info] 22:16:46.649 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:46.651 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 11.
[info] 22:16:46.671 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:46.757 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(MappartsToAdd)
[info] 22:16:46.759 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Ma" :completions ((:name "Math" :type-sig (() "Math$") :type-id 141) (:name "MatchError" :type-sig (() "<notype>") :type-id 7) (:name "Map" :type-sig (() "Map$") :type-id 136) (:name "Map" :type-sig (() "Map") :type-id 137) (:name "Math" :type-sig (() "Math") :type-id 142) (:name "manifest" :type-sig (((("m" "Manifest[T]"))) "Manifest[T]") :type-id 133 :is-callable t) (:name "Manifest" :type-sig (() "ManifestFactory$") :type-id 134) (:name "Manifest" :type-sig (() "Manifest") :type-id 135) (:name "MatchError" :type-sig (() "MatchError") :type-id 139) (:name "math" :type-sig (() "math$") :type-id 138) (:name "management" :type-sig (() "management$") :type-id 140) (:name "Map" :type-sig (() "scala.collection.mutable.Map") :type-id -1 :to-insert "scala.collection.mutable.Map") (:name "Map" :type-sig (() "scala.collection.Map") :type-id -1 :to-insert "scala.collection.Map") (:name "Map" :type-sig (() "scala.collection.concurrent.Map") :type-id -1 :to-insert "scala.collection.concurrent.Map") (:name "Map" :type-sig (() "scala.collection.immutable.Map") :type-id -1 :to-insert "scala.collection.immutable.Map") (:name "Map" :type-sig (() "java.util.Map") :type-id -1 :to-insert "java.util.Map") (:name "Math" :type-sig (() "java.lang.Math") :type-id -1 :to-insert "java.lang.Math") (:name "MapLike" :type-sig (() "scala.collection.mutable.MapLike") :type-id -1 :to-insert "scala.collection.mutable.MapLike") (:name "MapLike" :type-sig (() "scala.collection.immutable.MapLike") :type-id -1 :to-insert "scala.collection.immutable.MapLike") (:name "MapLike" :type-sig (() "scala.collection.MapLike") :type-id -1 :to-insert "scala.collection.MapLike") (:name "Matcher" :type-sig (() "java.util.regex.Matcher") :type-id -1 :to-insert "java.util.regex.Matcher") (:name "MapProxy" :type-sig (() "scala.collection.MapProxy") :type-id -1 :to-insert "scala.collection.MapProxy") (:name "MapProxy" :type-sig (() "scala.collection.mutable.MapProxy") :type-id -1 :to-insert "scala.collection.mutable.MapProxy") (:name "MapProxy" :type-sig (() "scala.collection.immutable.MapProxy") :type-id -1 :to-insert "scala.collection.immutable.MapProxy") (:name "Map$Map4" :type-sig (() "scala.collection.immutable.Map$Map4") :type-id -1 :to-insert "scala.collection.immutable.Map$Map4") (:name "Map$Map1" :type-sig (() "scala.collection.immutable.Map$Map1") :type-id -1 :to-insert "scala.collection.immutable.Map$Map1") (:name "Map$Map3" :type-sig (() "scala.collection.immutable.Map$Map3") :type-id -1 :to-insert "scala.collection.immutable.Map$Map3") (:name "Map$Map2" :type-sig (() "scala.collection.immutable.Map$Map2") :type-id -1 :to-insert "scala.collection.immutable.Map$Map2") (:name "Manifest" :type-sig (() "scala.reflect.Manifest") :type-id -1 :to-insert "scala.reflect.Manifest") (:name "Manifest" :type-sig (() "javax.xml.crypto.dsig.Manifest") :type-id -1 :to-insert "javax.xml.crypto.dsig.Manifest") (:name "Manifest" :type-sig (() "java.util.jar.Manifest") :type-id -1 :to...
[info] 22:16:46.789 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:46.791 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:16:46.847 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Map" :completions ((:name "Map" :type-sig (() "Map$") :type-id 136) (:name "Map" :type-sig (() "Map") :type-id 137) (:name "Map" :type-sig (() "scala.collection.mutable.Map") :type-id -1 :to-insert "scala.collection.mutable.Map") (:name "Map" :type-sig (() "scala.collection.Map") :type-id -1 :to-insert "scala.collection.Map") (:name "Map" :type-sig (() "scala.collection.concurrent.Map") :type-id -1 :to-insert "scala.collection.concurrent.Map") (:name "Map" :type-sig (() "scala.collection.immutable.Map") :type-id -1 :to-insert "scala.collection.immutable.Map") (:name "Map" :type-sig (() "java.util.Map") :type-id -1 :to-insert "java.util.Map") (:name "MapLike" :type-sig (() "scala.collection.mutable.MapLike") :type-id -1 :to-insert "scala.collection.mutable.MapLike") (:name "MapLike" :type-sig (() "scala.collection.immutable.MapLike") :type-id -1 :to-insert "scala.collection.immutable.MapLike") (:name "MapLike" :type-sig (() "scala.collection.MapLike") :type-id -1 :to-insert "scala.collection.MapLike") (:name "MapProxy" :type-sig (() "scala.collection.MapProxy") :type-id -1 :to-insert "scala.collection.MapProxy") (:name "MapProxy" :type-sig (() "scala.collection.mutable.MapProxy") :type-id -1 :to-insert "scala.collection.mutable.MapProxy") (:name "MapProxy" :type-sig (() "scala.collection.immutable.MapProxy") :type-id -1 :to-insert "scala.collection.immutable.MapProxy") (:name "Map$Map4" :type-sig (() "scala.collection.immutable.Map$Map4") :type-id -1 :to-insert "scala.collection.immutable.Map$Map4") (:name "Map$Map1" :type-sig (() "scala.collection.immutable.Map$Map1") :type-id -1 :to-insert "scala.collection.immutable.Map$Map1") (:name "Map$Map3" :type-sig (() "scala.collection.immutable.Map$Map3") :type-id -1 :to-insert "scala.collection.immutable.Map$Map3") (:name "Map$Map2" :type-sig (() "scala.collection.immutable.Map$Map2") :type-id -1 :to-insert "scala.collection.immutable.Map$Map2") (:name "Map$Entry" :type-sig (() "java.util.Map$Entry") :type-id -1 :to-insert "java.util.Map$Entry") (:name "MapBuilder" :type-sig (() "scala.collection.mutable.MapBuilder") :type-id -1 :to-insert "scala.collection.mutable.MapBuilder") (:name "MapFactory" :type-sig (() "scala.collection.generic.MapFactory") :type-id -1 :to-insert "scala.collection.generic.MapFactory") (:name "MapProxyLike" :type-sig (() "scala.collection.MapProxyLike") :type-id -1 :to-insert "scala.collection.MapProxyLike") (:name "Map$WithDefault" :type-sig (() "scala.collection.mutable.Map$WithDefault") :type-id -1 :to-insert "scala.collection.mutable.Map$WithDefault") (:name "Map$WithDefault" :type-sig (() "scala.collection.immutable.Map$WithDefault") :type-id -1 :to-insert "scala.collection.immutable.Map$WithDefault") (:name "Map$WithDefault" :type-sig (() "scala.collection.Map$WithDefault") :type-id -1 :to-insert "scala.collection.Map$WithDefault") (:name "MappedByteBuffer" :type-sig (() "java.nio.MappedByteBuffer") :type-id -1 :to-insert "java.nio.MappedByteBuffer...
[info] 22:16:48.193 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:48.195 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 463 (var val varField valField functionCall operator param class trait object package)) 247)
[info] 22:16:48.201 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:48.206 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "')' expected but ':' found." :beg 439 :end 439 :line 14 :col 47 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:48.253 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type MappartsToAdd" :beg 426 :end 439 :line 14 :col 34 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:48.253 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 395 :end 460 :line 14 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:48.254 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 246)
[info] 22:16:48.255 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:48.255 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (object 426 439)))) 247)
[info] 22:16:51.694 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:51.701 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:51.705 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 465 (var val varField valField functionCall operator param class trait object package)) 249)
[info] 22:16:51.709 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but ']' found." :beg 430 :end 430 :line 14 :col 38 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:51.710 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "']' expected but '}' found." :beg 463 :end 463 :line 15 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:51.759 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "wrong number of type arguments for Map, should be 2" :beg 426 :end 462 :line 14 :col 34 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:51.761 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 395 :end 462 :line 14 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:51.762 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 248)
[info] 22:16:51.762 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:51.762 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (object 426 462)))) 249)
[info] 22:16:51.983 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:52.003 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existingParts
[info] 22:16:52.056 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:52.057 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 10.
[info] 22:16:52.088 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:52.096 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPart" :type-sig (() "BodyPart") :type-id 143) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.BooleanControl") (:name "BorderUIResource" :type-sig (() "javax.swing.plaf.BorderUIResource") :type-id -1 :to-insert "j...
[info] 22:16:52.101 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existingParts
[info] 22:16:52.126 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:52.127 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:16:52.129 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 144) (:name "body" :type-sig (() "body$") :type-id 52)))) 251)
[info] 22:16:53.593 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:53.614 [default-akka.actor.default-dispatcher-38] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existingParts
[info] 22:16:53.644 [default-akka.actor.default-dispatcher-38] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:53.646 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:16:53.646 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPart" :completions ((:name "BodyPart" :type-sig (() "BodyPart") :type-id 145)))) 252)
[info] 22:16:54.194 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:54.195 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 473 (var val varField valField functionCall operator param class trait object package)) 254)
[info] 22:16:54.201 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:54.206 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but ':' found." :beg 449 :end 449 :line 14 :col 57 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:54.207 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "')' expected but '}' found." :beg 471 :end 471 :line 15 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:54.254 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type partsToAdd" :beg 439 :end 449 :line 14 :col 47 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:54.255 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 395 :end 470 :line 14 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:54.255 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 253)
[info] 22:16:54.257 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:54.257 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (object 439 449)))) 254)
[info] 22:16:55.826 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:55.842 [default-akka.actor.default-dispatcher-190] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existingParts
[info] 22:16:55.874 [default-akka.actor.default-dispatcher-190] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:55.876 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 25.
[info] 22:16:55.931 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:55.977 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:56.042 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  case...
[info] 22:16:56.054 [default-akka.actor.default-dispatcher-190] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existingParts
[info] 22:16:56.069 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "St" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StackTraceElement" :type-sig (() "StackTraceElement$") :type-id 169) (:name "StackOverflowError" :type-sig (() "StackOverflowError$") :type-id 159) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "Stream" :type-sig (() "Stream$") :type-id 153) (:name "Stream" :type-sig (() "Stream") :type-id 154) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StackTraceElement" :type-sig (() "StackTraceElement") :type-id 170) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StackOverflowError" :type-sig (() "StackOverflowError") :type-id 160) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "Stub" :type-sig (() "javax.rmi.CORBA.Stub") :type-id -1 :to-insert "javax.rmi.CORBA.Stub") (:name "StdIn" :type-sig (() "scala.io.StdIn") :type-id -1 :to-insert "scala.io.StdIn") (:name "Start" :type-sig (() "scala.collection.script.Start") :type-id -1 :to-insert "scala.collection.script.Start") (:name "Stack" :type-sig (() "scala.collection.mutable.Stack") :type-id -1 :to-insert "scala.collection.mutable.Stack") (:name "Stack" :type-sig (() "scala.collection.immutable.Stack") :type-id -1 :to-insert "scala.collection.immutable.Stack") (:name "State" :type-sig (() "javax.swing.plaf.nimbus.State") :type-id -1 :to-insert "javax.swing.plaf.nimbus.State") (:name "Style" :type-sig (() "javax.swing.text.Style") :type-id -1 :to-insert "javax.swing.text.Style") (:name "Stack" :type-sig (() "java.util.Stack") :type-id -1 :to-insert "java.util.Stack") (:name "State" :type-sig (() "org.omg.PortableServer.POAManagerPackage.State") :type-id -1 :to...
[info] 22:16:56.084 [default-akka.actor.default-dispatcher-190] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:56.086 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 21.
[info] 22:16:56.136 [default-akka.actor.default-dispatcher-190] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existingParts
[info] 22:16:56.139 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Str" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "Stream" :type-sig (() "Stream$") :type-id 153) (:name "Stream" :type-sig (() "Stream") :type-id 154) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "Stream" :type-sig (() "scala.collection.immutable.Stream") :type-id -1 :to-insert "scala.collection.immutable.Stream") (:name "String" :type-sig (() "java.lang.String") :type-id -1 :to-insert "java.lang.String") (:name "Stroke" :type-sig (() "java.awt.Stroke") :type-id -1 :to-insert "java.awt.Stroke") (:name "Struct" :type-sig (() "java.sql.Struct") :type-id -1 :to-insert "java.sql.Struct") (:name "StringAdd" :type-sig (() "scala.runtime.StringAdd") :type-id -1 :to-insert "scala.runtime.StringAdd") (:name "StringOps" :type-sig (() "scala.collection.immutable.StringOps") :type-id -1 :to-insert "scala.collection.immutable.StringOps") (:name "StreamView" :type-sig (() "scala.collection.immutable.StreamView") :type-id -1 :to-insert "scala.collection.immutable.StreamView") (:name "StringLike" :type-sig (() "scala.collection.immutable.StringLike") :type-id -1 :to-insert "scala.collection.immutable.StringLike") (:name "StrictMath" :type-sig (() "java.lang.StrictMath") :type-id -1 :to-insert "java.lang.StrictMath") (:name "Streamable" :type-sig (() "org.omg.CORBA.portable.Streamable") :type-id -1 :to-insert "org.omg.CORBA.portable.Streamable") (:name "Stream$Cons" :type-sig (() "scala.collection.immutable.Stream$Cons") :type-id -1 :to-insert "s...
[info] 22:16:56.161 [default-akka.actor.default-dispatcher-190] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:56.162 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 19.
[info] 22:16:56.204 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Stri" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "String" :type-sig (() "java.lang.String") :type-id -1 :to-insert "java.lang.String") (:name "StringAdd" :type-sig (() "scala.runtime.StringAdd") :type-id -1 :to-insert "scala.runtime.StringAdd") (:name "StringOps" :type-sig (() "scala.collection.immutable.StringOps") :type-id -1 :to-insert "scala.collection.immutable.StringOps") (:name "StringLike" :type-sig (() "scala.collection.immutable.StringLike") :type-id -1 :to-insert "scala.collection.immutable.StringLike") (:name "StrictMath" :type-sig (() "java.lang.StrictMath") :type-id -1 :to-insert "java.lang.StrictMath") (:name "StringFormat" :type-sig (() "scala.runtime.StringFormat") :type-id -1 :to-insert "scala.runtime.StringFormat") (:name "StringBuffer" :type-sig (() "java.lang.StringBuffer") :type-id -1 :to-insert "java.lang.StringBuffer") (:name "StringWriter" :type-sig (() "java.io.StringWriter") :type-id -1 :to-insert "java.io.StringWriter") (:name "StringReader" :type-sig (() "java.io.StringReader") :type-id -1 :to-insert "java.io.StringReader") (:name "StringHolder" :type-sig (() "org.omg.CORBA.StringHolder") :type-id -1 :to-insert "org.omg.CORBA.StringHolder") (:name "StringBuilder" :type-sig (() "scala.collection.mutable.StringBuilder") :type-id -1 :to-insert "scala.collection.mutable.StringBuilder") (:name "StringContext" :type-sig (() "scala.StringContext") :type-id -1 :to-insert...
[info] 22:16:56.209 [default-akka.actor.default-dispatcher-190] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term existingParts
[info] 22:16:56.227 [default-akka.actor.default-dispatcher-190] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:16:56.228 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 17.
[info] 22:16:56.260 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Strin" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "String" :type-sig (() "java.lang.String") :type-id -1 :to-insert "java.lang.String") (:name "StringAdd" :type-sig (() "scala.runtime.StringAdd") :type-id -1 :to-insert "scala.runtime.StringAdd") (:name "StringOps" :type-sig (() "scala.collection.immutable.StringOps") :type-id -1 :to-insert "scala.collection.immutable.StringOps") (:name "StringLike" :type-sig (() "scala.collection.immutable.StringLike") :type-id -1 :to-insert "scala.collection.immutable.StringLike") (:name "StringFormat" :type-sig (() "scala.runtime.StringFormat") :type-id -1 :to-insert "scala.runtime.StringFormat") (:name "StringBuffer" :type-sig (() "java.lang.StringBuffer") :type-id -1 :to-insert "java.lang.StringBuffer") (:name "StringWriter" :type-sig (() "java.io.StringWriter") :type-id -1 :to-insert "java.io.StringWriter") (:name "StringReader" :type-sig (() "java.io.StringReader") :type-id -1 :to-insert "java.io.StringReader") (:name "StringHolder" :type-sig (() "org.omg.CORBA.StringHolder") :type-id -1 :to-insert "org.omg.CORBA.StringHolder") (:name "StringBuilder" :type-sig (() "scala.collection.mutable.StringBuilder") :type-id -1 :to-insert "scala.collection.mutable.StringBuilder") (:name "StringContext" :type-sig (() "scala.StringContext") :type-id -1 :to-insert "scala.StringContext") (:name "StringRefAddr" :type-sig (() "javax.naming.StringRefAddr") :type-id -1 :to-insert "javax.naming.StringRefAddr") (:name "StringContent" :type-sig (() "javax.swing.text.StringContent") :type-id -1 :t...
[info] 22:16:56.694 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:56.700 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:56.704 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 481 (var val varField valField functionCall operator param class trait object package)) 260)
[info] 22:16:56.710 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but ':' found." :beg 457 :end 457 :line 14 :col 65 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:56.711 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "')' expected but '}' found." :beg 479 :end 479 :line 15 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:56.754 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type partsToAdd" :beg 447 :end 457 :line 14 :col 55 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:56.756 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 395 :end 478 :line 14 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:16:56.756 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 259)
[info] 22:16:56.756 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:56.757 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (object 447 457)))) 260)
[info] 22:16:59.193 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:16:59.200 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:16:59.204 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 483 (var val varField valField functionCall operator param class trait object package)) 262)
[info] 22:16:59.255 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 261)
[info] 22:16:59.256 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:16:59.256 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (trait 426 447) (param 449 459) (trait 461 474)))) 262)
[info] 22:17:01.693 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** An enumeration of body parts */\n  sealed trait BodyPart\n  case object Head extends BodyPart\n  case object Torso extends BodyPart\n  case object LeftArm extends BodyPart\n  case object RightArm extends BodyPart\n  case object Legs extends BodyPart // both legs can be a single character\n  case object LeftLeg extends BodyPart\n  c...
[info] 22:17:01.695 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 487 (var val varField valField functionCall operator param class trait object package)) 264)
[info] 22:17:01.701 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:17:01.754 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 263)
[info] 22:17:01.756 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (trait 426 447) (param 453 463) (trait 465 478)))) 264)
[info] 22:17:01.756 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:17:03.607 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 265)
[info] 22:17:03.614 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:17:03.616 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 487 (var val varField valField functionCall operator param class trait object package)) 266)
[info] 22:17:03.647 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 265)
[info] 22:17:03.648 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:17:03.648 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 112 120) (trait 149 157) (trait 188 196) (trait 228 236) (trait 264 272) (trait 342 350) (trait 382 390) (param 411 424) (trait 426 447) (param 453 463) (trait 465 478)))) 266)
[info] 22:17:12.597 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-at-point "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 76) 267)
[info] 22:17:12.630 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:name "body.package$$BodyPart" :local-name "BodyPart" :type (:name "BodyPart" :type-id 173 :full-name "body.package$$BodyPart" :decl-as trait :pos t :outer-type-id 172) :decl-pos (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :offset 76) :owner-type-id 172)) 267)
[info] 22:17:15.736 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:prepare-refactor 1 rename (file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" start 76 end 84 newName "BodyPartSlot") t) 268)
[info] 22:17:16.386 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:17:16.388 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:procedure-id 1 :refactor-type rename :status success :changes ((:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 84 :to 84) (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 120 :to 120) (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 157 :to 157) (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 196 :to 196) (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 236 :to 236) (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 272 :to 272) (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 350 :to 350) (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 390 :to 390) (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 438 :to 438) (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :text "Slot" :from 477 :to 477)))) 268)
[info] 22:17:20.792 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:exec-refactor 1 rename) 269)
[info] 22:17:20.800 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Applying changes: List(TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,84,84,Slot), TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,120,120,Slot), TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,157,157,Slot), TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,196,196,Slot), TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,236,236,Slot), TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,272,272,Slot), TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,350,350,Slot), TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,390,390,Slot), TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,438,438,Slot), TextEdit(/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala,477,477,Slot))
[info] 22:17:20.814 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:17:20.815 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:procedure-id 1 :refactor-type rename :status success :touched-files ("/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))) 269)
[info] 22:17:20.820 [default-akka.actor.default-dispatcher-38] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 270)
[info] 22:17:20.824 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:17:20.866 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 270)
[info] 22:17:20.866 [default-akka.actor.default-dispatcher-190] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:17:43.361 [Thread-8] INFO  org.ensime.indexer.ClassfileWatcher - Setting up new file watchers
[info] 22:18:04.314 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 271)
[info] 22:18:04.321 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:18:04.324 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 25 (var val varField valField functionCall operator param class trait object package)) 272)
[info] 22:18:04.326 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 527 (var val varField valField functionCall operator param class trait object package)) 273)
[info] 22:18:04.376 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 271)
[info] 22:18:04.377 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 116 128) (trait 157 169) (trait 200 212) (trait 244 256) (trait 284 296) (trait 366 378) (trait 410 422) (param 443 456) (trait 458 483) (param 489 499) (trait 501 518)))) 273)
[info] 22:18:04.378 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:18:04.378 [default-akka.actor.default-dispatcher-76] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 272)
[info] 22:18:14.029 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:18:14.030 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:18:27.311 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** There are a number of slots a body part can occup */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs can be a single character...
[info] 22:18:27.313 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 548 (var val varField valField functionCall operator param class trait object package)) 275)
[info] 22:18:27.321 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:18:27.380 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 274)
[info] 22:18:27.381 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:18:27.382 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 137 149) (trait 178 190) (trait 221 233) (trait 265 277) (trait 305 317) (trait 387 399) (trait 431 443) (param 464 477) (trait 479 504) (param 510 520) (trait 522 539)))) 275)
[info] 22:18:30.808 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** There are a number of slots  */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs can be a single character\n  case object LeftL...
[info] 22:18:30.813 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:18:30.815 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 527 (var val varField valField functionCall operator param class trait object package)) 277)
[info] 22:18:30.852 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 276)
[info] 22:18:30.855 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 116 128) (trait 157 169) (trait 200 212) (trait 244 256) (trait 284 296) (trait 366 378) (trait 410 422) (param 443 456) (trait 458 483) (param 489 499) (trait 501 518)))) 277)
[info] 22:18:30.855 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:18:46.311 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts  */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs can be a si...
[info] 22:18:46.312 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 562 (var val varField valField functionCall operator param class trait object package)) 279)
[info] 22:18:46.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:18:46.362 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 278)
[info] 22:18:46.365 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:18:46.365 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 151 163) (trait 192 204) (trait 235 247) (trait 279 291) (trait 319 331) (trait 401 413) (trait 445 457) (param 478 491) (trait 493 518) (param 524 534) (trait 536 553)))) 279)
[info] 22:18:48.809 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs can be a sin...
[info] 22:18:48.815 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:18:48.817 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 561 (var val varField valField functionCall operator param class trait object package)) 281)
[info] 22:18:48.856 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 280)
[info] 22:18:48.858 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 150 162) (trait 191 203) (trait 234 246) (trait 278 290) (trait 318 330) (trait 400 412) (trait 444 456) (param 477 490) (trait 492 517) (param 523 533) (trait 535 552)))) 281)
[info] 22:18:48.859 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:04.810 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts (lol) */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs can be...
[info] 22:19:04.811 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 567 (var val varField valField functionCall operator param class trait object package)) 283)
[info] 22:19:04.815 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:04.862 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 282)
[info] 22:19:04.867 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:04.868 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 156 168) (trait 197 209) (trait 240 252) (trait 284 296) (trait 324 336) (trait 406 418) (trait 450 462) (param 483 496) (trait 498 523) (param 529 539) (trait 541 558)))) 283)
[info] 22:19:07.311 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts (lol). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs can b...
[info] 22:19:07.317 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:07.320 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 568 (var val varField valField functionCall operator param class trait object package)) 285)
[info] 22:19:07.381 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 284)
[info] 22:19:07.385 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:07.385 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 157 169) (trait 198 210) (trait 241 253) (trait 285 297) (trait 325 337) (trait 407 419) (trait 451 463) (param 484 497) (trait 499 524) (param 530 540) (trait 542 559)))) 285)
[info] 22:19:10.312 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs can be a si...
[info] 22:19:10.313 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 562 (var val varField valField functionCall operator param class trait object package)) 287)
[info] 22:19:10.319 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:10.372 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 286)
[info] 22:19:10.374 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:10.374 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 151 163) (trait 192 204) (trait 235 247) (trait 279 291) (trait 319 331) (trait 401 413) (trait 445 457) (param 478 491) (trait 493 518) (param 524 534) (trait 536 553)))) 287)
[info] 22:19:16.810 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts.  */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs can be a s...
[info] 22:19:16.816 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:16.819 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 563 (var val varField valField functionCall operator param class trait object package)) 289)
[info] 22:19:16.864 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 288)
[info] 22:19:16.865 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:16.866 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 152 164) (trait 193 205) (trait 236 248) (trait 280 292) (trait 320 332) (trait 402 414) (trait 446 458) (param 479 492) (trait 494 519) (param 525 535) (trait 537 554)))) 289)
[info] 22:19:19.810 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs c...
[info] 22:19:19.811 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 572 (var val varField valField functionCall operator param class trait object package)) 291)
[info] 22:19:19.815 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:19.858 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 290)
[info] 22:19:19.859 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:19.860 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 161 173) (trait 202 214) (trait 245 257) (trait 289 301) (trait 329 341) (trait 411 423) (trait 455 467) (param 488 501) (trait 503 528) (param 534 544) (trait 546 563)))) 291)
[info] 22:19:22.319 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both...
[info] 22:19:22.325 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:22.328 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 578 (var val varField valField functionCall operator param class trait object package)) 293)
[info] 22:19:22.376 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 292)
[info] 22:19:22.379 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 167 179) (trait 208 220) (trait 251 263) (trait 295 307) (trait 335 347) (trait 417 429) (trait 461 473) (param 494 507) (trait 509 534) (param 540 550) (trait 552 569)))) 293)
[info] 22:19:22.379 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:25.810 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * not all of them */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends Body...
[info] 22:19:25.811 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 594 (var val varField valField functionCall operator param class trait object package)) 295)
[info] 22:19:25.814 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:25.856 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 294)
[info] 22:19:25.857 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:25.858 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 183 195) (trait 224 236) (trait 267 279) (trait 311 323) (trait 351 363) (trait 433 445) (trait 477 489) (param 510 523) (trait 525 550) (param 556 566) (trait 568 585)))) 295)
[info] 22:19:30.809 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Not all of*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs c...
[info] 22:19:30.814 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:30.816 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 572 (var val varField valField functionCall operator param class trait object package)) 297)
[info] 22:19:30.856 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 296)
[info] 22:19:30.857 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:30.857 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 161 173) (trait 202 214) (trait 245 257) (trait 289 301) (trait 329 341) (trait 411 423) (trait 455 467) (param 488 501) (trait 503 528) (param 534 544) (trait 546 563)))) 297)
[info] 22:19:33.311 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Not all of\n    */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both ...
[info] 22:19:33.312 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 577 (var val varField valField functionCall operator param class trait object package)) 299)
[info] 22:19:33.318 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:33.371 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 298)
[info] 22:19:33.372 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:33.372 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 166 178) (trait 207 219) (trait 250 262) (trait 294 306) (trait 334 346) (trait 416 428) (trait 460 472) (param 493 506) (trait 508 533) (param 539 549) (trait 551 568)))) 299)
[info] 22:19:40.311 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Not all of*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs c...
[info] 22:19:40.317 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:40.321 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 572 (var val varField valField functionCall operator param class trait object package)) 301)
[info] 22:19:40.369 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 300)
[info] 22:19:40.372 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:40.373 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 161 173) (trait 202 214) (trait 245 257) (trait 289 301) (trait 329 341) (trait 411 423) (trait 455 467) (param 488 501) (trait 503 528) (param 534 544) (trait 546 563)))) 301)
[info] 22:19:42.809 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs can be a si...
[info] 22:19:42.810 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 562 (var val varField valField functionCall operator param class trait object package)) 303)
[info] 22:19:42.812 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 161 173) (trait 202 214) (trait 245 257) (trait 289 301) (trait 329 341) (trait 411 423) (trait 455 467) (param 488 501) (trait 503 528) (param 534 544) (trait 546 563)))) 303)
[info] 22:19:42.814 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:42.850 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 302)
[info] 22:19:42.850 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:48.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs c...
[info] 22:19:48.815 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:48.818 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 572 (var val varField valField functionCall operator param class trait object package)) 305)
[info] 22:19:48.856 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 304)
[info] 22:19:48.858 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:48.858 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 161 173) (trait 202 214) (trait 245 257) (trait 289 301) (trait 329 341) (trait 411 423) (trait 455 467) (param 488 501) (trait 503 528) (param 534 544) (trait 546 563)))) 305)
[info] 22:19:52.311 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that a single */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // bo...
[info] 22:19:52.313 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 581 (var val varField valField functionCall operator param class trait object package)) 307)
[info] 22:19:52.321 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:52.388 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 306)
[info] 22:19:52.392 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:52.393 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 170 182) (trait 211 223) (trait 254 266) (trait 298 310) (trait 338 350) (trait 420 432) (trait 464 476) (param 497 510) (trait 512 537) (param 543 553) (trait 555 572)))) 307)
[info] 22:19:55.810 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends BodyPartSlot // both legs ca...
[info] 22:19:55.815 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:19:55.817 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 571 (var val varField valField functionCall operator param class trait object package)) 309)
[info] 22:19:55.854 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 308)
[info] 22:19:55.855 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:19:55.856 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 160 172) (trait 201 213) (trait 244 256) (trait 288 300) (trait 328 340) (trait 410 422) (trait 454 466) (param 487 500) (trait 502 527) (param 533 543) (trait 545 562)))) 309)
[info] 22:20:02.809 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  case object Legs extends B...
[info] 22:20:02.812 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:02.814 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 597 (var val varField valField functionCall operator param class trait object package)) 311)
[info] 22:20:02.844 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 310)
[info] 22:20:02.845 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:02.846 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 186 198) (trait 227 239) (trait 270 282) (trait 314 326) (trait 354 366) (trait 436 448) (trait 480 492) (param 513 526) (trait 528 553) (param 559 569) (trait 571 588)))) 311)
[info] 22:20:14.809 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyPartSlot\n  cas...
[info] 22:20:14.813 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:14.815 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 620 (var val varField valField functionCall operator param class trait object package)) 313)
[info] 22:20:14.847 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 312)
[info] 22:20:14.848 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:14.848 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 209 221) (trait 250 262) (trait 293 305) (trait 337 349) (trait 377 389) (trait 459 471) (trait 503 515) (param 536 549) (trait 551 576) (param 582 592) (trait 594 611)))) 313)
[info] 22:20:17.840 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact)*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object RightArm extends BodyP...
[info] 22:20:17.843 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:17.846 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 634 (var val varField valField functionCall operator param class trait object package)) 315)
[info] 22:20:17.872 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 314)
[info] 22:20:17.875 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 223 235) (trait 264 276) (trait 307 319) (trait 351 363) (trait 391 403) (trait 473 485) (trait 517 529) (param 550 563) (trait 565 590) (param 596 606) (trait 608 625)))) 315)
[info] 22:20:17.875 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:21.311 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them)*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object Right...
[info] 22:20:21.318 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:21.320 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 651 (var val varField valField functionCall operator param class trait object package)) 317)
[info] 22:20:21.370 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 316)
[info] 22:20:21.371 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:21.372 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 240 252) (trait 281 293) (trait 324 336) (trait 368 380) (trait 408 420) (trait 490 502) (trait 534 546) (param 567 580) (trait 582 607) (param 613 623) (trait 625 642)))) 317)
[info] 22:20:23.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them )*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case object Righ...
[info] 22:20:23.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 652 (var val varField valField functionCall operator param class trait object package)) 319)
[info] 22:20:23.814 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:23.848 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 318)
[info] 22:20:23.849 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:23.849 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 241 253) (trait 282 294) (trait 325 337) (trait 369 381) (trait 409 421) (trait 491 503) (trait 535 547) (param 568 581) (trait 583 608) (param 614 624) (trait 626 643)))) 319)
[info] 22:20:26.310 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * )*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case obje...
[info] 22:20:26.317 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:26.321 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 658 (var val varField valField functionCall operator param class trait object package)) 321)
[info] 22:20:26.367 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 320)
[info] 22:20:26.369 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:26.369 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 247 259) (trait 288 300) (trait 331 343) (trait 375 387) (trait 415 427) (trait 497 509) (trait 541 553) (param 574 587) (trait 589 614) (param 620 630) (trait 632 649)))) 321)
[info] 22:20:28.811 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all.)*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n  case ...
[info] 22:20:28.812 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 662 (var val varField valField functionCall operator param class trait object package)) 323)
[info] 22:20:28.815 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:28.857 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 322)
[info] 22:20:28.858 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:28.858 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 251 263) (trait 292 304) (trait 335 347) (trait 379 391) (trait 419 431) (trait 501 513) (trait 545 557) (param 578 591) (trait 593 618) (param 624 634) (trait 636 653)))) 323)
[info] 22:20:31.809 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and sti)*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends BodyPartSlot\n...
[info] 22:20:31.814 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:31.815 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 669 (var val varField valField functionCall operator param class trait object package)) 325)
[info] 22:20:31.853 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 324)
[info] 22:20:31.854 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:31.854 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 258 270) (trait 299 311) (trait 342 354) (trait 386 398) (trait 426 438) (trait 508 520) (trait 552 564) (param 585 598) (trait 600 625) (param 631 641) (trait 643 660)))) 325)
[info] 22:20:34.809 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense)*/\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends B...
[info] 22:20:34.809 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 682 (var val varField valField functionCall operator param class trait object package)) 327)
[info] 22:20:34.813 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:34.844 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 326)
[info] 22:20:34.845 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 271 283) (trait 312 324) (trait 355 367) (trait 399 411) (trait 439 451) (trait 521 533) (trait 565 577) (param 598 611) (trait 613 638) (param 644 654) (trait 656 673)))) 327)
[info] 22:20:34.845 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:35.948 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 328)
[info] 22:20:35.955 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:35.958 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 684 (var val varField valField functionCall operator param class trait object package)) 329)
[info] 22:20:36.000 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 328)
[info] 22:20:36.002 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:36.002 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 600 613) (trait 615 640) (param 646 656) (trait 658 675)))) 329)
[info] 22:20:51.947 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:20:51.963 [default-akka.actor.default-dispatcher-228] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(ty)
[info] 22:20:51.987 [default-akka.actor.default-dispatcher-228] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:20:51.988 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:20:51.990 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ty" :completions ((:name "TypeNotPresentException" :type-sig (() "TypeNotPresentException$") :type-id 174) (:name "TypeNotPresentException" :type-sig (() "TypeNotPresentException") :type-id 175)))) 330)
[info] 22:20:52.123 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:20:52.124 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:20:54.125 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:20:54.139 [default-akka.actor.default-dispatcher-228] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(ty)
[info] 22:20:54.162 [default-akka.actor.default-dispatcher-228] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:20:54.164 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:20:54.165 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ty" :completions ((:name "TypeNotPresentException" :type-sig (() "TypeNotPresentException$") :type-id 174) (:name "TypeNotPresentException" :type-sig (() "TypeNotPresentException") :type-id 175)))) 331)
[info] 22:20:55.371 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:20:55.392 [default-akka.actor.default-dispatcher-228] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:type Bo
[info] 22:20:55.414 [default-akka.actor.default-dispatcher-228] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:20:55.415 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 11.
[info] 22:20:55.447 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:20:55.457 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Bo" :type-sig (() "Bo") :type-id 177) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 176) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.BooleanControl") (:name "BorderUIResource" :type-sig (() "javax.s...
[info] 22:20:55.465 [default-akka.actor.default-dispatcher-228] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:type Bod
[info] 22:20:55.491 [default-akka.actor.default-dispatcher-228] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:20:55.492 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:20:55.493 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "Bod" :type-sig (() "Bod") :type-id 179) (:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 178) (:name "body" :type-sig (() "body$") :type-id 52)))) 333)
[info] 22:20:56.809 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:20:56.813 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:56.816 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 701 (var val varField valField functionCall operator param class trait object package)) 335)
[info] 22:20:56.854 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 334)
[info] 22:20:56.856 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:56.856 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 617 630) (trait 632 657) (param 663 673) (trait 675 692)))) 335)
[info] 22:20:58.719 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:20:58.733 [default-akka.actor.default-dispatcher-223] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(St)
[info] 22:20:58.768 [default-akka.actor.default-dispatcher-223] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:20:58.770 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 25.
[info] 22:20:58.786 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:20:58.835 [default-akka.actor.default-dispatcher-223] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Str)
[info] 22:20:58.848 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "St" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StackTraceElement" :type-sig (() "StackTraceElement$") :type-id 169) (:name "StackOverflowError" :type-sig (() "StackOverflowError$") :type-id 159) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "Stream" :type-sig (() "Stream$") :type-id 153) (:name "Stream" :type-sig (() "Stream") :type-id 154) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StackTraceElement" :type-sig (() "StackTraceElement") :type-id 170) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StackOverflowError" :type-sig (() "StackOverflowError") :type-id 160) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "Stub" :type-sig (() "javax.rmi.CORBA.Stub") :type-id -1 :to-insert "javax.rmi.CORBA.Stub") (:name "StdIn" :type-sig (() "scala.io.StdIn") :type-id -1 :to-insert "scala.io.StdIn") (:name "Start" :type-sig (() "scala.collection.script.Start") :type-id -1 :to-insert "scala.collection.script.Start") (:name "Stack" :type-sig (() "scala.collection.mutable.Stack") :type-id -1 :to-insert "scala.collection.mutable.Stack") (:name "Stack" :type-sig (() "scala.collection.immutable.Stack") :type-id -1 :to-insert "scala.collection.immutable.Stack") (:name "State" :type-sig (() "javax.swing.plaf.nimbus.State") :type-id -1 :to-insert "javax.swing.plaf.nimbus.State") (:name "Style" :type-sig (() "javax.swing.text.Style") :type-id -1 :to-insert "javax.swing.text.Style") (:name "Stack" :type-sig (() "java.util.Stack") :type-id -1 :to-insert "java.util.Stack") (:name "State" :type-sig (() "org.omg.PortableServer.POAManagerPackage.State") :type-id -1 :to...
[info] 22:20:58.849 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:20:58.869 [default-akka.actor.default-dispatcher-223] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:20:58.870 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 21.
[info] 22:20:58.903 [default-akka.actor.default-dispatcher-223] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Stri)
[info] 22:20:58.905 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Str" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "Stream" :type-sig (() "Stream$") :type-id 153) (:name "Stream" :type-sig (() "Stream") :type-id 154) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "Stream" :type-sig (() "scala.collection.immutable.Stream") :type-id -1 :to-insert "scala.collection.immutable.Stream") (:name "String" :type-sig (() "java.lang.String") :type-id -1 :to-insert "java.lang.String") (:name "Stroke" :type-sig (() "java.awt.Stroke") :type-id -1 :to-insert "java.awt.Stroke") (:name "Struct" :type-sig (() "java.sql.Struct") :type-id -1 :to-insert "java.sql.Struct") (:name "StringAdd" :type-sig (() "scala.runtime.StringAdd") :type-id -1 :to-insert "scala.runtime.StringAdd") (:name "StringOps" :type-sig (() "scala.collection.immutable.StringOps") :type-id -1 :to-insert "scala.collection.immutable.StringOps") (:name "StreamView" :type-sig (() "scala.collection.immutable.StreamView") :type-id -1 :to-insert "scala.collection.immutable.StreamView") (:name "StringLike" :type-sig (() "scala.collection.immutable.StringLike") :type-id -1 :to-insert "scala.collection.immutable.StringLike") (:name "StrictMath" :type-sig (() "java.lang.StrictMath") :type-id -1 :to-insert "java.lang.StrictMath") (:name "Streamable" :type-sig (() "org.omg.CORBA.portable.Streamable") :type-id -1 :to-insert "org.omg.CORBA.portable.Streamable") (:name "Stream$Cons" :type-sig (() "scala.collection.immutable.Stream$Cons") :type-id -1 :to-insert "s...
[info] 22:20:58.921 [default-akka.actor.default-dispatcher-223] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:20:58.922 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 19.
[info] 22:20:58.965 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Stri" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "String" :type-sig (() "java.lang.String") :type-id -1 :to-insert "java.lang.String") (:name "StringAdd" :type-sig (() "scala.runtime.StringAdd") :type-id -1 :to-insert "scala.runtime.StringAdd") (:name "StringOps" :type-sig (() "scala.collection.immutable.StringOps") :type-id -1 :to-insert "scala.collection.immutable.StringOps") (:name "StringLike" :type-sig (() "scala.collection.immutable.StringLike") :type-id -1 :to-insert "scala.collection.immutable.StringLike") (:name "StrictMath" :type-sig (() "java.lang.StrictMath") :type-id -1 :to-insert "java.lang.StrictMath") (:name "StringFormat" :type-sig (() "scala.runtime.StringFormat") :type-id -1 :to-insert "scala.runtime.StringFormat") (:name "StringBuffer" :type-sig (() "java.lang.StringBuffer") :type-id -1 :to-insert "java.lang.StringBuffer") (:name "StringWriter" :type-sig (() "java.io.StringWriter") :type-id -1 :to-insert "java.io.StringWriter") (:name "StringReader" :type-sig (() "java.io.StringReader") :type-id -1 :to-insert "java.io.StringReader") (:name "StringHolder" :type-sig (() "org.omg.CORBA.StringHolder") :type-id -1 :to-insert "org.omg.CORBA.StringHolder") (:name "StringBuilder" :type-sig (() "scala.collection.mutable.StringBuilder") :type-id -1 :to-insert "scala.collection.mutable.StringBuilder") (:name "StringContext" :type-sig (() "scala.StringContext") :type-id -1 :to-insert...
[info] 22:20:59.772 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 339)
[info] 22:20:59.779 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:20:59.781 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 710 (var val varField valField functionCall operator param class trait object package)) 340)
[info] 22:20:59.823 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 339)
[info] 22:20:59.824 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:20:59.824 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (class 600 606) (param 626 639) (trait 641 666) (param 672 682) (trait 684 701)))) 340)
[info] 22:21:03.493 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:21:03.512 [default-akka.actor.default-dispatcher-223] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bo)
[info] 22:21:03.566 [default-akka.actor.default-dispatcher-223] INFO  o.e.core.RichPresentationCompiler - Found 699 members.
[info] 22:21:03.567 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 11.
[info] 22:21:03.570 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:21:03.604 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPart" :type-sig (() "String") :type-id 180) (:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 181) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.BooleanControl") (:name "BorderUIResource" :type-sig ((...
[info] 22:21:03.610 [default-akka.actor.default-dispatcher-223] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bod)
[info] 22:21:03.631 [default-akka.actor.default-dispatcher-223] INFO  o.e.core.RichPresentationCompiler - Found 699 members.
[info] 22:21:03.631 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:21:03.632 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "BodyPart" :type-sig (() "String") :type-id 182) (:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 183) (:name "body" :type-sig (() "body$") :type-id 52)))) 342)
[info] 22:21:04.132 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:21:04.134 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:21:05.127 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 343)
[info] 22:21:05.133 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:21:05.136 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 712 (var val varField valField functionCall operator param class trait object package)) 344)
[info] 22:21:05.171 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 343)
[info] 22:21:05.172 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:21:05.172 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (class 600 606) (param 626 639) (trait 641 668) (param 674 684) (trait 686 703)))) 344)
[info] 22:21:10.138 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:21:10.140 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:21:10.311 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:21:10.316 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:21:10.319 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 715 (var val varField valField functionCall operator param class trait object package)) 346)
[info] 22:21:10.386 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 345)
[info] 22:21:10.387 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:21:10.388 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (class 600 606) (param 629 642) (trait 644 671) (param 677 687) (trait 689 706)))) 346)
[info] 22:21:13.166 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:21:13.178 [default-akka.actor.default-dispatcher-223] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:EmptyTree
[info] 22:21:13.200 [default-akka.actor.default-dispatcher-223] INFO  o.e.core.RichPresentationCompiler - Found 694 members.
[info] 22:21:13.201 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:21:13.202 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "/*")) 347)
[info] 22:21:14.311 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:21:14.317 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:21:14.320 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 720 (var val varField valField functionCall operator param class trait object package)) 349)
[info] 22:21:14.321 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:14.322 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:14.324 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:14.325 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 719 :end 719 :line 22 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:14.373 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 348)
[info] 22:21:14.374 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:21:14.375 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 349)
[info] 22:21:21.810 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:21:21.816 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:21:21.820 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:21.821 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 754 (var val varField valField functionCall operator param class trait object package)) 351)
[info] 22:21:21.822 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:21.823 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:21.823 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 753 :end 753 :line 22 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:21.849 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 350)
[info] 22:21:21.850 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:21:21.850 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 351)
[info] 22:21:24.311 [default-akka.actor.default-dispatcher-223] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:21:24.317 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:21:24.321 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 767 (var val varField valField functionCall operator param class trait object package)) 353)
[info] 22:21:24.324 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:24.324 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:24.325 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:24.326 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 766 :end 766 :line 22 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:21:24.362 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 352)
[info] 22:21:24.363 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:21:24.363 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 353)
[info] 22:21:26.829 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 354)
[info] 22:21:26.836 [default-akka.actor.default-dispatcher-304] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:21:26.837 [default-akka.actor.default-dispatcher-304] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 713 (var val varField valField functionCall operator param class trait object package)) 355)
[info] 22:21:26.870 [default-akka.actor.default-dispatcher-304] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 354)
[info] 22:21:26.871 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:21:26.872 [default-akka.actor.default-dispatcher-228] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (class 600 606) (param 627 640) (trait 642 669) (param 675 685) (trait 687 704)))) 355)
[info] 22:22:32.188 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:22:32.189 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:22:32.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:22:32.817 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:22:32.819 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 687 (var val varField valField functionCall operator param class trait object package)) 357)
[info] 22:22:32.864 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type BodyPart" :beg 634 :end 642 :line 17 :col 52 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:22:32.868 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 356)
[info] 22:22:32.869 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:22:32.870 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 601 614) (trait 616 643) (param 649 659) (trait 661 678)))) 357)
[info] 22:22:36.255 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:36.272 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(St)
[info] 22:22:36.305 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 698 members.
[info] 22:22:36.307 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 25.
[info] 22:22:36.365 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:36.399 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Str)
[info] 22:22:36.406 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "St" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StackTraceElement" :type-sig (() "StackTraceElement$") :type-id 169) (:name "StackOverflowError" :type-sig (() "StackOverflowError$") :type-id 159) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "Stream" :type-sig (() "Stream$") :type-id 153) (:name "Stream" :type-sig (() "Stream") :type-id 154) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StackTraceElement" :type-sig (() "StackTraceElement") :type-id 170) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StackOverflowError" :type-sig (() "StackOverflowError") :type-id 160) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "Stub" :type-sig (() "javax.rmi.CORBA.Stub") :type-id -1 :to-insert "javax.rmi.CORBA.Stub") (:name "StdIn" :type-sig (() "scala.io.StdIn") :type-id -1 :to-insert "scala.io.StdIn") (:name "Start" :type-sig (() "scala.collection.script.Start") :type-id -1 :to-insert "scala.collection.script.Start") (:name "Stack" :type-sig (() "scala.collection.mutable.Stack") :type-id -1 :to-insert "scala.collection.mutable.Stack") (:name "Stack" :type-sig (() "scala.collection.immutable.Stack") :type-id -1 :to-insert "scala.collection.immutable.Stack") (:name "State" :type-sig (() "javax.swing.plaf.nimbus.State") :type-id -1 :to-insert "javax.swing.plaf.nimbus.State") (:name "Style" :type-sig (() "javax.swing.text.Style") :type-id -1 :to-insert "javax.swing.text.Style") (:name "Stack" :type-sig (() "java.util.Stack") :type-id -1 :to-insert "java.util.Stack") (:name "State" :type-sig (() "org.omg.PortableServer.POAManagerPackage.State") :type-id -1 :to...
[info] 22:22:36.435 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 698 members.
[info] 22:22:36.437 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 21.
[info] 22:22:36.534 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Str" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "Stream" :type-sig (() "Stream$") :type-id 153) (:name "Stream" :type-sig (() "Stream") :type-id 154) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "Stream" :type-sig (() "scala.collection.immutable.Stream") :type-id -1 :to-insert "scala.collection.immutable.Stream") (:name "String" :type-sig (() "java.lang.String") :type-id -1 :to-insert "java.lang.String") (:name "Stroke" :type-sig (() "java.awt.Stroke") :type-id -1 :to-insert "java.awt.Stroke") (:name "Struct" :type-sig (() "java.sql.Struct") :type-id -1 :to-insert "java.sql.Struct") (:name "StringAdd" :type-sig (() "scala.runtime.StringAdd") :type-id -1 :to-insert "scala.runtime.StringAdd") (:name "StringOps" :type-sig (() "scala.collection.immutable.StringOps") :type-id -1 :to-insert "scala.collection.immutable.StringOps") (:name "StreamView" :type-sig (() "scala.collection.immutable.StreamView") :type-id -1 :to-insert "scala.collection.immutable.StreamView") (:name "StringLike" :type-sig (() "scala.collection.immutable.StringLike") :type-id -1 :to-insert "scala.collection.immutable.StringLike") (:name "StrictMath" :type-sig (() "java.lang.StrictMath") :type-id -1 :to-insert "java.lang.StrictMath") (:name "Streamable" :type-sig (() "org.omg.CORBA.portable.Streamable") :type-id -1 :to-insert "org.omg.CORBA.portable.Streamable") (:name "Stream$Cons" :type-sig (() "scala.collection.immutable.Stream$Cons") :type-id -1 :to-insert "s...
[info] 22:22:37.287 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 360)
[info] 22:22:37.289 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 685 (var val varField valField functionCall operator param class trait object package)) 361)
[info] 22:22:37.295 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:22:37.348 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 360)
[info] 22:22:37.352 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 601 614) (trait 616 641) (param 647 657) (trait 659 676)))) 361)
[info] 22:22:37.353 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:22:40.195 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:22:40.196 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:22:41.311 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:22:41.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:22:41.320 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 687 (var val varField valField functionCall operator param class trait object package)) 363)
[info] 22:22:41.372 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 362)
[info] 22:22:41.373 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 603 616) (trait 618 643) (param 649 659) (trait 661 678)))) 363)
[info] 22:22:41.374 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:22:44.809 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:22:44.809 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 687 (var val varField valField functionCall operator param class trait object package)) 365)
[info] 22:22:44.812 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 603 616) (trait 618 643) (param 649 659) (trait 661 678)))) 365)
[info] 22:22:44.814 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:22:44.848 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 364)
[info] 22:22:44.849 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:22:47.310 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:22:47.316 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:22:47.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 689 (var val varField valField functionCall operator param class trait object package)) 367)
[info] 22:22:47.360 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 366)
[info] 22:22:47.361 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:22:47.362 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 605 618) (trait 620 645) (param 651 661) (trait 663 680)))) 367)
[info] 22:22:54.310 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:22:54.311 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 690 (var val varField valField functionCall operator param class trait object package)) 369)
[info] 22:22:54.317 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:22:54.365 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: value c" :beg 584 :end 585 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:22:54.368 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 368)
[info] 22:22:54.370 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:22:54.372 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (val 584 585) (param 606 619) (trait 621 646) (param 652 662) (trait 664 681)))) 369)
[info] 22:22:54.458 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:54.477 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(cl)
[info] 22:22:54.508 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:22:54.510 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 25.
[info] 22:22:54.516 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cl" :completions ((:name "classOf" :type-sig (() "Class[T]") :type-id 22 :is-callable t) (:name "classManifest" :type-sig (((("m" "ClassTag[T]"))) "ClassTag[T]") :type-id 184 :is-callable t) (:name "Class" :type-sig (() "Class$") :type-id 41) (:name "Cloneable" :type-sig (() "<notype>") :type-id 7) (:name "ClassValue" :type-sig (() "ClassValue$") :type-id 37) (:name "ClassLoader" :type-sig (() "ClassLoader$") :type-id 30) (:name "ClassFormatError" :type-sig (() "ClassFormatError$") :type-id 35) (:name "ClassCastException" :type-sig (() "ClassCastException$") :type-id 34) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError$") :type-id 39) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException$") :type-id 32) (:name "CloneNotSupportedException" :type-sig (() "CloneNotSupportedException$") :type-id 28) (:name "Class" :type-sig (() "Class") :type-id 21) (:name "Cloneable" :type-sig (() "Cloneable") :type-id 25) (:name "ClassValue" :type-sig (() "ClassValue") :type-id 38) (:name "ClassLoader" :type-sig (() "ClassLoader") :type-id 31) (:name "ClassManifest" :type-sig (() "ClassManifestFactory$") :type-id 19) (:name "ClassManifest" :type-sig (() "ClassTag") :type-id 20) (:name "ClassFormatError" :type-sig (() "ClassFormatError") :type-id 36) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper$") :type-id 26) (:name "ClassCastException" :type-sig (() "ClassCastException") :type-id 24) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError") :type-id 40) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException") :type-id 33) (:name "CloneNotSupportedException" :type-sig (() "CloneNotSupportedException") :type-id 29) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper") :type-id 27) (:name "clone" :type-sig ((()) "Object") :type-id 23 :is-callable t)))) 370)
[info] 22:22:55.131 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:55.146 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(ca)
[info] 22:22:55.173 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:22:55.175 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:22:55.176 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ca")) 371)
[info] 22:22:55.275 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:55.290 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(cas)
[info] 22:22:55.315 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 696 members.
[info] 22:22:55.317 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:22:55.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cas")) 372)
[info] 22:22:55.542 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:55.591 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:22:55.613 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:22:55.614 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:22:55.615 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "case")) 373)
[info] 22:22:56.057 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:56.105 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local package>)
[info] 22:22:56.126 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 695 members.
[info] 22:22:56.127 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 25.
[info] 22:22:56.132 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "cl" :completions ((:name "classOf" :type-sig (() "Class[T]") :type-id 22 :is-callable t) (:name "classManifest" :type-sig (((("m" "ClassTag[T]"))) "ClassTag[T]") :type-id 185 :is-callable t) (:name "Class" :type-sig (() "Class$") :type-id 41) (:name "Cloneable" :type-sig (() "<notype>") :type-id 7) (:name "ClassValue" :type-sig (() "ClassValue$") :type-id 37) (:name "ClassLoader" :type-sig (() "ClassLoader$") :type-id 30) (:name "ClassFormatError" :type-sig (() "ClassFormatError$") :type-id 35) (:name "ClassCastException" :type-sig (() "ClassCastException$") :type-id 34) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError$") :type-id 39) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException$") :type-id 32) (:name "CloneNotSupportedException" :type-sig (() "CloneNotSupportedException$") :type-id 28) (:name "Class" :type-sig (() "Class") :type-id 21) (:name "Cloneable" :type-sig (() "Cloneable") :type-id 25) (:name "ClassValue" :type-sig (() "ClassValue") :type-id 38) (:name "ClassLoader" :type-sig (() "ClassLoader") :type-id 31) (:name "ClassManifest" :type-sig (() "ClassManifestFactory$") :type-id 19) (:name "ClassManifest" :type-sig (() "ClassTag") :type-id 20) (:name "ClassFormatError" :type-sig (() "ClassFormatError") :type-id 36) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper$") :type-id 26) (:name "ClassCastException" :type-sig (() "ClassCastException") :type-id 24) (:name "ClassCircularityError" :type-sig (() "ClassCircularityError") :type-id 40) (:name "ClassNotFoundException" :type-sig (() "ClassNotFoundException") :type-id 33) (:name "CloneNotSupportedException" :type-sig (() "CloneNotSupportedException") :type-id 29) (:name "ClassLoaderHelper" :type-sig (() "ClassLoaderHelper") :type-id 27) (:name "clone" :type-sig ((()) "Object") :type-id 23 :is-callable t)))) 374)
[info] 22:22:57.476 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:57.578 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Bo>)
[info] 22:22:57.587 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:57.630 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:22:57.631 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 11.
[info] 22:22:57.664 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Bo" :type-sig (() "Bo") :type-id 186) (:name "Bo" :type-sig ((()) "Bo") :type-id 187 :is-callable t) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 188) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig (() "javax.sound.sampled.BooleanControl") :type-id -1 :to-insert "javax.sound.sampled.Bo...
[info] 22:22:57.674 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local Bod>)
[info] 22:22:57.703 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:22:57.704 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:22:57.710 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "Bod" :type-sig (() "Bod") :type-id 189) (:name "Bod" :type-sig ((()) "Bod") :type-id 190 :is-callable t) (:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 191) (:name "body" :type-sig (() "body$") :type-id 52)))) 376)
[info] 22:22:59.047 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:59.079 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPartR>)
[info] 22:22:59.110 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:22:59.111 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:22:59.116 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartR" :completions ((:name "BodyPartR" :type-sig (() "BodyPartR") :type-id 192) (:name "BodyPartR" :type-sig ((()) "BodyPartR") :type-id 193 :is-callable t)))) 377)
[info] 22:22:59.426 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:59.464 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPartRu>)
[info] 22:22:59.515 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:22:59.516 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:22:59.523 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartRu" :completions ((:name "BodyPartRu" :type-sig (() "BodyPartRu") :type-id 194) (:name "BodyPartRu" :type-sig ((()) "BodyPartRu") :type-id 195 :is-callable t)))) 378)
[info] 22:22:59.597 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:22:59.618 [default-akka.actor.default-dispatcher-311] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPartRul>)
[info] 22:22:59.654 [default-akka.actor.default-dispatcher-311] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:22:59.656 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:22:59.662 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartRul" :completions ((:name "BodyPartRul" :type-sig (() "BodyPartRul") :type-id 196) (:name "BodyPartRul" :type-sig ((()) "BodyPartRul") :type-id 197 :is-callable t)))) 379)
[info] 22:23:00.265 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:00.296 [default-akka.actor.default-dispatcher-311] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPartRule>)
[info] 22:23:00.326 [default-akka.actor.default-dispatcher-311] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:23:00.327 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:23:00.331 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartRule" :completions ((:name "BodyPartRule" :type-sig (() "BodyPartRule") :type-id 198) (:name "BodyPartRule" :type-sig ((()) "BodyPartRule") :type-id 199 :is-callable t)))) 380)
[info] 22:23:00.810 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:00.811 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 712 (var val varField valField functionCall operator param class trait object package)) 382)
[info] 22:23:00.814 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:00.819 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "case classes without a parameter list are not allowed; use either case objects or case classes with an explicit `()' as a parameter list." :beg 607 :end 607 :line 16 :col 26 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:00.904 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 381)
[info] 22:23:00.905 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:00.906 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 628 641) (trait 643 668) (param 674 684) (trait 686 703)))) 382)
[info] 22:23:03.373 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:03.377 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:03.378 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 714 (var val varField valField functionCall operator param class trait object package)) 384)
[info] 22:23:03.440 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 383)
[info] 22:23:03.441 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:03.441 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 630 643) (trait 645 670) (param 676 686) (trait 688 705)))) 384)
[info] 22:23:06.015 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:06.043 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term sl
[info] 22:23:06.072 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 702 members.
[info] 22:23:06.073 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:23:06.075 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "sl" :completions ((:name "sl" :type-sig (() "<error>") :type-id 200) (:name "slick" :type-sig (() "slick$") :type-id 201)))) 385)
[info] 22:23:06.130 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:06.159 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term slo
[info] 22:23:06.174 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 702 members.
[info] 22:23:06.175 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:23:06.176 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "slo" :completions ((:name "slo" :type-sig (() "<error>") :type-id 200)))) 386)
[info] 22:23:08.310 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:08.311 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 714 (var val varField valField functionCall operator param class trait object package)) 388)
[info] 22:23:08.317 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:08.403 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 387)
[info] 22:23:08.405 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:08.406 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 630 643) (trait 645 670) (param 676 686) (trait 688 705)))) 388)
[info] 22:23:12.311 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:12.317 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:12.320 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 708 (var val varField valField functionCall operator param class trait object package)) 390)
[info] 22:23:12.324 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "case classes without a parameter list are not allowed; use either case objects or case classes with an explicit `()' as a parameter list." :beg 603 :end 603 :line 16 :col 22 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:12.424 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 389)
[info] 22:23:12.425 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 624 637) (trait 639 664) (param 670 680) (trait 682 699)))) 390)
[info] 22:23:12.426 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:12.438 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:12.457 [default-akka.actor.default-dispatcher-311] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPartR>)
[info] 22:23:12.486 [default-akka.actor.default-dispatcher-311] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:23:12.487 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:23:12.491 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartR" :completions ((:name "BodyPartR" :type-sig (() "BodyPartR") :type-id 202) (:name "BodyPartR" :type-sig ((()) "BodyPartR") :type-id 203 :is-callable t)))) 391)
[info] 22:23:12.979 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:13.020 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPartRu>)
[info] 22:23:13.052 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:23:13.053 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:23:13.057 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartRu" :completions ((:name "BodyPartRu" :type-sig (() "BodyPartRu") :type-id 204) (:name "BodyPartRu" :type-sig ((()) "BodyPartRu") :type-id 205 :is-callable t)))) 392)
[info] 22:23:13.278 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:13.310 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPartRul>)
[info] 22:23:13.404 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:23:13.406 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:23:13.411 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartRul" :completions ((:name "BodyPartRul" :type-sig (() "BodyPartRul") :type-id 206) (:name "BodyPartRul" :type-sig ((()) "BodyPartRul") :type-id 207 :is-callable t)))) 393)
[info] 22:23:13.640 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:13.659 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Template(value <local BodyPartRule>)
[info] 22:23:13.694 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 697 members.
[info] 22:23:13.695 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:23:13.698 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartRule" :completions ((:name "BodyPartRule" :type-sig (() "BodyPartRule") :type-id 208) (:name "BodyPartRule" :type-sig ((()) "BodyPartRule") :type-id 209 :is-callable t)))) 394)
[info] 22:23:14.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:14.811 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 714 (var val varField valField functionCall operator param class trait object package)) 396)
[info] 22:23:14.815 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:14.882 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 395)
[info] 22:23:14.883 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (param 630 643) (trait 645 670) (param 676 686) (trait 688 705)))) 396)
[info] 22:23:14.883 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:19.616 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:19.637 [default-akka.actor.default-dispatcher-312] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term di
[info] 22:23:19.666 [default-akka.actor.default-dispatcher-312] INFO  o.e.core.RichPresentationCompiler - Found 702 members.
[info] 22:23:19.667 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:23:19.668 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "di" :completions ((:name "di" :type-sig (() "<error>") :type-id 200)))) 397)
[info] 22:23:21.905 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:21.930 [default-akka.actor.default-dispatcher-312] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(St)
[info] 22:23:21.971 [default-akka.actor.default-dispatcher-312] INFO  o.e.core.RichPresentationCompiler - Found 703 members.
[info] 22:23:21.973 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 25.
[info] 22:23:22.014 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:22.041 [default-akka.actor.default-dispatcher-312] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Str)
[info] 22:23:22.047 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "St" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StackTraceElement" :type-sig (() "StackTraceElement$") :type-id 169) (:name "StackOverflowError" :type-sig (() "StackOverflowError$") :type-id 159) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "Stream" :type-sig (() "Stream$") :type-id 153) (:name "Stream" :type-sig (() "Stream") :type-id 154) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StackTraceElement" :type-sig (() "StackTraceElement") :type-id 170) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StackOverflowError" :type-sig (() "StackOverflowError") :type-id 160) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "Stub" :type-sig (() "javax.rmi.CORBA.Stub") :type-id -1 :to-insert "javax.rmi.CORBA.Stub") (:name "StdIn" :type-sig (() "scala.io.StdIn") :type-id -1 :to-insert "scala.io.StdIn") (:name "Start" :type-sig (() "scala.collection.script.Start") :type-id -1 :to-insert "scala.collection.script.Start") (:name "Stack" :type-sig (() "scala.collection.mutable.Stack") :type-id -1 :to-insert "scala.collection.mutable.Stack") (:name "Stack" :type-sig (() "scala.collection.immutable.Stack") :type-id -1 :to-insert "scala.collection.immutable.Stack") (:name "State" :type-sig (() "javax.swing.plaf.nimbus.State") :type-id -1 :to-insert "javax.swing.plaf.nimbus.State") (:name "Style" :type-sig (() "javax.swing.text.Style") :type-id -1 :to-insert "javax.swing.text.Style") (:name "Stack" :type-sig (() "java.util.Stack") :type-id -1 :to-insert "java.util.Stack") (:name "State" :type-sig (() "org.omg.PortableServer.POAManagerPackage.State") :type-id -1 :to...
[info] 22:23:22.074 [default-akka.actor.default-dispatcher-312] INFO  o.e.core.RichPresentationCompiler - Found 703 members.
[info] 22:23:22.075 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 21.
[info] 22:23:22.125 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Str" :completions ((:name "String" :type-sig (() "String$") :type-id 171) (:name "StrictMath" :type-sig (() "StrictMath$") :type-id 161) (:name "StringBuffer" :type-sig (() "StringBuffer$") :type-id 167) (:name "StringContext" :type-sig (() "StringContext$") :type-id 156) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 164) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException$") :type-id 163) (:name "String" :type-sig (() "String") :type-id 150) (:name "Stream" :type-sig (() "Stream$") :type-id 153) (:name "Stream" :type-sig (() "Stream") :type-id 154) (:name "StringAdd" :type-sig (((("x" "Any"))) "Any") :type-id 147 :is-callable t) (:name "StrictMath" :type-sig (() "StrictMath") :type-id 162) (:name "StringFormat" :type-sig (() "StringFormat") :type-id 149) (:name "StringCoding" :type-sig (() "StringCoding$") :type-id 165) (:name "StringBuffer" :type-sig (() "StringBuffer") :type-id 168) (:name "StringBuilder" :type-sig (() "StringBuilder$") :type-id 151) (:name "StringBuilder" :type-sig (() "StringBuilder") :type-id 152) (:name "StringContext" :type-sig (() "StringContext") :type-id 158) (:name "StringContext" :type-sig (((("parts" "<repeated>[String]"))) "StringContext") :type-id 157 :is-callable t) (:name "StringCanBuildFrom" :type-sig (() "CanBuildFrom[String, Char, String]") :type-id 146) (:name "StringIndexOutOfBoundsException" :type-sig (() "StringIndexOutOfBoundsException") :type-id 155) (:name "StringAdd" :type-sig (() "StringAdd") :type-id 148) (:name "StringCoding" :type-sig (() "StringCoding") :type-id 166) (:name "Stream" :type-sig (() "scala.collection.immutable.Stream") :type-id -1 :to-insert "scala.collection.immutable.Stream") (:name "String" :type-sig (() "java.lang.String") :type-id -1 :to-insert "java.lang.String") (:name "Stroke" :type-sig (() "java.awt.Stroke") :type-id -1 :to-insert "java.awt.Stroke") (:name "Struct" :type-sig (() "java.sql.Struct") :type-id -1 :to-insert "java.sql.Struct") (:name "StringAdd" :type-sig (() "scala.runtime.StringAdd") :type-id -1 :to-insert "scala.runtime.StringAdd") (:name "StringOps" :type-sig (() "scala.collection.immutable.StringOps") :type-id -1 :to-insert "scala.collection.immutable.StringOps") (:name "StreamView" :type-sig (() "scala.collection.immutable.StreamView") :type-id -1 :to-insert "scala.collection.immutable.StreamView") (:name "StringLike" :type-sig (() "scala.collection.immutable.StringLike") :type-id -1 :to-insert "scala.collection.immutable.StringLike") (:name "StrictMath" :type-sig (() "java.lang.StrictMath") :type-id -1 :to-insert "java.lang.StrictMath") (:name "Streamable" :type-sig (() "org.omg.CORBA.portable.Streamable") :type-id -1 :to-insert "org.omg.CORBA.portable.Streamable") (:name "Stream$Cons" :type-sig (() "scala.collection.immutable.Stream$Cons") :type-id -1 :to-insert "s...
[info] 22:23:22.810 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:22.816 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:22.818 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 729 (var val varField valField functionCall operator param class trait object package)) 401)
[info] 22:23:22.961 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 400)
[info] 22:23:22.963 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:22.963 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (param 645 658) (trait 660 685) (param 691 701) (trait 703 720)))) 401)
[info] 22:23:25.311 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:25.312 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 731 (var val varField valField functionCall operator param class trait object package)) 403)
[info] 22:23:25.317 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:25.323 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but ')' found." :beg 625 :end 625 :line 16 :col 44 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:25.324 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "':' expected but '}' found." :beg 729 :end 729 :line 21 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:25.383 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 729 :end 729 :line 21 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:25.384 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 729 :end 729 :line 21 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:25.401 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 729 :end 729 :line 21 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:25.412 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 402)
[info] 22:23:25.413 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:25.413 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 632) (object 729 729)))) 403)
[info] 22:23:28.448 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:28.471 [default-akka.actor.default-dispatcher-312] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term ov
[info] 22:23:28.505 [default-akka.actor.default-dispatcher-312] INFO  o.e.core.RichPresentationCompiler - Found 703 members.
[info] 22:23:28.507 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:23:28.508 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "ov" :completions ((:name "ov" :type-sig (() "<error>") :type-id 200) (:name "Override" :type-sig (() "Override$") :type-id 210) (:name "Override" :type-sig (() "Override") :type-id 211)))) 404)
[info] 22:23:29.711 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:29.732 [default-akka.actor.default-dispatcher-312] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term overrides
[info] 22:23:29.764 [default-akka.actor.default-dispatcher-312] INFO  o.e.core.RichPresentationCompiler - Found 703 members.
[info] 22:23:29.766 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:23:29.767 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "overrides" :completions ((:name "overrides" :type-sig (() "<error>") :type-id 200)))) 405)
[info] 22:23:30.311 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:30.312 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 740 (var val varField valField functionCall operator param class trait object package)) 407)
[info] 22:23:30.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:30.323 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "':' expected but ')' found." :beg 634 :end 634 :line 16 :col 53 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:30.324 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but '}' found." :beg 738 :end 738 :line 21 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:30.380 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 738 :end 738 :line 21 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:30.381 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 738 :end 738 :line 21 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:30.397 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 738 :end 738 :line 21 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:30.412 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 406)
[info] 22:23:30.412 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:30.413 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (object 738 738)))) 407)
[info] 22:23:31.271 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:31.291 [default-akka.actor.default-dispatcher-364] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Se)
[info] 22:23:31.337 [default-akka.actor.default-dispatcher-364] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:31.338 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 14.
[info] 22:23:31.380 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:31.441 [default-akka.actor.default-dispatcher-364] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Select(Select(This(package scala), Predef), Set)
[info] 22:23:31.447 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Se" :completions ((:name "Serializable" :type-sig (() "<notype>") :type-id 7) (:name "SecurityManager" :type-sig (() "SecurityManager$") :type-id 10) (:name "SerialVersionUID" :type-sig (() "<notype>") :type-id 7) (:name "SecurityException" :type-sig (() "SecurityException$") :type-id 12) (:name "Set" :type-sig (() "Set$") :type-id 2) (:name "Set" :type-sig (() "Set") :type-id 3) (:name "Seq" :type-sig (() "Seq$") :type-id 5) (:name "Seq" :type-sig (() "Seq") :type-id 6) (:name "Serializable" :type-sig (() "Serializable") :type-id 8) (:name "SeqCharSequence" :type-sig (() "SeqCharSequence") :type-id 1) (:name "SecurityManager" :type-sig (() "SecurityManager") :type-id 11) (:name "SerialVersionUID" :type-sig (() "SerialVersionUID") :type-id 9) (:name "seqToCharSequence" :type-sig (((("xs" "IndexedSeq[Char]"))) "CharSequence") :type-id 4 :is-callable t) (:name "SecurityException" :type-sig (() "SecurityException") :type-id 13) (:name "Seq" :type-sig (() "scala.collection.Seq") :type-id -1 :to-insert "scala.collection.Seq") (:name "Seq" :type-sig (() "scala.collection.mutable.Seq") :type-id -1 :to-insert "scala.collection.mutable.Seq") (:name "Set" :type-sig (() "scala.collection.mutable.Set") :type-id -1 :to-insert "scala.collection.mutable.Set") (:name "Set" :type-sig (() "scala.collection.Set") :type-id -1 :to-insert "scala.collection.Set") (:name "Seq" :type-sig (() "scala.collection.immutable.Seq") :type-id -1 :to-insert "scala.collection.immutable.Seq") (:name "Set" :type-sig (() "scala.collection.immutable.Set") :type-id -1 :to-insert "scala.collection.immutable.Set") (:name "Set" :type-sig (() "java.util.Set") :type-id -1 :to-insert "java.util.Set") (:name "SetLike" :type-sig (() "scala.collection.SetLike") :type-id -1 :to-insert "scala.collection.SetLike") (:name "SetLike" :type-sig (() "scala.collection.mutable.SetLike") :type-id -1 :to-insert "scala.collection.mutable.SetLike") (:name "SeqLike" :type-sig (() "scala.collection.mutable.SeqLike") :type-id -1 :to-insert "scala.collection.mutable.SeqLike") (:name "SeqLike" :type-sig (() "scala.collection.SeqLike") :type-id -1 :to-insert "scala.collection.SeqLike") (:name "SeqView" :type-sig (() "scala.collection.SeqView") :type-id -1 :to-insert "scala.collection.SeqView") (:name "Service" :type-sig (() "javax.xml.ws.Service") :type-id -1 :to-insert "javax.xml.ws.Service") (:name "Segment" :type-sig (() "javax.swing.text.Segment") :type-id -1 :to-insert "javax.swing.text.Segment") (:name "Servant" :type-sig (() "org.omg.PortableServer.Servant") :type-id -1 :to-insert "org.omg.PortableServer.Servant") (:name "SeqProxy" :type-sig (() "scala.collection.SeqProxy") :type-id -1 :to-insert "scala.collection.SeqProxy") (:name "SetProxy" :type-sig (() "scala.collection.mutable.SetProxy") :type-id -1 :to-insert "scala.collection.mutable.SetProxy") (:name "Set$Set2" :type-sig (() "scala.collection.immutable.Set$Set2") :type-id -1 :to-insert "scala.collection.immutable.Set$Set2") (:...
[info] 22:23:31.478 [default-akka.actor.default-dispatcher-364] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:31.480 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 2.
[info] 22:23:31.517 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Set" :completions ((:name "Set" :type-sig (() "Set$") :type-id 2) (:name "Set" :type-sig (() "Set") :type-id 3) (:name "Set" :type-sig (() "scala.collection.mutable.Set") :type-id -1 :to-insert "scala.collection.mutable.Set") (:name "Set" :type-sig (() "scala.collection.Set") :type-id -1 :to-insert "scala.collection.Set") (:name "Set" :type-sig (() "scala.collection.immutable.Set") :type-id -1 :to-insert "scala.collection.immutable.Set") (:name "Set" :type-sig (() "java.util.Set") :type-id -1 :to-insert "java.util.Set") (:name "SetLike" :type-sig (() "scala.collection.SetLike") :type-id -1 :to-insert "scala.collection.SetLike") (:name "SetLike" :type-sig (() "scala.collection.mutable.SetLike") :type-id -1 :to-insert "scala.collection.mutable.SetLike") (:name "SetProxy" :type-sig (() "scala.collection.mutable.SetProxy") :type-id -1 :to-insert "scala.collection.mutable.SetProxy") (:name "Set$Set2" :type-sig (() "scala.collection.immutable.Set$Set2") :type-id -1 :to-insert "scala.collection.immutable.Set$Set2") (:name "Set$Set1" :type-sig (() "scala.collection.immutable.Set$Set1") :type-id -1 :to-insert "scala.collection.immutable.Set$Set1") (:name "Set$Set3" :type-sig (() "scala.collection.immutable.Set$Set3") :type-id -1 :to-insert "scala.collection.immutable.Set$Set3") (:name "SetProxy" :type-sig (() "scala.collection.immutable.SetProxy") :type-id -1 :to-insert "scala.collection.immutable.SetProxy") (:name "Set$Set4" :type-sig (() "scala.collection.immutable.Set$Set4") :type-id -1 :to-insert "scala.collection.immutable.Set$Set4") (:name "SetProxy" :type-sig (() "scala.collection.SetProxy") :type-id -1 :to-insert "scala.collection.SetProxy") (:name "SetBuilder" :type-sig (() "scala.collection.mutable.SetBuilder") :type-id -1 :to-insert "scala.collection.mutable.SetBuilder") (:name "SetFactory" :type-sig (() "scala.collection.generic.SetFactory") :type-id -1 :to-insert "scala.collection.generic.SetFactory") (:name "SetProxyLike" :type-sig (() "scala.collection.SetProxyLike") :type-id -1 :to-insert "scala.collection.SetProxyLike") (:name "SetOverrideType" :type-sig (() "org.omg.CORBA.SetOverrideType") :type-id -1 :to-insert "org.omg.CORBA.SetOverrideType") (:name "SetLike$SubsetsItr" :type-sig (() "scala.collection.SetLike$SubsetsItr") :type-id -1 :to-insert "scala.collection.SetLike$SubsetsItr") (:name "SetOfIntegerSyntax" :type-sig (() "javax.print.attribute.SetOfIntegerSyntax") :type-id -1 :to-insert "javax.print.attribute.SetOfIntegerSyntax") (:name "Wrappers$SetWrapper" :type-sig (() "scala.collection.convert.Wrappers$SetWrapper") :type-id -1 :to-insert "scala.collection.convert.Wrappers$SetWrapper") (:name "SetOverrideTypeHelper" :type-sig (() "org.omg.CORBA.SetOverrideTypeHelper") :type-id -1 :to-insert "org.omg.CORBA.SetOverrideTypeHelper")))) 409)
[info] 22:23:33.621 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:33.648 [default-akka.actor.default-dispatcher-364] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bo)
[info] 22:23:33.695 [default-akka.actor.default-dispatcher-364] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:33.697 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 11.
[info] 22:23:33.714 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:33.756 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPartRule" :type-sig (() "BodyPartRule") :type-id 212) (:name "BodyPartRule" :type-sig (((("display" "String") ("overrides" "Set[<error>]"))) "BodyPartRule") :type-id 213 :is-callable t) (:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 214) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl" :type-sig...
[info] 22:23:33.766 [default-akka.actor.default-dispatcher-364] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bod)
[info] 22:23:33.792 [default-akka.actor.default-dispatcher-364] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:33.792 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:23:33.799 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bod" :completions ((:name "BodyPartRule" :type-sig (() "BodyPartRule") :type-id 215) (:name "BodyPartRule" :type-sig (((("display" "String") ("overrides" "Set[<error>]"))) "BodyPartRule") :type-id 216 :is-callable t) (:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 217) (:name "body" :type-sig (() "body$") :type-id 52)))) 411)
[info] 22:23:35.221 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:35.240 [default-akka.actor.default-dispatcher-364] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Select(This(package object body), BodyPartSlot)
[info] 22:23:35.279 [default-akka.actor.default-dispatcher-364] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:35.280 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:23:35.281 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartSlot" :completions ((:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 218)))) 412)
[info] 22:23:35.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:35.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 759 (var val varField valField functionCall operator param class trait object package)) 414)
[info] 22:23:35.817 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:35.923 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 415)
[info] 22:23:35.926 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 413)
[info] 22:23:35.927 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:35.927 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 759 (var val varField valField functionCall operator param class trait object package)) 416)
[info] 22:23:35.929 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (trait 636 653) (param 675 688) (trait 690 715) (param 721 731) (trait 733 750)))) 414)
[info] 22:23:35.930 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:36.050 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 415)
[info] 22:23:36.053 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:36.053 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (trait 636 653) (param 675 688) (trait 690 715) (param 721 731) (trait 733 750)))) 416)
[info] 22:23:39.180 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:39.209 [default-akka.actor.default-dispatcher-364] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(It)
[info] 22:23:39.251 [default-akka.actor.default-dispatcher-364] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:39.253 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:23:39.313 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "It" :completions ((:name "Iterable" :type-sig (() "Iterable$") :type-id 223) (:name "Iterator" :type-sig (() "Iterator$") :type-id 219) (:name "Iterator" :type-sig (() "Iterator") :type-id 220) (:name "Iterable" :type-sig (() "Iterable$") :type-id 221) (:name "Iterable" :type-sig (() "Iterable") :type-id 222) (:name "Iterable" :type-sig (() "scala.collection.mutable.Iterable") :type-id -1 :to-insert "scala.collection.mutable.Iterable") (:name "Iterable" :type-sig (() "scala.collection.Iterable") :type-id -1 :to-insert "scala.collection.Iterable") (:name "Iterable" :type-sig (() "scala.collection.immutable.Iterable") :type-id -1 :to-insert "scala.collection.immutable.Iterable") (:name "Iterator" :type-sig (() "scala.collection.Iterator") :type-id -1 :to-insert "scala.collection.Iterator") (:name "Iterable" :type-sig (() "java.lang.Iterable") :type-id -1 :to-insert "java.lang.Iterable") (:name "Iterator" :type-sig (() "java.util.Iterator") :type-id -1 :to-insert "java.util.Iterator") (:name "ItemEvent" :type-sig (() "java.awt.event.ItemEvent") :type-id -1 :to-insert "java.awt.event.ItemEvent") (:name "IterableLike" :type-sig (() "scala.collection.IterableLike") :type-id -1 :to-insert "scala.collection.IterableLike") (:name "IterableView" :type-sig (() "scala.collection.IterableView") :type-id -1 :to-insert "scala.collection.IterableView") (:name "ItemListener" :type-sig (() "java.awt.event.ItemListener") :type-id -1 :to-insert "java.awt.event.ItemListener") (:name "IterableProxy" :type-sig (() "scala.collection.IterableProxy") :type-id -1 :to-insert "scala.collection.IterableProxy") (:name "ItemSelectable" :type-sig (() "java.awt.ItemSelectable") :type-id -1 :to-insert "java.awt.ItemSelectable") (:name "IterableSplitter" :type-sig (() "scala.collection.parallel.IterableSplitter") :type-id -1 :to-insert "scala.collection.parallel.IterableSplitter") (:name "IterableViewLike" :type-sig (() "scala.collection.IterableViewLike") :type-id -1 :to-insert "scala.collection.IterableViewLike") (:name "IterableProxyLike" :type-sig (() "scala.collection.IterableProxyLike") :type-id -1 :to-insert "scala.collection.IterableProxyLike") (:name "IterableForwarder" :type-sig (() "scala.collection.generic.IterableForwarder") :type-id -1 :to-insert "scala.collection.generic.IterableForwarder") (:name "Iterator$Partner$1" :type-sig (() "scala.collection.Iterator$Partner$1") :type-id -1 :to-insert "scala.collection.Iterator$Partner$1") (:name "Iterator$Leading$1" :type-sig (() "scala.collection.Iterator$Leading$1") :type-id -1 :to-insert "scala.collection.Iterator$Leading$1") (:name "Iterator$JoinIterator" :type-sig (() "scala.collection.Iterator$JoinIterator") :type-id -1 :to-insert "scala.collection.Iterator$JoinIterator") (:name "HTMLDocument$Iterator" :type-sig (() "javax.swing.text.html.HTMLDocument$Iterator") :type-id -1 :to-insert "javax.swing.text.html.HTMLDocument$Iterator") (:name "IterableSplitter$Taken" :type-sig (() "scala.collection.p...
[info] 22:23:40.228 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:23:40.229 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:23:40.671 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 418)
[info] 22:23:40.673 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 764 (var val varField valField functionCall operator param class trait object package)) 419)
[info] 22:23:40.678 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:40.778 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 418)
[info] 22:23:40.779 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:40.779 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (trait 636 658) (param 680 693) (trait 695 720) (param 726 736) (trait 738 755)))) 419)
[info] 22:23:47.783 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:47.794 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Tr)
[info] 22:23:47.832 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:47.833 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 7.
[info] 22:23:47.893 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:47.993 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Tra)
[info] 22:23:47.996 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Tr" :completions ((:name "Triple" :type-sig (() "Triple$") :type-id 44) (:name "Triple" :type-sig (((("x" "A") ("y" "B") ("z" "C"))) "Tuple3[A, B, C]") :type-id 45 :is-callable t) (:name "Triple" :type-sig (() "Tuple3") :type-id 46) (:name "transient" :type-sig (() "<notype>") :type-id 7) (:name "Traversable" :type-sig (() "Traversable$") :type-id 47) (:name "Traversable" :type-sig (() "Traversable") :type-id 48) (:name "TraversableOnce" :type-sig (() "TraversableOnce") :type-id 49) (:name "transient" :type-sig (() "transient") :type-id 50) (:name "Try" :type-sig (() "scala.util.Try") :type-id -1 :to-insert "scala.util.Try") (:name "Track" :type-sig (() "javax.sound.midi.Track") :type-id -1 :to-insert "javax.sound.midi.Track") (:name "TreeUI" :type-sig (() "javax.swing.plaf.TreeUI") :type-id -1 :to-insert "javax.swing.plaf.TreeUI") (:name "TreeSet" :type-sig (() "scala.collection.mutable.TreeSet") :type-id -1 :to-insert "scala.collection.mutable.TreeSet") (:name "TrieMap" :type-sig (() "scala.collection.concurrent.TrieMap") :type-id -1 :to-insert "scala.collection.concurrent.TrieMap") (:name "TreeSet" :type-sig (() "scala.collection.immutable.TreeSet") :type-id -1 :to-insert "scala.collection.immutable.TreeSet") (:name "TreeMap" :type-sig (() "scala.collection.immutable.TreeMap") :type-id -1 :to-insert "scala.collection.immutable.TreeMap") (:name "TreeSet" :type-sig (() "java.util.TreeSet") :type-id -1 :to-insert "java.util.TreeSet") (:name "TreeMap" :type-sig (() "java.util.TreeMap") :type-id -1 :to-insert "java.util.TreeMap") (:name "TreeNode" :type-sig (() "javax.swing.tree.TreeNode") :type-id -1 :to-insert "javax.swing.tree.TreeNode") (:name "TreePath" :type-sig (() "javax.swing.tree.TreePath") :type-id -1 :to-insert "javax.swing.tree.TreePath") (:name "TrayIcon" :type-sig (() "java.awt.TrayIcon") :type-id -1 :to-insert "java.awt.TrayIcon") (:name "Transform" :type-sig (() "javax.xml.crypto.dsig.Transform") :type-id -1 :to-insert "javax.xml.crypto.dsig.Transform") (:name "TreeModel" :type-sig (() "javax.swing.tree.TreeModel") :type-id -1 :to-insert "javax.swing.tree.TreeModel") (:name "Transient" :type-sig (() "java.beans.Transient") :type-id -1 :to-insert "java.beans.Transient") (:name "TreeWalker" :type-sig (() "org.w3c.dom.traversal.TreeWalker") :type-id -1 :to-insert "org.w3c.dom.traversal.TreeWalker") (:name "TraitSetter" :type-sig (() "scala.runtime.TraitSetter") :type-id -1 :to-insert "scala.runtime.TraitSetter") (:name "Traversable" :type-sig (() "scala.collection.mutable.Traversable") :type-id -1 :to-insert "scala.collection.mutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.immutable.Traversable") :type-id -1 :to-insert "scala.collection.immutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.Traversable") :type-id -1 :to-insert "scala.collection.Traversable") (:name "Transformer" :type-sig (() "javax.xml.transform.Transformer") :type-id -1 :to-insert "javax.xml.tr...
[info] 22:23:48.052 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:48.053 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:23:48.114 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Tra" :completions ((:name "transient" :type-sig (() "<notype>") :type-id 7) (:name "Traversable" :type-sig (() "Traversable$") :type-id 47) (:name "Traversable" :type-sig (() "Traversable") :type-id 48) (:name "TraversableOnce" :type-sig (() "TraversableOnce") :type-id 49) (:name "transient" :type-sig (() "transient") :type-id 50) (:name "Track" :type-sig (() "javax.sound.midi.Track") :type-id -1 :to-insert "javax.sound.midi.Track") (:name "TrayIcon" :type-sig (() "java.awt.TrayIcon") :type-id -1 :to-insert "java.awt.TrayIcon") (:name "Transform" :type-sig (() "javax.xml.crypto.dsig.Transform") :type-id -1 :to-insert "javax.xml.crypto.dsig.Transform") (:name "Transient" :type-sig (() "java.beans.Transient") :type-id -1 :to-insert "java.beans.Transient") (:name "TraitSetter" :type-sig (() "scala.runtime.TraitSetter") :type-id -1 :to-insert "scala.runtime.TraitSetter") (:name "Traversable" :type-sig (() "scala.collection.mutable.Traversable") :type-id -1 :to-insert "scala.collection.mutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.immutable.Traversable") :type-id -1 :to-insert "scala.collection.immutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.Traversable") :type-id -1 :to-insert "scala.collection.Traversable") (:name "Transformer" :type-sig (() "javax.xml.transform.Transformer") :type-id -1 :to-insert "javax.xml.transform.Transformer") (:name "Transmitter" :type-sig (() "javax.sound.midi.Transmitter") :type-id -1 :to-insert "javax.sound.midi.Transmitter") (:name "Transparency" :type-sig (() "java.awt.Transparency") :type-id -1 :to-insert "java.awt.Transparency") (:name "Transferable" :type-sig (() "java.awt.datatransfer.Transferable") :type-id -1 :to-insert "java.awt.datatransfer.Transferable") (:name "TrayIconPeer" :type-sig (() "java.awt.peer.TrayIconPeer") :type-id -1 :to-insert "java.awt.peer.TrayIconPeer") (:name "TransferQueue" :type-sig (() "scala.concurrent.forkjoin.TransferQueue") :type-id -1 :to-insert "scala.concurrent.forkjoin.TransferQueue") (:name "TransferQueue" :type-sig (() "java.util.concurrent.TransferQueue") :type-id -1 :to-insert "java.util.concurrent.TransferQueue") (:name "TraversableOps" :type-sig (() "scala.collection.parallel.TraversableOps") :type-id -1 :to-insert "scala.collection.parallel.TraversableOps") (:name "TraversableView" :type-sig (() "scala.collection.TraversableView") :type-id -1 :to-insert "scala.collection.TraversableView") (:name "TraversableLike" :type-sig (() "scala.collection.TraversableLike") :type-id -1 :to-insert "scala.collection.TraversableLike") (:name "TraversableOnce" :type-sig (() "scala.collection.TraversableOnce") :type-id -1 :to-insert "scala.collection.TraversableOnce") (:name "TransferHandler" :type-sig (() "javax.swing.TransferHandler") :type-id -1 :to-insert "javax.swing.TransferHandler") (:name "TraversableProxy" :type-sig (() "scala.collection.TraversableProxy") :type-id -1 :to-insert "scala.collection.Traver...
[info] 22:23:48.235 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:23:48.235 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:23:48.516 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:48.528 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Trace)
[info] 22:23:48.550 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:48.551 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:23:48.551 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Trace")) 422)
[info] 22:23:48.641 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:48.656 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Tracer)
[info] 22:23:48.692 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:48.693 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:23:48.694 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Tracer")) 423)
[info] 22:23:49.352 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:23:49.371 [default-akka.actor.default-dispatcher-364] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Trav)
[info] 22:23:49.393 [default-akka.actor.default-dispatcher-364] INFO  o.e.core.RichPresentationCompiler - Found 704 members.
[info] 22:23:49.394 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 3.
[info] 22:23:49.420 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Trav" :completions ((:name "Traversable" :type-sig (() "Traversable$") :type-id 47) (:name "Traversable" :type-sig (() "Traversable") :type-id 48) (:name "TraversableOnce" :type-sig (() "TraversableOnce") :type-id 49) (:name "Traversable" :type-sig (() "scala.collection.mutable.Traversable") :type-id -1 :to-insert "scala.collection.mutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.immutable.Traversable") :type-id -1 :to-insert "scala.collection.immutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.Traversable") :type-id -1 :to-insert "scala.collection.Traversable") (:name "TraversableOps" :type-sig (() "scala.collection.parallel.TraversableOps") :type-id -1 :to-insert "scala.collection.parallel.TraversableOps") (:name "TraversableView" :type-sig (() "scala.collection.TraversableView") :type-id -1 :to-insert "scala.collection.TraversableView") (:name "TraversableLike" :type-sig (() "scala.collection.TraversableLike") :type-id -1 :to-insert "scala.collection.TraversableLike") (:name "TraversableOnce" :type-sig (() "scala.collection.TraversableOnce") :type-id -1 :to-insert "scala.collection.TraversableOnce") (:name "TraversableProxy" :type-sig (() "scala.collection.TraversableProxy") :type-id -1 :to-insert "scala.collection.TraversableProxy") (:name "TraversableFactory" :type-sig (() "scala.collection.generic.TraversableFactory") :type-id -1 :to-insert "scala.collection.generic.TraversableFactory") (:name "TraversableViewLike" :type-sig (() "scala.collection.TraversableViewLike") :type-id -1 :to-insert "scala.collection.TraversableViewLike") (:name "TraversableProxyLike" :type-sig (() "scala.collection.TraversableProxyLike") :type-id -1 :to-insert "scala.collection.TraversableProxyLike") (:name "TraversableForwarder" :type-sig (() "scala.collection.generic.TraversableForwarder") :type-id -1 :to-insert "scala.collection.generic.TraversableForwarder") (:name "TraversableOps$Otherwise" :type-sig (() "scala.collection.parallel.TraversableOps$Otherwise") :type-id -1 :to-insert "scala.collection.parallel.TraversableOps$Otherwise") (:name "TraversableOnce$MonadOps" :type-sig (() "scala.collection.TraversableOnce$MonadOps") :type-id -1 :to-insert "scala.collection.TraversableOnce$MonadOps") (:name "TraversableView$NoBuilder" :type-sig (() "scala.collection.TraversableView$NoBuilder") :type-id -1 :to-insert "scala.collection.TraversableView$NoBuilder") (:name "TraversableLike$WithFilter" :type-sig (() "scala.collection.TraversableLike$WithFilter") :type-id -1 :to-insert "scala.collection.TraversableLike$WithFilter") (:name "TraversableViewLike$Forced" :type-sig (() "scala.collection.TraversableViewLike$Forced") :type-id -1 :to-insert "scala.collection.TraversableViewLike$Forced") (:name "TraversableViewLike$Sliced" :type-sig (() "scala.collection.TraversableViewLike$Sliced") :type-id -1 :to-insert "scala.collection.TraversableViewLike$Sliced") (:name "TraversableViewLike$Mapped" :type-si...
[info] 22:23:50.812 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:50.813 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 767 (var val varField valField functionCall operator param class trait object package)) 426)
[info] 22:23:50.818 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:50.903 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 425)
[info] 22:23:50.904 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:50.905 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (trait 636 661) (param 683 696) (trait 698 723) (param 729 739) (trait 741 758)))) 426)
[info] 22:23:51.341 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 427)
[info] 22:23:51.346 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:51.348 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 767 (var val varField valField functionCall operator param class trait object package)) 428)
[info] 22:23:51.424 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 427)
[info] 22:23:51.425 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:51.426 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (trait 636 661) (param 683 696) (trait 698 723) (param 729 739) (trait 741 758)))) 428)
[info] 22:23:59.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:23:59.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 764 (var val varField valField functionCall operator param class trait object package)) 430)
[info] 22:23:59.812 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:23:59.814 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but '[' found." :beg 741 :end 741 :line 20 :col 17 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:59.815 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "')' expected but '}' found." :beg 762 :end 762 :line 21 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:59.870 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 741 :end 761 :line 20 :col 17 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:59.873 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 667 :end 761 :line 19 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:23:59.886 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 429)
[info] 22:23:59.889 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:23:59.889 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (trait 636 661) (param 683 696) (trait 698 723) (param 729 739) (object 741 761)))) 430)
[info] 22:24:00.242 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:24:00.243 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:24:00.308 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:24:00.325 [default-akka.actor.default-dispatcher-311] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Tr)
[info] 22:24:00.357 [default-akka.actor.default-dispatcher-311] INFO  o.e.core.RichPresentationCompiler - Found 699 members.
[info] 22:24:00.359 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 7.
[info] 22:24:00.377 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:24:00.443 [default-akka.actor.default-dispatcher-311] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Tra)
[info] 22:24:00.447 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Tr" :completions ((:name "Triple" :type-sig (() "Triple$") :type-id 44) (:name "Triple" :type-sig (((("x" "A") ("y" "B") ("z" "C"))) "Tuple3[A, B, C]") :type-id 45 :is-callable t) (:name "Triple" :type-sig (() "Tuple3") :type-id 46) (:name "transient" :type-sig (() "<notype>") :type-id 7) (:name "Traversable" :type-sig (() "Traversable$") :type-id 47) (:name "Traversable" :type-sig (() "Traversable") :type-id 48) (:name "TraversableOnce" :type-sig (() "TraversableOnce") :type-id 49) (:name "transient" :type-sig (() "transient") :type-id 50) (:name "Try" :type-sig (() "scala.util.Try") :type-id -1 :to-insert "scala.util.Try") (:name "Track" :type-sig (() "javax.sound.midi.Track") :type-id -1 :to-insert "javax.sound.midi.Track") (:name "TreeUI" :type-sig (() "javax.swing.plaf.TreeUI") :type-id -1 :to-insert "javax.swing.plaf.TreeUI") (:name "TreeSet" :type-sig (() "scala.collection.mutable.TreeSet") :type-id -1 :to-insert "scala.collection.mutable.TreeSet") (:name "TrieMap" :type-sig (() "scala.collection.concurrent.TrieMap") :type-id -1 :to-insert "scala.collection.concurrent.TrieMap") (:name "TreeSet" :type-sig (() "scala.collection.immutable.TreeSet") :type-id -1 :to-insert "scala.collection.immutable.TreeSet") (:name "TreeMap" :type-sig (() "scala.collection.immutable.TreeMap") :type-id -1 :to-insert "scala.collection.immutable.TreeMap") (:name "TreeSet" :type-sig (() "java.util.TreeSet") :type-id -1 :to-insert "java.util.TreeSet") (:name "TreeMap" :type-sig (() "java.util.TreeMap") :type-id -1 :to-insert "java.util.TreeMap") (:name "TreeNode" :type-sig (() "javax.swing.tree.TreeNode") :type-id -1 :to-insert "javax.swing.tree.TreeNode") (:name "TreePath" :type-sig (() "javax.swing.tree.TreePath") :type-id -1 :to-insert "javax.swing.tree.TreePath") (:name "TrayIcon" :type-sig (() "java.awt.TrayIcon") :type-id -1 :to-insert "java.awt.TrayIcon") (:name "Transform" :type-sig (() "javax.xml.crypto.dsig.Transform") :type-id -1 :to-insert "javax.xml.crypto.dsig.Transform") (:name "TreeModel" :type-sig (() "javax.swing.tree.TreeModel") :type-id -1 :to-insert "javax.swing.tree.TreeModel") (:name "Transient" :type-sig (() "java.beans.Transient") :type-id -1 :to-insert "java.beans.Transient") (:name "TreeWalker" :type-sig (() "org.w3c.dom.traversal.TreeWalker") :type-id -1 :to-insert "org.w3c.dom.traversal.TreeWalker") (:name "TraitSetter" :type-sig (() "scala.runtime.TraitSetter") :type-id -1 :to-insert "scala.runtime.TraitSetter") (:name "Traversable" :type-sig (() "scala.collection.mutable.Traversable") :type-id -1 :to-insert "scala.collection.mutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.immutable.Traversable") :type-id -1 :to-insert "scala.collection.immutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.Traversable") :type-id -1 :to-insert "scala.collection.Traversable") (:name "Transformer" :type-sig (() "javax.xml.transform.Transformer") :type-id -1 :to-insert "javax.xml.tr...
[info] 22:24:00.465 [default-akka.actor.default-dispatcher-311] INFO  o.e.core.RichPresentationCompiler - Found 699 members.
[info] 22:24:00.466 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 5.
[info] 22:24:00.503 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Tra" :completions ((:name "transient" :type-sig (() "<notype>") :type-id 7) (:name "Traversable" :type-sig (() "Traversable$") :type-id 47) (:name "Traversable" :type-sig (() "Traversable") :type-id 48) (:name "TraversableOnce" :type-sig (() "TraversableOnce") :type-id 49) (:name "transient" :type-sig (() "transient") :type-id 50) (:name "Track" :type-sig (() "javax.sound.midi.Track") :type-id -1 :to-insert "javax.sound.midi.Track") (:name "TrayIcon" :type-sig (() "java.awt.TrayIcon") :type-id -1 :to-insert "java.awt.TrayIcon") (:name "Transform" :type-sig (() "javax.xml.crypto.dsig.Transform") :type-id -1 :to-insert "javax.xml.crypto.dsig.Transform") (:name "Transient" :type-sig (() "java.beans.Transient") :type-id -1 :to-insert "java.beans.Transient") (:name "TraitSetter" :type-sig (() "scala.runtime.TraitSetter") :type-id -1 :to-insert "scala.runtime.TraitSetter") (:name "Traversable" :type-sig (() "scala.collection.mutable.Traversable") :type-id -1 :to-insert "scala.collection.mutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.immutable.Traversable") :type-id -1 :to-insert "scala.collection.immutable.Traversable") (:name "Traversable" :type-sig (() "scala.collection.Traversable") :type-id -1 :to-insert "scala.collection.Traversable") (:name "Transformer" :type-sig (() "javax.xml.transform.Transformer") :type-id -1 :to-insert "javax.xml.transform.Transformer") (:name "Transmitter" :type-sig (() "javax.sound.midi.Transmitter") :type-id -1 :to-insert "javax.sound.midi.Transmitter") (:name "Transparency" :type-sig (() "java.awt.Transparency") :type-id -1 :to-insert "java.awt.Transparency") (:name "Transferable" :type-sig (() "java.awt.datatransfer.Transferable") :type-id -1 :to-insert "java.awt.datatransfer.Transferable") (:name "TrayIconPeer" :type-sig (() "java.awt.peer.TrayIconPeer") :type-id -1 :to-insert "java.awt.peer.TrayIconPeer") (:name "TransferQueue" :type-sig (() "scala.concurrent.forkjoin.TransferQueue") :type-id -1 :to-insert "scala.concurrent.forkjoin.TransferQueue") (:name "TransferQueue" :type-sig (() "java.util.concurrent.TransferQueue") :type-id -1 :to-insert "java.util.concurrent.TransferQueue") (:name "TraversableOps" :type-sig (() "scala.collection.parallel.TraversableOps") :type-id -1 :to-insert "scala.collection.parallel.TraversableOps") (:name "TraversableView" :type-sig (() "scala.collection.TraversableView") :type-id -1 :to-insert "scala.collection.TraversableView") (:name "TraversableLike" :type-sig (() "scala.collection.TraversableLike") :type-id -1 :to-insert "scala.collection.TraversableLike") (:name "TraversableOnce" :type-sig (() "scala.collection.TraversableOnce") :type-id -1 :to-insert "scala.collection.TraversableOnce") (:name "TransferHandler" :type-sig (() "javax.swing.TransferHandler") :type-id -1 :to-insert "javax.swing.TransferHandler") (:name "TraversableProxy" :type-sig (() "scala.collection.TraversableProxy") :type-id -1 :to-insert "scala.collection.Traver...
[info] 22:24:02.174 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 433)
[info] 22:24:02.175 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 775 (var val varField valField functionCall operator param class trait object package)) 434)
[info] 22:24:02.179 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:02.242 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 433)
[info] 22:24:02.243 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:24:02.244 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (trait 636 661) (param 683 696) (trait 698 723) (param 729 739) (trait 741 766)))) 434)
[info] 22:24:05.673 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:24:05.689 [default-akka.actor.default-dispatcher-311] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Se)
[info] 22:24:05.710 [default-akka.actor.default-dispatcher-311] INFO  o.e.core.RichPresentationCompiler - Found 699 members.
[info] 22:24:05.711 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 14.
[info] 22:24:05.768 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Se" :completions ((:name "Serializable" :type-sig (() "<notype>") :type-id 7) (:name "SecurityManager" :type-sig (() "SecurityManager$") :type-id 10) (:name "SerialVersionUID" :type-sig (() "<notype>") :type-id 7) (:name "SecurityException" :type-sig (() "SecurityException$") :type-id 12) (:name "Set" :type-sig (() "Set$") :type-id 2) (:name "Set" :type-sig (() "Set") :type-id 3) (:name "Seq" :type-sig (() "Seq$") :type-id 5) (:name "Seq" :type-sig (() "Seq") :type-id 6) (:name "Serializable" :type-sig (() "Serializable") :type-id 8) (:name "SeqCharSequence" :type-sig (() "SeqCharSequence") :type-id 1) (:name "SecurityManager" :type-sig (() "SecurityManager") :type-id 11) (:name "SerialVersionUID" :type-sig (() "SerialVersionUID") :type-id 9) (:name "seqToCharSequence" :type-sig (((("xs" "IndexedSeq[Char]"))) "CharSequence") :type-id 4 :is-callable t) (:name "SecurityException" :type-sig (() "SecurityException") :type-id 13) (:name "Seq" :type-sig (() "scala.collection.Seq") :type-id -1 :to-insert "scala.collection.Seq") (:name "Seq" :type-sig (() "scala.collection.mutable.Seq") :type-id -1 :to-insert "scala.collection.mutable.Seq") (:name "Set" :type-sig (() "scala.collection.mutable.Set") :type-id -1 :to-insert "scala.collection.mutable.Set") (:name "Set" :type-sig (() "scala.collection.Set") :type-id -1 :to-insert "scala.collection.Set") (:name "Seq" :type-sig (() "scala.collection.immutable.Seq") :type-id -1 :to-insert "scala.collection.immutable.Seq") (:name "Set" :type-sig (() "scala.collection.immutable.Set") :type-id -1 :to-insert "scala.collection.immutable.Set") (:name "Set" :type-sig (() "java.util.Set") :type-id -1 :to-insert "java.util.Set") (:name "SetLike" :type-sig (() "scala.collection.SetLike") :type-id -1 :to-insert "scala.collection.SetLike") (:name "SetLike" :type-sig (() "scala.collection.mutable.SetLike") :type-id -1 :to-insert "scala.collection.mutable.SetLike") (:name "SeqLike" :type-sig (() "scala.collection.mutable.SeqLike") :type-id -1 :to-insert "scala.collection.mutable.SeqLike") (:name "SeqLike" :type-sig (() "scala.collection.SeqLike") :type-id -1 :to-insert "scala.collection.SeqLike") (:name "SeqView" :type-sig (() "scala.collection.SeqView") :type-id -1 :to-insert "scala.collection.SeqView") (:name "Service" :type-sig (() "javax.xml.ws.Service") :type-id -1 :to-insert "javax.xml.ws.Service") (:name "Segment" :type-sig (() "javax.swing.text.Segment") :type-id -1 :to-insert "javax.swing.text.Segment") (:name "Servant" :type-sig (() "org.omg.PortableServer.Servant") :type-id -1 :to-insert "org.omg.PortableServer.Servant") (:name "SeqProxy" :type-sig (() "scala.collection.SeqProxy") :type-id -1 :to-insert "scala.collection.SeqProxy") (:name "SetProxy" :type-sig (() "scala.collection.mutable.SetProxy") :type-id -1 :to-insert "scala.collection.mutable.SetProxy") (:name "Set$Set2" :type-sig (() "scala.collection.immutable.Set$Set2") :type-id -1 :to-insert "scala.collection.immutable.Set$Set2") (:...
[info] 22:24:06.246 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:24:06.248 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:24:06.312 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:24:06.313 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 767 (var val varField valField functionCall operator param class trait object package)) 437)
[info] 22:24:06.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:06.394 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 436)
[info] 22:24:06.395 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:24:06.396 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (trait 636 661) (param 683 696) (trait 698 723) (param 729 739) (trait 741 758)))) 437)
[info] 22:24:06.678 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 438)
[info] 22:24:06.683 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:06.686 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 767 (var val varField valField functionCall operator param class trait object package)) 439)
[info] 22:24:06.751 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 438)
[info] 22:24:06.752 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:24:06.752 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 608 615) (class 617 623) (valField 625 634) (trait 636 661) (param 683 696) (trait 698 723) (param 729 739) (trait 741 758)))) 439)
[info] 22:24:10.251 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:24:10.253 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:24:11.025 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:24:11.040 [default-akka.actor.default-dispatcher-311] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:EmptyTree
[info] 22:24:11.066 [default-akka.actor.default-dispatcher-311] INFO  o.e.core.RichPresentationCompiler - Found 694 members.
[info] 22:24:11.067 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:24:11.067 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "/*")) 440)
[info] 22:24:11.811 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:24:11.811 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 773 (var val varField valField functionCall operator param class trait object package)) 442)
[info] 22:24:11.814 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 442)
[info] 22:24:11.817 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:11.821 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:11.821 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:11.823 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:11.824 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 772 :end 772 :line 22 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:11.859 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 441)
[info] 22:24:11.860 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:24:20.310 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:24:20.315 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:20.317 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 774 (var val varField valField functionCall operator param class trait object package)) 444)
[info] 22:24:20.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:20.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:20.319 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:20.319 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 773 :end 773 :line 22 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:20.363 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 443)
[info] 22:24:20.364 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:24:20.365 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 444)
[info] 22:24:23.811 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:24:23.815 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:23.817 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 775 (var val varField valField functionCall operator param class trait object package)) 446)
[info] 22:24:23.818 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:23.819 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:23.821 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:23.821 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 774 :end 774 :line 22 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:23.856 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 445)
[info] 22:24:23.857 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:24:23.857 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 446)
[info] 22:24:35.311 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:24:35.316 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:35.319 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 845 (var val varField valField functionCall operator param class trait object package)) 448)
[info] 22:24:35.320 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:35.321 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:35.321 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:35.322 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 844 :end 844 :line 22 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:35.357 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 447)
[info] 22:24:35.359 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:24:35.359 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 448)
[info] 22:24:40.810 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:24:40.814 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:40.816 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 845 (var val varField valField functionCall operator param class trait object package)) 450)
[info] 22:24:40.817 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:40.818 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:40.818 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:40.819 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 844 :end 844 :line 22 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:40.851 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 449)
[info] 22:24:40.851 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:24:40.852 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 450)
[info] 22:24:43.308 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:24:43.311 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:43.313 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:43.313 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:43.314 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:43.315 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 845 :end 845 :line 22 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:43.315 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 846 (var val varField valField functionCall operator param class trait object package)) 452)
[info] 22:24:43.345 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 451)
[info] 22:24:43.346 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:24:43.347 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 452)
[info] 22:24:48.311 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:24:48.316 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:24:48.318 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 853 (var val varField valField functionCall operator param class trait object package)) 454)
[info] 22:24:48.319 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:48.320 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:48.320 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:48.321 [default-akka.actor.default-dispatcher-311] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 852 :end 852 :line 23 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:24:48.361 [default-akka.actor.default-dispatcher-364] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 453)
[info] 22:24:48.362 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 454)
[info] 22:24:48.362 [default-akka.actor.default-dispatcher-312] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:25:55.811 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:25:55.816 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:25:55.818 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 858 (var val varField valField functionCall operator param class trait object package)) 456)
[info] 22:25:55.819 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:25:55.820 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:25:55.821 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:25:55.822 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 857 :end 857 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:25:55.847 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 455)
[info] 22:25:55.848 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:25:55.848 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 456)
[info] 22:25:58.310 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:25:58.314 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:25:58.315 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 853 (var val varField valField functionCall operator param class trait object package)) 458)
[info] 22:25:58.318 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:25:58.318 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:25:58.318 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:25:58.319 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 852 :end 852 :line 23 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:25:58.344 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 457)
[info] 22:25:58.344 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 458)
[info] 22:25:58.344 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:05.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:05.813 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:05.815 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 890 (var val varField valField functionCall operator param class trait object package)) 460)
[info] 22:26:05.816 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:05.817 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:05.817 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:05.817 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 889 :end 889 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:05.843 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 459)
[info] 22:26:05.844 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:05.844 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 460)
[info] 22:26:09.810 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:09.815 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:09.818 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 876 (var val varField valField functionCall operator param class trait object package)) 462)
[info] 22:26:09.822 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:09.823 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:09.826 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:09.827 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 875 :end 875 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:09.866 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 461)
[info] 22:26:09.867 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:09.868 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 462)
[info] 22:26:12.311 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:12.317 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:12.320 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 888 (var val varField valField functionCall operator param class trait object package)) 464)
[info] 22:26:12.321 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:12.322 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:12.323 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:12.324 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 887 :end 887 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:12.362 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 463)
[info] 22:26:12.363 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:12.364 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 464)
[info] 22:26:19.311 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:19.317 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:19.319 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 910 (var val varField valField functionCall operator param class trait object package)) 466)
[info] 22:26:19.320 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:19.321 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:19.322 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:19.323 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 909 :end 909 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:19.363 [default-akka.actor.default-dispatcher-425] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 465)
[info] 22:26:19.364 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 466)
[info] 22:26:19.364 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:23.311 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:23.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:23.320 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 908 (var val varField valField functionCall operator param class trait object package)) 468)
[info] 22:26:23.321 [default-akka.actor.default-dispatcher-425] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:23.322 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:23.323 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:23.324 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 907 :end 907 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:23.369 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 467)
[info] 22:26:23.370 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:23.371 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 468)
[info] 22:26:27.309 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:27.313 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:27.315 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 899 (var val varField valField functionCall operator param class trait object package)) 470)
[info] 22:26:27.318 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:27.318 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:27.318 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:27.319 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 898 :end 898 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:27.348 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 469)
[info] 22:26:27.348 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:27.349 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 470)
[info] 22:26:29.810 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:29.816 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:29.818 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 906 (var val varField valField functionCall operator param class trait object package)) 472)
[info] 22:26:29.820 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:29.820 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:29.821 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:29.821 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 905 :end 905 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:29.852 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 471)
[info] 22:26:29.852 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:29.853 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 472)
[info] 22:26:36.310 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:36.315 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:36.316 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:36.317 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 926 (var val varField valField functionCall operator param class trait object package)) 474)
[info] 22:26:36.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:36.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:36.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 925 :end 925 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:36.349 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 473)
[info] 22:26:36.350 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 474)
[info] 22:26:36.350 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:41.311 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:41.317 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:41.320 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 904 (var val varField valField functionCall operator param class trait object package)) 476)
[info] 22:26:41.322 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:41.322 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:41.323 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:41.323 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 903 :end 903 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:41.359 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 475)
[info] 22:26:41.360 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:41.360 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 476)
[info] 22:26:43.811 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:43.816 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:43.819 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 913 (var val varField valField functionCall operator param class trait object package)) 478)
[info] 22:26:43.820 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:43.820 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:43.823 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:43.823 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 912 :end 912 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:43.851 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 477)
[info] 22:26:43.852 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 478)
[info] 22:26:43.852 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:46.309 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:46.313 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:46.315 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 909 (var val varField valField functionCall operator param class trait object package)) 480)
[info] 22:26:46.316 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:46.319 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:46.320 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:46.321 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 908 :end 908 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:46.344 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 479)
[info] 22:26:46.345 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:46.345 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 480)
[info] 22:26:54.311 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:54.317 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:54.319 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 931 (var val varField valField functionCall operator param class trait object package)) 482)
[info] 22:26:54.321 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:54.323 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:54.324 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:54.325 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 930 :end 930 :line 24 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:54.363 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 481)
[info] 22:26:54.364 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 482)
[info] 22:26:54.365 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:57.808 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:26:57.811 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:57.812 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:57.813 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:57.813 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 942 (var val varField valField functionCall operator param class trait object package)) 484)
[info] 22:26:57.814 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:57.814 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 941 :end 941 :line 25 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:57.855 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 483)
[info] 22:26:57.857 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:57.858 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 484)
[info] 22:26:58.692 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 485)
[info] 22:26:58.699 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:26:58.702 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 942 (var val varField valField functionCall operator param class trait object package)) 486)
[info] 22:26:58.703 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:58.704 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:58.705 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:58.705 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 941 :end 941 :line 25 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:26:58.747 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 485)
[info] 22:26:58.749 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:26:58.749 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 486)
[info] 22:27:00.810 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:27:00.814 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:27:00.816 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:27:00.816 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 944 (var val varField valField functionCall operator param class trait object package)) 488)
[info] 22:27:00.817 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:27:00.818 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "unclosed comment" :beg 584 :end 584 :line 16 :col 3 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:27:00.819 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "'}' expected but eof found." :beg 943 :end 943 :line 25 :col 2 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:27:00.848 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 487)
[info] 22:27:00.848 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:27:00.849 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579)))) 488)
[info] 22:27:03.311 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:27:03.317 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:27:03.319 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 945 (var val varField valField functionCall operator param class trait object package)) 490)
[info] 22:27:03.388 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 489)
[info] 22:27:03.389 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:27:03.390 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 788 795) (class 797 803) (valField 805 812) (trait 814 839) (param 861 874) (trait 876 901) (param 907 917) (trait 919 936)))) 490)
[info] 22:27:04.637 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 491)
[info] 22:27:04.638 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 945 (var val varField valField functionCall operator param class trait object package)) 492)
[info] 22:27:04.641 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:27:04.684 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 491)
[info] 22:27:04.685 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:27:04.685 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 788 795) (class 797 803) (valField 805 812) (trait 814 839) (param 861 874) (trait 876 901) (param 907 917) (trait 919 936)))) 492)
[info] 22:27:07.309 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:27:07.312 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:27:07.314 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 939 (var val varField valField functionCall operator param class trait object package)) 494)
[info] 22:27:07.365 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 493)
[info] 22:27:07.367 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:27:07.367 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 782 789) (class 791 797) (valField 799 806) (trait 808 833) (param 855 868) (trait 870 895) (param 901 911) (trait 913 930)))) 494)
[info] 22:27:07.716 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 495)
[info] 22:27:07.717 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 939 (var val varField valField functionCall operator param class trait object package)) 496)
[info] 22:27:07.722 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:27:07.791 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 495)
[info] 22:27:07.792 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:27:07.792 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 782 789) (class 791 797) (valField 799 806) (trait 808 833) (param 855 868) (trait 870 895) (param 901 911) (trait 913 930)))) 496)
[info] 22:27:15.311 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:27:15.318 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:27:15.321 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 943 (var val varField valField functionCall operator param class trait object package)) 498)
[info] 22:27:15.393 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 497)
[info] 22:27:15.395 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:27:15.396 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 786 793) (class 795 801) (valField 803 810) (trait 812 837) (param 859 872) (trait 874 899) (param 905 915) (trait 917 934)))) 498)
[info] 22:27:16.343 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:27:16.344 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:27:16.949 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 499)
[info] 22:27:16.951 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 945 (var val varField valField functionCall operator param class trait object package)) 500)
[info] 22:27:16.952 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:27:16.993 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 499)
[info] 22:27:16.994 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:27:16.994 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 788 795) (class 797 803) (valField 805 812) (trait 814 839) (param 861 874) (trait 876 901) (param 907 917) (trait 919 936)))) 500)
[info] 22:27:28.311 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:27:28.318 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:27:28.320 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 933 (var val varField valField functionCall operator param class trait object package)) 502)
[info] 22:27:28.324 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but ']' found." :beg 923 :end 923 :line 24 :col 21 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:27:28.324 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "']' expected but '}' found." :beg 931 :end 931 :line 25 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:27:28.351 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:27:28.353 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:27:28.380 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 923 :end 930 :line 24 :col 21 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:27:28.381 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 845 :end 930 :line 23 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:27:28.395 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 501)
[info] 22:27:28.396 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:27:28.397 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 788 795) (class 797 803) (valField 805 812) (trait 814 839) (param 861 874) (trait 876 901) (param 907 917) (trait 919 930)))) 502)
[info] 22:27:29.040 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:27:29.050 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(Bo)
[info] 22:27:29.074 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 699 members.
[info] 22:27:29.075 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 11.
[info] 22:27:29.100 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "Bo" :completions ((:name "Boolean" :type-sig (() "Boolean$") :type-id 57) (:name "Boolean2boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 53 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError$") :type-id 59) (:name "Boolean" :type-sig (() "Boolean") :type-id 58) (:name "BodyPartRule" :type-sig (() "BodyPartRule") :type-id 224) (:name "BodyPartRule" :type-sig (((("display" "String") ("exclude" "Traversable[BodyPartSlot]"))) "BodyPartRule") :type-id 225 :is-callable t) (:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 226) (:name "booleanWrapper" :type-sig (((("x" "Boolean"))) "RichBoolean") :type-id 56 :is-callable t) (:name "boolean2Boolean" :type-sig (((("x" "Boolean"))) "Boolean") :type-id 54 :is-callable t) (:name "booleanArrayOps" :type-sig (((("xs" "Array[Boolean]"))) "ArrayOps[Boolean]") :type-id 55 :is-callable t) (:name "BootstrapMethodError" :type-sig (() "BootstrapMethodError") :type-id 60) (:name "body" :type-sig (() "body$") :type-id 52) (:name "Box" :type-sig (() "javax.swing.Box") :type-id -1 :to-insert "javax.swing.Box") (:name "Book" :type-sig (() "java.awt.print.Book") :type-id -1 :to-insert "java.awt.print.Book") (:name "Boxed" :type-sig (() "scala.runtime.Boxed") :type-id -1 :to-insert "scala.runtime.Boxed") (:name "Border" :type-sig (() "javax.swing.border.Border") :type-id -1 :to-insert "javax.swing.border.Border") (:name "Bounds" :type-sig (() "org.omg.CORBA.Bounds") :type-id -1 :to-insert "org.omg.CORBA.Bounds") (:name "Bounds" :type-sig (() "org.omg.CORBA.TypeCodePackage.Bounds") :type-id -1 :to-insert "org.omg.CORBA.TypeCodePackage.Bounds") (:name "Boolean" :type-sig (() "scala.Boolean") :type-id -1 :to-insert "scala.Boolean") (:name "BoxView" :type-sig (() "javax.swing.text.BoxView") :type-id -1 :to-insert "javax.swing.text.BoxView") (:name "Boolean" :type-sig (() "java.lang.Boolean") :type-id -1 :to-insert "java.lang.Boolean") (:name "BoxedUnit" :type-sig (() "scala.runtime.BoxedUnit") :type-id -1 :to-insert "scala.runtime.BoxedUnit") (:name "BoxLayout" :type-sig (() "javax.swing.BoxLayout") :type-id -1 :to-insert "javax.swing.BoxLayout") (:name "BooleanRef" :type-sig (() "scala.runtime.BooleanRef") :type-id -1 :to-insert "scala.runtime.BooleanRef") (:name "Box$Filler" :type-sig (() "javax.swing.Box$Filler") :type-id -1 :to-insert "javax.swing.Box$Filler") (:name "BooleanProp" :type-sig (() "scala.sys.BooleanProp") :type-id -1 :to-insert "scala.sys.BooleanProp") (:name "BoxesRunTime" :type-sig (() "scala.runtime.BoxesRunTime") :type-id -1 :to-insert "scala.runtime.BoxesRunTime") (:name "BorderLayout" :type-sig (() "java.awt.BorderLayout") :type-id -1 :to-insert "java.awt.BorderLayout") (:name "BorderFactory" :type-sig (() "javax.swing.BorderFactory") :type-id -1 :to-insert "javax.swing.BorderFactory") (:name "BooleanHolder" :type-sig (() "org.omg.CORBA.BooleanHolder") :type-id -1 :to-insert "org.omg.CORBA.BooleanHolder") (:name "BooleanControl...
[info] 22:27:30.605 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:27:30.617 [default-akka.actor.default-dispatcher-77] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Select(This(package object body), BodyPartSlot)
[info] 22:27:30.643 [default-akka.actor.default-dispatcher-77] INFO  o.e.core.RichPresentationCompiler - Found 699 members.
[info] 22:27:30.644 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 1.
[info] 22:27:30.645 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "BodyPartSlot" :completions ((:name "BodyPartSlot" :type-sig (() "BodyPartSlot") :type-id 227)))) 504)
[info] 22:27:32.752 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 505)
[info] 22:27:32.754 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 945 (var val varField valField functionCall operator param class trait object package)) 506)
[info] 22:27:32.757 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:27:32.829 [default-akka.actor.default-dispatcher-411] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 505)
[info] 22:27:32.830 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:27:32.830 [default-akka.actor.default-dispatcher-77] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 788 795) (class 797 803) (valField 805 812) (trait 814 839) (param 861 874) (trait 876 901) (param 907 917) (trait 919 936)))) 506)
[info] 22:28:19.393 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:28:19.410 [default-akka.actor.default-dispatcher-413] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:Ident(xb)
[info] 22:28:19.430 [default-akka.actor.default-dispatcher-413] INFO  o.e.core.RichPresentationCompiler - Found 698 members.
[info] 22:28:19.431 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 0.
[info] 22:28:19.432 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "existingParts:xb")) 507)
[info] 22:28:20.375 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:28:20.376 [Thread-2] DEBUG org.ensime.indexer.SourceResolver - updating sources
[info] 22:28:20.810 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:28:20.811 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 945 (var val varField valField functionCall operator param class trait object package)) 509)
[info] 22:28:20.815 [default-akka.actor.default-dispatcher-425] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:28:20.891 [default-akka.actor.default-dispatcher-425] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 508)
[info] 22:28:20.892 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:28:20.892 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 788 795) (class 797 803) (valField 805 812) (trait 814 839) (param 861 874) (trait 876 901) (param 907 917) (trait 919 936)))) 509)
[info] 22:28:23.809 [default-akka.actor.default-dispatcher-425] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends...
[info] 22:28:23.813 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:28:23.815 [default-akka.actor.default-dispatcher-469] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 932 (var val varField valField functionCall operator param class trait object package)) 511)
[info] 22:28:23.817 [default-akka.actor.default-dispatcher-469] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "identifier expected but ':' found." :beg 861 :end 861 :line 23 :col 19 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:28:23.818 [default-akka.actor.default-dispatcher-469] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "':' expected but '}' found." :beg 930 :end 930 :line 25 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:28:23.861 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "not found: type <error>" :beg 930 :end 930 :line 25 :col 1 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:28:23.861 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:scala-notes (:is-full nil :notes ((:severity error :msg "only classes can have declared but undefined members" :beg 845 :end 929 :line 23 :col 7 :file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala"))))
[info] 22:28:23.875 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 510)
[info] 22:28:23.876 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:28:23.877 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 788 795) (class 797 803) (valField 805 812) (trait 814 839) (param 861 868) (object 930 930)))) 511)
[info] 22:28:23.962 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:completions (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :contents "package object body {\n\n  /** A body has a certain set of slots to be occupied by body parts. Note that\n    * a single body doesn't need all these slots (and in fact, can't have them\n    * all and still make sense). */\n  sealed trait BodyPartSlot\n  case object Head extends BodyPartSlot\n  case object Torso extends BodyPartSlot\n  case object LeftArm extends Bo...
[info] 22:28:23.976 [default-akka.actor.default-dispatcher-413] DEBUG o.e.core.RichPresentationCompiler - Completing at tree:term pa
[info] 22:28:23.995 [default-akka.actor.default-dispatcher-413] INFO  o.e.core.RichPresentationCompiler - Found 699 members.
[info] 22:28:23.996 [Scala Presentation Compiler []] INFO  o.e.core.RichPresentationCompiler - Filtered down to 12.
[info] 22:28:23.999 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:prefix "pa" :completions ((:name "pa" :type-sig (() "Map[BodyPartSlot, String]") :type-id 228) (:name "partsToAdd" :type-sig (() "Set[BodyPartSlot]") :type-id 229) (:name "package" :type-sig (() "package$") :type-id 172) (:name "Pair" :type-sig (() "Pair$") :type-id 230) (:name "Pair" :type-sig (((("x" "A") ("y" "B"))) "Tuple2[A, B]") :type-id 231 :is-callable t) (:name "package" :type-sig (() "package$") :type-id 235) (:name "Package" :type-sig (() "Package$") :type-id 239) (:name "PartialFunction" :type-sig (() "PartialFunction$") :type-id 236) (:name "PartialFunction" :type-sig (((("f" "Function1[A, B]"))) "PartialFunction[A, B]") :type-id 237 :is-callable t) (:name "Pair" :type-sig (() "Tuple2") :type-id 232) (:name "Package" :type-sig (() "Package") :type-id 240) (:name "PartialOrdering" :type-sig (() "PartialOrdering") :type-id 234) (:name "PartialFunction" :type-sig (() "PartialFunction") :type-id 238) (:name "PartialFunction" :type-sig (((("f" "Function1[A, B]"))) "PartialFunction[A, B]") :type-id 237 :is-callable t) (:name "PartiallyOrdered" :type-sig (() "PartiallyOrdered") :type-id 233)))) 512)
[info] 22:28:26.365 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:typecheck-file (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala")) 513)
[info] 22:28:26.367 [default-akka.actor.default-dispatcher-413] INFO  o.e.s.protocol.swank.SwankProtocol - Received msg: (:swank-rpc (swank:symbol-designations "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" 0 937 (var val varField valField functionCall operator param class trait object package)) 514)
[info] 22:28:26.372 [default-akka.actor.default-dispatcher-425] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:clear-all-scala-notes)
[info] 22:28:26.441 [default-akka.actor.default-dispatcher-425] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok t) 513)
[info] 22:28:26.442 [default-akka.actor.default-dispatcher-469] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:full-typecheck-finished)
[info] 22:28:26.442 [default-akka.actor.default-dispatcher-469] INFO  o.e.s.protocol.swank.SwankProtocol - Writing: (:return (:ok (:file "/home/wohanley/software/dance-suggestions/src/main/scala/dance/body/package.scala" :syms ((trait 273 285) (trait 314 326) (trait 357 369) (trait 401 413) (trait 441 453) (trait 523 535) (trait 567 579) (valField 788 795) (class 797 803) (valField 805 812) (trait 814 839) (param 861 866) (trait 868 893) (param 899 909) (trait 911 928)))) 514)
